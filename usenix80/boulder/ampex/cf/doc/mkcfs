.th MKCFS VIII 6/79
.sh NAME
mkcfs - make a contiguous file system
.sh SYNOPSIS
/etc/mkcfs Ufs firstb lastb chsiz bsiz [cdev]
.sh DESCRIPTION
	Causes a normal Unix file system "Ufs" to have associated with it
a contiguous file system(cfs).  A free list for the cfs is created in a
file with pathname Ufs/.flist.  The cfs spans blocks
.it firstb
to
.it lastb
, has chunk size
.it chsiz
512-byte blocks, boundary size
.it bsiz
chunks.  The
data portion of the created file system is to reside on Unix major-minor
device
.it cdev
if specified, or on the same device as Ufs by default.
.s2
	The Ufs should not be mounted at the time this is run.  Input
numbers are decimal by default, or octal if they have a leading '0'.
.sh "SEE ALSO"
fs(V), cfs(V), mkfs(VIII)
.sh DIAGNOSTICS
	Many.  The program attempts everywhere to check the 
reasonableness of its arguments.  The diagnostics printed try to be
self-explanatory.  Some of the rules that the program attempts to 
enforce are:
.s2
	Ufs must be an unmounted, block-type special file that presently
has zeroes on the critical portion of its superblock, and must be readable
and writeable.  Ufs/.flist must be creatable.
.s2
	If the Ufs and cfs reside on the same physical device, the cfs 
must start immediately after (within < 1 chunk) the Ufs.  If they reside
on separate devices, the cfs must start at block 0 of its device.
.s2
	The first block, and last block + 1, must be multiples of chunk 
size.  Both of these blocks must be physically present.
.sh AUTHOR
Mitchell Gart, University of California, Berkeley and Ampex Corporation,
Redwood City
.sh BUGS
	It is possible to make the disasterous mistake of superimposing
a cfs on a device that already contains another file system, or other
data.  This would probably cause both systems to become trash, and might
crash Unix.
