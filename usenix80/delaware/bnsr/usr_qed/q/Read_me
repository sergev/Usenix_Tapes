/*% cat %
This is the qed function library.
The `r' string in your startup file should be set to execute a function
from this library.
The `q' string should be set to this directory's name.
In the sample startup ../qfile zq and zr are:

	zq:/usr/qed/q/
	zr:zL#r z}:\cB\cN ovr b~e \czqRun\cN \cb~\cN b\cz}

The file Run contained in this directory is the function driver.

DIRECTORIES:

FILES:

ccg.q - load CCG Vucom 3 browse controls
ccg4.q - load CCG Vucom 4 browse controls
col.q - columnate addressed lines
copystr.q - convert V6 string routines to PWB
diff.q - load bx with commands to diff \ Fa \ Fb
error.q - print out error message meaning
grep.q - search buffers `a' to `z' for argument pattern
outputs buffer name, line number and line.
grepf.q - like search except gives file name
l.q - pad addressed lines with blanks to same length
man.q - display this list
memo.q - load memo program
multiblanks.q - replace mutliple blank lines by single ones
nextfile.q - load bn with loop to loop through file list in bz
opts.q - shows Qed flags and their meanings
para.q - do some paragraphing to C programs
paren.q - count opening and closing brackets in addressed lines
pwd.q - puts pwd output into zd.
qfile.q - load your qfile [ /usr/qed/.qfile ]
r.q - pad addressed lines with leading blanks to same length
spell.q - load spelling check procedures
split.q - split a line at a numbered blank
un.q - replace addressed lines after filtering through command
vt.q - load vt100 qfile
wall.q - write all buffers with set Cflags to which you respond `y'
writelen.q - used to put length of quoted string into write

PATHNAME repl change lines:

man.q:000018:""    qfile [-] - load your qfile [ /usr/qed/qfile ]
memo.q:000003:bxe /usr/qed/qed/memo.qbx
qfile.q:000018:	f /usr/qed/qfile
spell.q:000003:bxe /usr/qed/qed/spell.qbx
vt.q:000003:r /usr/qed/qfile
