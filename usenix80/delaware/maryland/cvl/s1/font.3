.th FONT III 1-August-1979
.sh NAME
openfont, closefont, readchar, freechar, accesschar, height, width,
r_width, baseline, name, code, leftadj - font input routines
.sh USEAGE
cc <program> -lF
.sh SYNOPSIS
int fd;
.br
char *name;
.br
fd = openfont(name);

char *name
.br
closefont(name);

int fd, cd;
.br
char c;
.br
cd = readchar(fd, c)

int cd;
.br
freechar(cd);

int pixel, cd, x, y;
.br
pixel = accesschar(cd, x, y);

int cd, high;
.br
high = height(cd)

int cd, wide;
.br
wide = width(cd)

int cd, rwid;
.br
rwid = r_width(cd)

int cd, base;
.br
base = baseline(cd)

int fd;
.br
char *nam;
.br
nam = name(fd)

int cd, cod;
.br
cod = code(cd)

int cd, left;
.br
left = leftadj(cd)

.sh DESCRIPTION
    These routines read and access characters from font files.
.it Openfont
and
.it readchar
call the library routine
.bd alloc
to reserve space for their respective descriptors, and return a
pointer to the descriptor.
.it Closefont
and
.it freechar
clean up and then free space used by the descriptor.
This is
.ul
NOT
the same as doing:\ free(descriptor) directly.
The actual manipulation of the descriptors should be handled
.ul
only
by these subroutines.
.sp 1
.it "    Openfont"
will first examine the current directory for the named font, then
the system font library. It will then append the ".fnt" suffix if
necessary. The descriptor it returns is used by
.it closefont, readchar, height,
and
.it baseline.
A -1 return indicates that the named font file does not exist or is
inaccessible.
.sp 1
.it "    Closefont"
closes the actual file descriptor and frees the font descriptor.
.sp 1
.it "    Readchar"
is given a font descriptor and an ASCII character.
It will allocate core space for the character's raster pattern and read it
in from the font file indicated by the descriptor.
The descriptor it returns is used by
.it accesschar
and
.it freechar.
.sp 1
.it "    Accesschar"
returns a 0 or 1 for any single pixel of the character's raster pattern.
A -1 indicates an attempt to access a pixel beyond the limits of the raster.
.sp 1
.it "    Freechar"
releases the core space occupied by the character. This is
.ul
NOT
equivalent to calling the library routine
.ul
free.
.sp 1
.it "    Name"
must be passed a font descriptor. It returns a pointer to the name of the
font.
.sp 1
.it "    Height"
and
.it "baseline"
may be passed a font descriptor
.ul
or
a character descriptor. They return the height/baseline of the font/character.
.sp 1
.it "    Width, r_width, code"
and
.it "leftadj"
accept only a character descriptor.
.it "Width"
returns the width of the character,
.it "r_width"
returns the width of the character's raster (which may be greater
than the defined width of the character -- meaning that the character
overlaps to the right),
.it "code"
returns the ASCII code for the character, and
.it "leftadj"
returns the number of pixels by which the character should overlap the
character to its left.
.sh AUTHOR
Fred Blonder
.sh FILES
/lib/libF.a \*- library where these routines live
.br
/b/fonts \*- system font library
.sh "SEE ALSO"
FONT(V)
.sh DIAGNOSTICS
Several, from all the routines. They should be self explanatory, and
are written to the error output. When they occur the routine detecting it
will always return -1.
.sh BUGS
Error checking is not rigorous. Obvious errors such as passing the
wrong type of descriptor are caught, but not every possible combination of
invalid parameters is
tested for. Since the descriptors returned by the routines
are pointers to structures,
using them as pointers yourself could result in the structures
being trashed, causing these routines to bomb the next time they are called.
