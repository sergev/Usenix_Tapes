FE(I)				02/24/75				FE(I)

NAME
	fe - is a front end to the rand editor which uses macro definitions
	     to modify the input keys to be several different keys.  If
	     no macros are defined then fe just transcribes the standard
	     input to the standard output.

SYNOPSIS
	fe|re [normal re parameters]

DESCRIPTION
	Use of the program is as follows.

	The <MDEF> key is the same as <ctrl> <esc>.
	The <QUOTE> key is the same as <ctrl> <fs>.

	<MDEF> <some char> <substitution string> <MDEF>
		This defines a macro as normal.
		The <some char> is not echoed to "re".
		If <some char> is a <QUOTE> or <DEL> or <MDEF>
			then a macro is not defined but other
			things described below happen.
		The <sub str> is echoed unless mode is changed.

	<MDEF> <some char> <MDEF>
		This undefines a macro and restores the orginal meaning
			of the key which was the old macro definition.
		The <some char> is not echoed to "re".

	<MDEF> <MDEF>
		The mode is changed.
		When the mode is on, the <sub str> is echoed to
			the "re" otherwise it isn't.
		The mode is initially set to on.

	<MDEF> <QUOTE> <a file name> <BLANK>
		This command causes the further input to be taken
			from the file <a file name>.
		Input continues until end of the file.
		These commands may be nested.
		If an error is made, no matter at what nested level,
			all input files are closed and further input
			comes from the standard input.
		This is how previously saved macros are fetched.
		Presently there is no way to stop the input until
			the end of file is reached.  So be carefull.

	<MDEF> <QUOTE> <BLANK> <a file name> <BLANK>
		This command caused all the presently defined macros
			to be written on the file <a file name>.
		The file may then be edited or fetched etc.

SEE ALSO
	re(I), lre(I)

DIAGNOSTICS
	The program should turn off other users ability to write on
	the terminal as does the re program.

AUTHORS
	original by: Steve Zucker
	modified by: Keith H Davis
