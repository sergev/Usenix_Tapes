.th OBREAK II 11-Aug-78
.sh NAME
obreak \*- change overlay area allocation
.sh SYNOPSIS
(obreak = 57.; not in assembler)
.br
(\fBaddr\fR
in r0)
.br
.ft B
sys obreak
.s3
char *obreak(addr)
.ft R
.sh DESCRIPTION
.it Obreak
sets the system's idea of the lowest location
not allocated to an overlay, writable,
\fBI\*-\fRspace
area
(rounded up to the next multiple of 64 bytes).
After
.it exec
begins execution in separated mode,
(\fIld\fR
option
\fB\*-i\fR),
.it obreak
may be called to allocate a contiguous, writable
\fBI\*-\fRspace
area following the highest hardware segment allocated
to protected,
.bd \&.text
code.
If
.it addr
lies within a hardware segment allocated to protected,
.bd \&.text
code,
any writable
\fBI\*-\fRspace
area is deallocated.
The
.bd mtpi
instruction may be used to write instruction words into the
.it obreak
area.
Writing into
\fBI\*-\fRspace
locations not within the writable
\fBI\*-\fRspace
area or not on word boundaries
will cause a memory violation.
The
.it mfpit
system call may be used to read words
from the
.it obreak
area.
.s3
From C,
.it obreak
will set the break to
.it addr.
The old
.it obreak
location is returned.
Initially, the old
.it obreak
location will be
.bd etext,
the highest location allocatted to protected,
.bd \&.text
code.
.s3
When a program begins execution via
.it exec,
no
obreak
area is allocatted.
Interpreters, like
.it lisp,
can allocate a growing area as interpreted code is compiled.
After a
.it fork
each process gets a private copy of the current
obreak
area.
.sh "SEE ALSO"
exec (II), end (III), ld (I), mfpit (II), lisp (VI)
.sh DIAGNOSTICS
The c-bit is set if the program requests more
memory than the system limit,
if more than 16 segmentation
registers would be required to implement the 
total process
area,
or if
.it exec
did not execute a file in separated mode
(magic number 411).
From C, \*-1 is returned for these errors.
.sh BUGS
The UNIX operating system must be reconfigured before
.it obreak
may be used.
