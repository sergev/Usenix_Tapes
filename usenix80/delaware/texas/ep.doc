EP(I)                        3/24/80                        EP(I)

NAME
     ep - editor for people, for use on ADM-3A display terminals.

     epi- editor for people,  for  use  on  Infoton  200  display 
	  terminals
SYNOPSIS
     ep [ name ]
     epi [ name ]
    
DESCRIPTION
     If  'name'  is  given,  the  named  file  is  read into ep's
     internal buffer before editing begins.  The first  22  lines
     of the file will be displayed in a "window" 79 columns wide.
     the named file.  When editing ends, the buffer is  typically
     written out into the named file.
     
     You  can  scan the file by moving the window up or down; you 
     can edit your file by typing changes directly onto the  file
     as  it  appears  in  the  window.  Characters  appear on the
     screen at the spot marked  with  the  movable  cursor.  This
     cursor  is  positioned  by  use  of the four "cursor motion"
     keys  marked with arrows, and by the  <LINE FEED>, <RETURN>,
     <HOME>,  <BOL>,  <EOL>, <TAB>,  and  <-TAB> keys.  For lines
     longer then 79 columns, the cursor may be moved past  column
     79 and an extended line window is opened on the 23rd line of
     the display.

     Any character displayed within the window may be replaced by
     first moving the cursor to the character and then typing the
     new character.  In order to move the  window  or  invoke  an
     editing function (such as to open up a new blank line in the
     text) it is merely necessary to depress the  given  function
     key.

     Special  functions  allow you to delete pieces of text, pick
     up pieces of text and put copies of them down  elsewhere  in
     the file, open up blank lines, and enter a mode in which the
     characters you type do not "type over" the previous text but
     are inserted in the middle of it.

     These  special  functions  are  performed  by control codes,
     typed by pushing a  special  function  key  directly  or  by
     holding  down  the  'ctrl' key and at the same time pressing
     the designated letter key on  the  keyboard.   Some  of  the
     functions are performed at the point on the screen at  which
     they  are  typed;  some may be modified by numerical or text
     arguments  given  by  pushing the ARG key, the argument, and
     then the function.  The ARG key lets you  type  the argument
     argument in a special location on the  bottom  line  of  the
     screen.  Error messages also appear on this bottom line.

     The control characters (codes 000 thru 037) are displayed as
     the characters @, A-Z, [, \, ], ^, and _  (codes  0100  thru
     0137).  This  is  the  same  character  typed to produce the
     control character.  The rub out character is displayed as #.

				-1-

EP(I)                         3/24/80                       EP(I)

     To distinguish these characters when the cursor is placed on
     one of them, the message <CTRL> or <RUB> is displayed on the
     23rd line of the display.

     To  speed  up editing ep stops displaying the results of one
     input character as soon as a new one is available.  This may
     result  in  some very funny looking intermediate states, but
     everything works out okay in the end.


     Handy Control Function Chart For ADM-3A:

 ---------------------------------------------------------------------------
 \  ! \  " \  # \  $ \  % \  & \  ' \  ( \  ) \    \  * \  = \  { \  } \HOME\
  \ 1  \ 2  \ 3  \ 4  \ 5  \ 6  \ 7  \ 8  \ 9  \ 0  \ :  \ -  \ [  \ ]  \ ^  \
-------------------------------------------------------------------------------
\EXIT\-PG \-LIN\-SCH\+SCH\PICK\MORE\-TAB\TAB \INS \GOTO\line\         \
 \ esc\ q  \ w  \ e  \ r  \ t  \ y  \ u  \ i  \ o  \ p  \feed\ return  \
  -----------------------------------------------------------------------
   \    \+PG \+LIN\OPEN\CLOS\PUT \  CURSOR MOVE KEYS \  + \ARG \COLM\RUB \
    \ctrl\ a  \ s  \ d  \ f  \ g  \ h  \ j  \ k  \ l  \ ;  \ @  \ \  \ _  \
   -------------------------------------------------------------------------
   \       \RFSH\ ED \CTRL\JOIN\BOL \EOL \    \  < \  > \  ? \       \
    \ shift \ z  \ x  \ c  \ v  \ b  \ n  \ m  \ ,  \ .  \ /  \ shift \
     -------------------------------------------------------------------

     Handy Control Function Chart For Infoton 200:

---------------------------------------------------------------------------
\    \  ! \  " \  # \  $ \  % \  & \  ' \  ( \  ) \    \  = \COLM\ up \    \
 \tab \ 1  \ 2  \ 3  \ 4  \ 5  \ 6  \ 7  \ 8  \ 9  \ 0  \ -  \ ^  \ \  \bsp \
------------------------------------------------------------------------------
\EXIT\-PG \-LIN\-SCH\+SCH\PICK\rght\-TAB\TAB \INS \GOTO\ARG \  { \DEL \line\
 \ esc\ q  \ w  \ e  \ r  \ t  \ y  \ u  \ i  \ o  \ p  \ @  \ [  \ _  \feed\
  ----------------------------------------------------------------------------
   \    \+PG \+LIN\OPEN\CLOS\PUT \left\    \MORE\RFSH\  + \  * \down\      \
    \ctrl\ a  \ s  \ d  \ f  \ g  \ h  \ j  \ k  \ l  \ ;  \ :  \ ]  \return\
   ---------------------------------------------------------------------------
   \       \home\ ED \CTRL\JOIN\BOL \EOL \    \  < \  > \  ? \       \
    \ shift \ z  \ x  \ c  \ v  \ b  \ n  \ m  \ ,  \ .  \ /  \ shift \
     -------------------------------------------------------------------
      If cursor keypad is available, it may be used to move the cursor. 

		   E D   C O M M A N D S
     d   delete line(s)       | s   substitute /old/new/
     e   edit a new file      | t   copy line(s)
     f   set file name        | v   globally if not
     g   globally if          | w   write on file
     k   mark line with [a-z] | x   substitute interactively
     m   move lines(s)        |    ('.' to confirm, <ED> to quit)
     r   read file            | !   unix command

     The  handy  chart  above  gives  the current position of the
     function  keys.  The  table  below explains exactly what the
     various keys do.  To obtain a copy of the  Control  Function

				-2-

EP(I)                         3/24/80                       EP(I)

     Chart while in ep, type "<ctrl><shift>?", or while  in  epi,
     type "<ctrl>_".


	  Functions that may be modified by supplying an argument
	  ========= ==== === == ======== == ========= == ========

     Key     Basic function   (no ARG)  Modifications  (with ARG)
     ---     -------------------------  -------------------------

     <+PG>   Moves window down 1 page,  <ARG>n<+PG>  moves down n
	      where a page  is  merely   pages.
	      the  number  of lines in
	      the window.

     <-PG>   Moves window up 1 page.    <ARG>n<-PG>  moves  up  n
					 pages.

     <+LIN>  Moves   window  down  1/2  <ARG>n<+LIN> moves down n
	      page.                      lines.


     <-LIN>  Moves window up 1/2 page.  <ARG>n<-LIN> moves  up  n
					 lines.

     <GOTO>  Moves  window  to  top of  <ARG><GOTO>  moves to the
	      file.                      last line.
					<ARG>n<GOTO> moves to the
					 nth line.
					<ARG>.n<GOTO>   moves  to
					 the  corresponding frac-
					 tion  of the way between
					 the first and last line.

     <+SCH>  Search down into the file  <ARG>key<+SCH>    changes
	      from the current  cursor   the search key to  "key"
	      position looking for the   and  searches  down into
	      next  occurence  of  the   the file.   The  key  is
	      search  key; the  key is   expressed  in  a limited
	      the one  last  specified   form of regular  expres-
	      as   a  parameter  to  a   sion notation, as defin-
	      previous search.           ed in the  documentation
					 for ed.  Of note is that
					 the characters '^', '$',
					 '.',  '*',  '[', and '\'
					 have special meanings.

     <+SCH>  Search up into  the  file  <ARG>key<+SCH>    changes
	      from the current  cursor   the search key to  "key"
	      position looking for the   and searches up into the
	      next  occurence  of  the   file.  The  key  is exp-
	      search  key; the  key is   ressed in a limited form
	      the one  last  specified   of  regular   expression
	      as   a  parameter  to  a   notation, as defined  in
	      previous search.           the   documentation  for

				-3-

EP(I)                         3/24/80                       EP(I)

     Key     Basic function   (no ARG)  Modifications  (with ARG)
     ---     -------------------------  -------------------------
					 ed.  Of note is that the
					 characters   '^',   '$',
					 '.',  '*',  '[', and '\'
					 have special meanings.

     <PICK>  Pick  up  1 line into the  <ARG>n<PICK>  picks  up n
	      main  PUTbuffer,   there   lines into the main PUT-
	      are  currently  two PUT-   buffer.
	      buffers, the main, which
	      holds   the   text  last
	      picked, and  the  alter-
	      nate,  which  holds  the
	      text last deleted.  Each
	      can be put back into the
	      file by using  appropri-
	      ate  forms  of the <PUT>
	      function.

     <MORE>  Pick up 1 more  line  and  <ARG>n<MORE> picks  up  n
	      add  it  into  the  main   more  lines and add them
	      PUTbuffer.                 into the main PUTbuffer.

     <PUT>   Puts back the contents of  <ARG><PUT> puts back  the
	      the main PUTbuffer, i.e.    contents  of the alter-
	      the stuff  last  picked.    nate  PUTbuffer,   i.e.
	      The  first  line  in the    the stuff last deleted.
	      buffer  goes  where  the
	      cursor  is;  the text at
	      that point is moved down
	      (lines are opened up) to
	      make room.

     <OPEN>  Open up space for 1 line.  <ARG>n<OPEN>   opens   up
					 space for n lines.

     <CLOS>  Deletes  1 line, which is  <ARG>n<CLOS>   deletes  n
	      saved in  the  alternate   lines, also saved in the
	      PUTbuffer.                 alternate PUTbuffer.

     <ED>    -----  NOT ALLOWED  -----  <ARG>command<ED>  perform
					 the ed command.

     While entering  an  argument  the  controls  <cursor  left>,
     <cursor  right>,  and  <ARG> are allowed.  <cursor left> and
     <cursor right> move the cursor as expected.  <ARG> causes ep
     to exit argument mode without performing a function.








				-4-

EP(I)                         3/24/80                       EP(I)

	      Functions that do not take arguments
	      ========= ==== == === ==== =========

     Key            Function
     ---            --------

    <CURSOR LEFT>   Moves  the cursor one column to the left.  If
		     the cursor was in column 1 and the  line  is
		     less  than 80 characters long, the cursor is
		     moved to column 80.  If the  cursor  was  in
		     column  1  and  the line is 80 characters or
		     more long, the cursor is moved to the  first
		     column to the right of the last character of
		     the line.

     <CURSOR RIGHT> Moves the cursor one  column  to  the  right.
		     If  the cursor was in column 80 and the line
		     is less than 80 characters long, the  cursor
		     is  moved  to  column  1.  If the line is 80
		     characters or more long, the cursor is moved
		     right up to column 511.

     <CURSOR UP>    Moves  the cursor one line up.  If the cursor
		     was on the  top  line  of  the  window,  the
		     cursor  is  moved  to the bottom line of the
		     window.  If the cursor was to the  right  of
		     column  80  and the new line is less than 80
		     characters long,  the  cursor  is  moved  to
		     column 80 of the new line.

     <CURSOR DOWN>  Moves  the  cursor  one  line  down.  If  the
	or           cursor was on the bottom line of the window,
     <line feed>     the  cursor  is moved to the top line of the
		     window.  If the cursor was to the  right  of
		     column  80  and the new line is less than 80
		     characters long,  the  cursor  is  moved  to
		     column 80 of the new line.

     <return>       Moves the cursor to column 1 of the next line
		     down.  See <CURSOR  DOWN>  for  wrap  around
		     rule.

     <TAB>          Moves  the cursor to the right until the next
		     tab stop is reached.  See <CURSOR RIGHT> for
		     wrap  around  rule.  Tab  stops  are  spaced
		     every 8 spaces.

     <-TAB>         Moves the cursor to the left until  the  next
		     tab  stop is reached.  See <CURSOR LEFT> for
		     wrap  around  rule.  Tab  stops  are  spaced
		     every 8 spaces.

     <BOL>          Moves  the  cursor to column 1 of the current
		     line.


				-5-

EP(I)                         3/24/80                       EP(I)

     <EOL>          Moves the cursor to the last character of the
		     current line.

     <HOME>         Moves  the cursor to column 1 of the top line
		     of the window.

     <RUB>          The character the  cursor  is  placed  on  is
		     removed.

    <INS>           Puts  the  editor  in insert mode; subsequent
		     characters are inserted at the cursor, i.e.,
		     characters  to  the  right of the cursor are
		     pushed  over,  not  overwritten.  The editor
		     is  returned  to  normal  mode when the next 
		     <INS> is typed.

    <CRTL>          Causes the next character to be entered  into
		     the  text  as  a control character.  Effects
		     next the character only, and  the  ctrl  key
		     does not have to be pressed.  The characters
		     I or tab, J or line feed, and  M  or  return
		     are processed in the following way:

			I or tab
			    Insert  blanks  until the cursor
			     is at the next tab stop.

			J or line feed
			    Split the current line,  putting
			     the  character  the  cursor  is
			     placed on below the  cursor  on
			     the new line.

			M or return
			    Split  the current line, putting
			     the  character  the  cursor  is
			     placed  on  at  column 1 of the
			     new line.

     <JOIN>         Causes  the  next  line  (with  its preceding
		     blanks removed) to be moved to  the  end  of
		     the  current  line.  The  cursor is moved to
		     the point where the lines were joined.

     <RFSH>         Refreshes the display.  Used to  cleanup  the
		     display after a message.

     <COLM>         Turns   on/off   the   cursor  column  number
		     display.







				-6-

EP(I)                         3/24/80                       EP(I)

     <EXIT>        Exit the editor, but first ask if work  is  to
		     be  saved.  An answer of 'y' causes the file
		     to be written.  An answer of 'n' leaves  the
		     file  unchanged  (any  editing is lost).  An
		     answer of <ARG> causes the  <EXIT>  function
		     to be ignored.

     <ctrl><shift>?  Display help message.  (ADM-3A)
     <ctrl>_         Display help message.  (Infoton 200)

     What Do the Characters on the Right Mean?
     ---- -- --- ---------- -- --- ----- ----

     >     There  is  stuff  out to the right of column 79 (maybe
	    blanks).
     #     The cursor is on this line past column 79.


FILES
     /tmp/e#, temporary; '#' is the process number (in octal).
     /usr/lib/ephelp, help message file

DIAGNOSTICS
     'TMP' for temporary file overflow.

ALSO SEE
     ed(I)  

BUGS
     Ep contains no known bugs.


























				-7-
  
