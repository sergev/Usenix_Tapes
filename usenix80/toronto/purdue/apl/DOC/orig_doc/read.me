This is the Unix APL interpreter, originally written by Ken Thompson,
and fixed up a lot by John Levine and a cast of hundreds at Yale.

Peculiarities:
	This APL expects some APL terminals which can be put in APL
mode with a funny control sequence.  It also expects that if you
do a special stty call, it will not treat @ and # as special and it
will break on an <ESC>.  All this is in aplmod/a0.c.  It will also
work in raw mode, except that then you can't DEL out of it.

It expects your terminals to be normal ASCII terminals with APL key
tops.  The translation table is in tab.c, and some of the lexical
analysis in tab.c would have to be changed a little.

Line editing works and uses <ESC> where other APL's use line feed.

At Yale we use separated I/D space with APL.  Other places probably
shouldn't because 1) it uses the system wait() routine which calls
nargs() (which works with I/D space at Yale for complicated reasons)
and 2) the mathematical functions in /lib/liba.a all have to be
modified to work right with I/D space.

This version of APL has most of the features that APL\360 had when
the domino (matrix divide) operator was added.  There is none of the
shared variable stuff.  You can load and save workspaces, but there is
no state indicator.  There is also monadic epsilon (execute) and
monadic base (function -> characted array).  Functions still don't
have labels, since the code for it was written and then lost.

Comparing characters doesn't work but you might try concatenating a
character vector with a numerical vector.

There are some Dartmouth-style plotting functions in ak.c which
expect to find functions called move, line, and sclr in the library.
These should be turned off or commented out or something.

Installation instructions:
	look at file run to install it, and at rc to recompile
	changed parts.
