.SH
Quad Functions
.PP
Quad functions are special operators
in \s-2APL\s0 that perform tasks which are
closer to the system level,
but are accessible within \s-2APL\s0 functins.
There are many available quad functions
in Unix \s-2APL\s0,
but only two are probably of interest
to you at this time.
The interested user is referred to
Appendix B for a complete list.
.IP "Lrun xxx" 14
This function can be used to execute
a Unix process from inside an \s-2APL\s0 function.
The variable "xxx" should be a character
array containing the command
to be executed by the Unix
shell (command program).
For example,
to run the "who" program,
the expression might be:
.sp
	Lrun 'who'
.sp
	<or, using an array>
.sp
	x { 'who'
.br
	Lrun x
.sp
Note that any output generated by
the program run by "Lrun" is
.I not
written to a script file if ")script"
was used.
.IP "Lcr xxx" 14
This quad function is a standard
\s-2APL\s0 quad function.
The argument "xxx" should be
a character vector containing
the name of an \s-2APL\s0 function
which exists in the internal workspace.
"Lcr" will return a
character array containing the
function definition in ASCII.
This provides
a very convenient way
to get the
listing of an \s-2APL\s0 function.
For example,
if you want to define
the array "fnlist" to
be the function definition
of the function "xyz",
you can say:
.sp
	fnlist { Lcr 'xyz'
.sp
or, equivalently,
.sp
	fnname { 'xyz'
.br
	fnlist { Lcr fnname
.sp
Another possible use of
"Lcr" is to list a function
on the terminal without
having to use ")editf".
(As we discussed earlier,
when an error occurs
you cannot edit a suspended
function without using ")reset"
first,
and ")reset" gets rid of
the current state of \s-2APL\s0.)
However,
the ")list" system command
is far more efficient
for this purpose
and is therefore strongly recommended.
.SH
I-Beam Functions
.PP
The I-beam function in Unix \s-2APL\s0 is a method
of obtaining system parameters.
The available I-beams are listed in
Appendix C
for the interested user;
they are not generally required
for the average \s-2APL\s0 session.
