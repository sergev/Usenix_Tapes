NAME
blockl/blockr - blockp communications protocol over simple lines

SYNOPSIS
blockl
blockr < getfile or blockr >putfile

DESCRIPTION

        Blockl is used in a local computer to talk  to  a  remote
computer.   To initiate a terminal session or a file transfer one
merely types "blockl" as a command on the local  computer.   Once
blockl is running one may login to the remote computer and use it
like an ordinary terminal.  To exit from  the  protocol,  type  a
CONTROL-E followed by a "q".  CONTROL-E is the "escape character"
which causes blockl to drop out of the terminal mode  and  prompt
with  "[qUIT  sHELL  eNTER-FILENAME ^e]:"  Typing a "s" will give
you a temporary UNIX shell.  Typing "e" will cause a prompt to be
issued for a filename (max 40 chars) to be used by blockl for the
file to be sent/gotten on the local end.  Typing a  CONTROL-E  at
this point will cause a CONTROL-E to be transmitted to the remote
computer.  To initiate a file transfer, type "blockr >outfile" to
send  a  file  to  remote computer and "blockr <getfile" to get a
file from the remote computer.  In both cases the file  name  en-
tered via the CONTROL-E e sequence will be used on the local end.
Example of sending/getting files:

% blockl                (runs communication program to remote)
Login: name
Password: passwrd       (login to remote computer)

% ^e                    (type a control-E to remote )
[qUIT sHELL eNTER-FILENAME ^e]: e       (type "e" to enter local filename)
enter filename: myfile.f4p              (type in filename for local end)
% blockr >remotefil.f4p                 (sends local "myfile.f4p" to remote)
                                        (file "remotefil.f4p")
% blockr <remotefil.f4p                 (gets "remotefil.f4p" and copies it)
                                        (into local file "myfile.f4p")
% ^e
[qUIT sHELL eNTER-FILENAME ^e]: q       (quit, return to local machine)
Back to UNIX
killed
%                       (you are now back to your local UNIX)



Notes:

        One should avoid running with the temporary shell for ex-
tended  periods  of  time  since  part of the protocol process is
locked into core.

        When getting a file from the remote computer,  watch  out
for  the  message  "blockl:  getting xxxxxx" occuring twice for a
single get command on file xxxxxx.  If this happens, get the file
again  since  the  first  copy will be no good.  This is due to a
complex part of the protocol structure (last ACK on recevied  EOF
getting lost on line) and the chances of it occuring are extreme-
ly rare.

DIAGNOSTICS
Mostly self explainatory

FILES
/dev/tty? - users tty and remote line tty
/dev/xx?  - special device for high speed input
/tmp/????.lock - interlock file

SEE ALSO
pucc(I), csh(I)

