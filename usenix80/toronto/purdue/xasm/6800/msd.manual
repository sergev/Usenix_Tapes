Instructions:

	/	Open location
	\r	Close curent location, make changes.
	\n	Close current location, make changes, open next
	=	Print out numeric value of current location
	?	Print out ASCII value of current location
	:	Assign lable:
			#:lable_name	were # is in the current
					radix
	^D	Return to monitor (jumps through reset vector)
	"	Number -> opcode
			#"		where # is in the current
					radix
	^L	Close current location, make changes, and
		print out 16 blank lines.
	(	Go to address of this extended or relative instruction
	)	Return from las '('


Altmodes:

	Charactor		1 Altmode		2 Altmode

	s                       Symbolic mode one       Symbolic mode off
	[address]$g             Go to target program.  If no address is
				given, address of last '$g' command is used.
	l                       Load program
	r#                      Set radix to base '#'.  Note that '#' is
				allways in base 10.
	[address]$t             Set symbol table start address and clear
				symbol table.  Table expands downard
				(addesses decreaseing numerically) in memory.
				If no address is given, table is cleared.
	[start];[end];[value]$z	Preset memory from 'start' to 'end' with
				a value of 'value'.  Omitting any parametors
				defaults to the most recently used parametor.
	[start];[end];[value]$f	Find the byte quantity 'value' if it exist
				between 'start' and 'end'.  If 'value' is
				found, print out the address of the byte.
				Omitting any paramentor defaults to the
				most recently used parametor.
