	Most of the stuff here and below was written by Peter D.
Hallenbeck.  If you wish to pass this on to other people, please
leave the credits intact as someday I may want a job somewhere and
I'll take any help I can get.  Current adress is:
	EE Dept.
	Purdue U
	W. Lafayette, IN  47906
				Phone:	317/494-4226
				Home:	317/743-4395
After a small time delay, this adress will Always be valid:
	925 Lowell Rd.
	Concord, MA.  01742

(for hams in the crowd, the call is  WA1YYN)

In 'src' lives most of the sources for the cross assemblers.
The user manuals for them are in 'document'.  My apoligies for
how they run, as they we hacks and not
suported here at Prude-U, and they show it.  They do seem to
more or less work, and can at least lift you out of the nasty world
of absolute assembly language.  Before trying to assemble them, see
if the assembled versions in the 'bin' directory (somewhere on the
tape) work.  To assemble them, the source file should be moved into
my 'clib' directory, and a '% cc source.c *.o' typed.  Systems with
small arg list may toss cookies here, but thats what you get for having
a small arg list.  This stuff was all written before whatever the
current version of the standard IO package currently is, so everything
is done by hand, which is fine with me.  People who wish to cut down
the size of the programs (which is a good idea as they run size 80 or
so) can probably cut out stuff from the 'clib' and use exising code
in 'printf' and other compiler-supplyed routines.  As a final note on
the assemblers, watch out for the evaluator in them.  It is very primitive
and may yet have some undiscovered errors.  A note to 8080 users, in
'mas80', the 'db' psydo-op is good for only one string.  The 'ds' one
with double-quotes is good for many strings.  If you've used 'c', you
will be happy.  If you've used Intel x-assemblurrs, you may be unhappy
at first and then you'll see how a little re-aranging of psydo-ops can
make things easier.

	My 'clib' directory has a 'info' fill in it which should
unlock any mysteries there.

	'utility' is full of all the funny utility programs and
has a 'info' file in it.  The 'clock' programs (runs on ADM-3A) is
a timely one.  Anyway, its' there for the hacking.

	The directory called 'plot' has a bunch of routines in
it that drive either a Tektronics 4014 or an HP 2xxx 4-color
tilted flatbed plotter/felt-tip pen destroyer.  The X and Y co-
ordinates used in the package are 10 times that of the 4014.
(i.e. 10,240 by 7,800) This allows integer arithmetic without
the coresponding lossages.  There is an 'info' file in there with
most of the details.  Its the only thing we have around here
that talks to the 4014 in 'c'.  Everything else used some unheard
of language called '4tran' or something like that.  Re-distribution
of anything in that library is forbiden without my express permission.


	Finaly, a program called 'ped' is a funny little picture
editor that runs on a Tektronics 4014 (assuming the one you have
works, unlike ours which is a piece of sh__ and which Tektronics
has yet to get working right) and an HP four-pen plotter.  To assemble
it, move it into the 'plot' directory, and do a '%cc ped.c *.o' to
be sure it gets all those good plot routines.  The document lives in
the 'document' directory, and sample vocabularys are inv 'vocabxx'.
The 4014 is assumed to have the "graphics refresh" option and the
extended graphics option.  We also have a low-frequency ramp generator
doubling as a joystick with incredible drift which we soon hope to
wire out of the system for positioning of the symbols.  If anybody
runs across the Turkey who didn't put in multi-turn thumbwheels,
please back up and run across him/her again.  We hope to put in
a position trim joystick to help out there.

	About the 6809 stuff-  the code is so new the disk are
still warm.  there are probably many little table erorrs and the
like in there, but we've only had the MPU up for about 2 weeks.
A whole new breed of cross assemblers that should be done right
are in the works, the two incentives being better machine language
code (libraries and multipile text target ares) and a 'C' to 6809
compliler.
compiler.  By the way- watch the Pc addressing modes.  they
don't work like you probably think they should.  soon to be
corrected.  For latest versions, contact us at end of August.
