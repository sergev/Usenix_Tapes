.th EM1 I 3/22/79
.sh NAME
em1 \*- calling program for em1 interpreters
.sh SYNOPSIS
em1 [-tpfcrxiX] [+tpfcrxiX] [codefile [args ... ...] ]
.sh DESCRIPTION
The binary em1 code is read from codefile with "e.out" as default.
Format of the codefile is:
.lp +20 15
MAGIC WORD	low byte = 172. high byte = 14.
.lp +20 15
FLAG WORD	default flags for execution, set by pc:ass
.lp +20 15
6x UNUSED
.lp +20 15
TEXTSIZE
.lp +20 15
DATASIZE
.lp +20 15
HOL SIZE	unitialized data
.lp +20 15
PROC SIZE	4* number of procedures
.lp +20 15
RELOC SIZE	size of relocation information
.lp +20 15
ENTRY POINT	number of procedure _main
.lp +20 15
SOURCE LINES	length of source program
.lp +20 15
UNUSED
.i0
.s3
Then an interpreter is selected depending on the flag word in the codefile
and the flags of em1.
The interpreter is first searched in /usr/ovl/em1:int, then in the current
directory.
If the correct interpreter is not found, it will be made for you
automatically.
.s3
The flags of em1 control the following options which can be turned off
or on by prepending them with - or + respectively.
The options controlled by the flags are as follows:
.s3
.lp +5 3
t	runtime tests for undefined variables, array bounds etc...
This option costs a bit of core and some delay
It is however very useful for debugging
.s3
.lp +5 3
p	profiling of the entire program. This results in a file
em1:profile, written at end of execution, that contains
an estimation of the number of memory cycles used per source line.
This is expensive in time as well as memoryspace.
eprof(I) will interpret the file.
.s3
.lp +5 3
f	maintain a bitmap of all lines where code is executed.
This map is written onto the file em1:flowtab and interpreted by eflow(I).
This option is almost free in time and space.
.s3
.lp +5 3
c	count lineusage and produce a file em1:counttab that
contains for every sourceline the number of times it
was entered. ecount(I) will interpret the file.
Cheap in time, expensive in memoryspace.
.s3
.lp +5 3
r	allow the use of floating point.
Is normally generated by compiler and only used together with -i
.s3
.lp +5 3
x	allow the use of external procedures like sin and fcvt
This is used only because these procedures are unavailable in EM1
at the moment. It is normally generated by compiler and only used
together with -i.
.s3
.lp +5 3
i	Install a new interpreter in /usr/ovl/em1:int.
The options for this interpreter have to be given by +....
It has no use to try this unless you can write the directory.
.s3
.lp +5 3
X	Don't look in /usr/ovl/em1:int, only in current directory
Normally used for debugging only.
If a new interpreter is made under this option it won't have
it's symboltable stripped away.
.i0
These flags
give rise to 64 different interpreters whereof only a subset exists
in /usr/ovl/em1:int.
.sh "FILES"
.nf
/usr/ovl/em1:int/em1:??????
/usr/ovl/em1:int/em.s		source of interpreter
/usr/ovl/em1:int/[tpcfxr][+-]	startoff files
em1:profile
em1:counttab
em1:flowtab
.fi
.sh "SEE ALSO"
eflow(I),eprof(I),ecount(I),pc(I)
.sh DIAGNOSTICS
Error messages are self explanatory.
If a new interpreter has to be made and standard output is a terminal
a warning message will be printed to notify the user of the longer waittime
.sh BUGS
Please report bugs to Hans van Staveren
