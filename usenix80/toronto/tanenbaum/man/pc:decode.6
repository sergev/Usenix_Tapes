.th PC:DECODE VI 5/29/79
.sh NAME
pc:decode \*- make compact EM1 programs and library modules human readable
.sh SYNOPSIS
/usr/ovl/pc:decode
  or
.br
em1 /usr/ovl/pc:decode.out
.sh DESCRIPTION
Most programs involved with the EM1 project only produce and accept
EM1 programs in compact form.
These files are only machine readable.
A description of this compact form can be found in [1].
Most EM1 programs will be compiler generated, because the EM1
assembly language is not very user friendly.
To inspect the code produced by compilers or to patch them for one reason
or another, you need human readable assembly code.
Decode will do the job for you.
It accepts both the normal compact form as produced by for instance the
pascal compiler and the special library form constructed by pc:makelib(VI).
The header of this library format, containing the global data and
procedure identifiers defined in such modules, is decoded as well.
Decode is written in pascal, using four external routines:
.lp +12 8
popen	to open /usr/etc/em1:tables, the EM1 instruction tables.
.lp +12 8
notext	to read binary information from input.
.lp +12 8
diag	to produce errors on diagnostic output
.lp +12 8
exit	to exit with non-zero exit-status
.i0
These external routines are found in libP(VII) and lib2(VII).
Decode can be used is a filter reading from standard input and writing
to standard output.
.sh FILES
/usr/etc/em1:tables	the EM1 instruction tables.
.sh "SEE ALSO"
.lp +7 5
[1]	A.S.Tanenbaum, J.W.Stevenson & J.M. van Staveren
"Description of an experimental machine architecture for use of
block structured languages" Informatika rapport IR-??.
.lp +7 5
[2]	pc(I), libP(VII), lib2(VII), pc:encode(VI)
.i0
.sh DIAGNOSTICS
Error messages are intended to be self-explanatory.
.sh AUTHOR
Johan Stevenson, Vrije Universiteit.
.sh BUGS
Please report bugs to the author.
