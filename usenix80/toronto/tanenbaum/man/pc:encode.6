.th PC:ENCODE VI 3/23/79
.sh NAME
pc:encode \*- make EM1 assembly programs compact
.sh SYNOPSIS
/usr/ovl/pc:encode
  or
.br
em1 /usr/ovl/pc:encode.out
.sh DESCRIPTION
Most programs involved with the EM1 project only produce and accept
EM1 programs in compact form.
These files are only machine readable.
A description of this compact form can be found in [1].
Most EM1 programs will be compiler generated, because the EM1
assembly language is not very user friendly.
However, sometimes you have to make some special routines directly
in EM1, for instance the routines implementing the system calls.
At these times you may use this program to produce compact routines
out of these human readable assembly modules.
Encode is written in pascal, using four external routines:
.lp +12 8
popen	to open /usr/etc/em1:tables, the EM1 instruction tables.
.lp +12 8
diag	to produce errors on diagnostic output
.lp +12 8
exit	to exit with non-zero exit status.
.lp +12 8
buff	to flush the output buffer each time an END pseudo is found.
This is sometimes used for debugging.
.i0
These external routines are found in libP(VII) and lib2(VII).
Encode reads from standard input and writes on standard output and
can therefore be used as filter.
.sh FILES
/usr/etc/em1:tables	the EM1 instruction tables.
.sh "SEE ALSO"
.lp +7 5
[1]	A.S.Tanenbaum, J.W.Stevenson & J.M. van Staveren
"Description of an experimental machine architecture for use of
block structured languages" Informatika rapport IR-??.
.lp +7 5
[2]	pc(I), libP(VII), lib2(VII), pc:decode(VI)
.i0
.sh DIAGNOSTICS
Error messages are intended to be self-explanatory and include the
line number of the offending input line.
.sh AUTHOR
Johan Stevenson, Vrije Universiteit.
.sh BUGS
Please report bugs to the author.
.i0
