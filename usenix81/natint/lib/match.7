.nh
.na
.th MATCH VII 7/20/80
.sh NAME
match \*- match a string to a pattern
.sh SYNOPSIS
char *mkpatt(e,le)
.br
match(p,s,ls)
.ti+6
.br
char *e,*p,*s;
.sh DESCRIPTION
Mkpatt returns a pointer to an alloc'd buffer which contains an encoding of the
regular expression string, e.  The output of mkpatt is used by match() for
efficient matching against many strings.  If le is 0 e is assumed to be a null
terminated string, and the output of mkpatt will be a string also.  If le is
non\*-zero e may contain any bytes, including nulls.  The output of mkpatt will
not then be a string, however it will still be possible to use it with match()
and obtain correct results.
.br
.sp1
Match returns true if the pattern, p (output of mkpatt), is satisfied by the
string, s.  If ls is 0, s is assumed to be a null terminated string; otherwise
only ls characters from s are used in the pattern matching.  Match returns 0 if
the string does not match, and -1 if an error exists in the pattern,p.
.br
.sp1
The syntax accepted by mkpatt is similar to the usual ed style:
.in+8
^  anchor to start of string
.br
\&.  match any character
.br
*  indefinite repeat
.br
$  anchor to end of string
.br
\\  escape any special character
.br
[] alternate set:      if ^ is first, complement
.in+6
with respect to printable characters; if ~ is first, complement with respect
to all characters
.in-6
any other character matches itself.
.in-8
.sh "SEE ALSO"
ed(I)
.sh BUGS
There is no '\*-' shorthand within the alternate set.
