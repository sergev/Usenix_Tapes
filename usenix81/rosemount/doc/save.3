.ds - -
.TH SAVE VII 3/27/80
.SH NAME
save, restore \*- save or restore stack
.SH SYNOPSIS
.ft B
char *save() ;
.PP
restore(p)
.br
char *p ;
.br
.ft R
.SH DESCRIPTION
These routines save or restore the stack of a calling C program.
.PP
.I Save
calls
.I malloc
(III) to reserve enough storage for the current stack and it then copies
the stack into the area.
.I Save
returns a pointer to the stored stack.
.PP
.I Restore
takes a pointer from an earlier call to
.I save
and copies the data back onto the stack.
The old stack data is then returned by a call to
.I free
(III).
.PP
Because of the destruction of the stack by the call to restore, it looks
to the programmer that the call to
.I restore
never returns.
Instead, it appears that the original call to
.I save
returns again.
.PP
The second return by
.I save
is distinguished from the first return by returning 0 in place of the
pointer to the stack data returned by the original call.
.PP
This is similer to the way
.I fork
(II) distinguishes the return to the parent and to the child.
.SH "SEE ALSO"
.I sim
(VII)
.SH BUGS
