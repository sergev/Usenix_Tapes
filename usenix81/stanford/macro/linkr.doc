NAME
	linkr - linking loader for UNIX

SYNOPSIS
	linkr [option1 option2 ...] file1 file2 ... filen

DESCRIPTION
	Linkr link-loads the specified files in the order given,
	producing an executable file usually named filen.out. (see below)
	If a file arg. does not contain a ".", file.obj will be sought before
	file itself.

	Options, if desired, may appear anywhere in the command,
	and are chosen from the following:

		1) -ls  Produce a load map named filen.map
		2) -cr  Produce a global cross-reference listing named
			filen.lst.  If the -ls option is also included,
			the cross-reference listing will follow the
			load map in filen.map.
		3) -lp  Same as -ls, but spools filen.map for printing
			upon completion.
		4) -no  No .out file is produced.  This is useful for
			syntax checking or producing the listing only.
		5) -xs:n  Allocates nK words of extra space for
			symbol table.
		6) -p1  Forces the .out file to be non-shareable,
			even if there were SHR .psects.
		7) -od  Causes ODT to be linked first and invokes the
			-p1 option.
		8) -dd caused ddt to be linked first and invokes the
			-p1 option
		9) -p2 causes non-sharable instruction and data 
			spaces.
		10)-s2 file is data space only-- all instruction .psects
			are treated as .psect	xxx, dat
		11)-ns	no symbol output after load module. thus .out
			file is "stripped"
		12)-go	only global symbols are output in the .out file
		13)-sd  loads sharable ddt and invokes -p1
		14)-o2 and -d2; like -dd and -od, except
			invoke -p2 instead of -p1. mainly intended
			for when ddt gets smarter.

		15)-na:file  use this name instead of the last file name
			in command for output file.

FILES
	filen.xrf - intermediate cross-reference temporary file
	/bin/print - spooler (can be link to /bin/lpr)
	/usr/local/macxrf - cross-reference post-processor
	/sys/ddt/bin/sodt.obj	- odt module
	/sys/ddt/bin/sddt.obj	-ddt module
	/sys/ddt/bin/ddt.errf	-ddt error file
	/sys/ddt/bin/shareddt.obj	-sharable ddt

SEE ALSO
	DEC Linkr-11 Manual
	libr	manual

bugs--
	a bad .obj can cause linkr to hang
	be careful of asects; they are always loaded
	at 0 of dmem and have no length. therefore,
	they will be clobbered by program and symbols!!!
	(if you have asect only, use -ns).

