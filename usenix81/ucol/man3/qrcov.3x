.EQ
delim $$
.EN
.TH QRCOV 3X CIRES
.SH NAME
qrcov \- compute covariance matrix for least squares problem
solved using QR decomposition
.SH SYNOPSIS
.PP
\fBcall qrcov(m,n,a,resq)
.PP
\fBreal a(m,n), resq
.PP
\fBinteger*2 m,n
.PP
f77 flag: \fB-lCm\fR
.SH DESCRIPTION
In solving a least squares problem, one often wants the covariance
matrix for the parameters fit.
If the problem is solved by forming the normal
equations,
this matrix is just the inverse matrix of
the normal equations, scaled by an error estimate.
This subroutine computes the covariance matrix for the 
case where the solution has been done instead by
QR decomposition, specifically using the program \fIqr\fR.
The arguments are:
.IP \fBm\fR
the number of parameters fit.
.IP \fBn\fR
the number of data fit to.
.IP \fBa\fR
an \fBm\fR by \fBn\fR matrix,
containing in its upper right corner the right triangular
matrix R of the QR decomposition.
If the solution has previously been found using the
subroutine \fIqr\fR,
the matrix of functional values is overwritten
by this matrix.
The covariance matrix is returned in the
first \fBn\fR rows of \fBa\fR.
.IP \fBresq\fR
scaling factor.
If it is less than 0, the unscaled maztrix is returned;
if \fBresq\fR $>=$ 0, the matrix is scaled by
\fBresq/(m-n)\fR. If \fBresq\fR were the sum
of squared residuals,
this scaling factor would be the usual statistical
estimate for the error,
and the matrix returned the
estimated covariances of the parameters.
.SH SEE ALSO
\fIqr\fR(3X)
.SH AUTHOR
Translated to Fortran by D. C. Agnew (CIRES),
after C. L. Lawson and R. J. Hanson,
\fISolving Least Squares Problems\fR.
.SH SPONSOR
D. C. Agnew (CIRES)
