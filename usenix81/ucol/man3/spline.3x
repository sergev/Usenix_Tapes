.EQ
delim $$
.EN
.TH SPLINE 3X CIRES
.SH NAME
spline, eval \- cubic spline interpolation on unequally spaced data
(1-dimensional)
.SH SYNOPSIS
.PP
\fBcall spline(n,x,y,s,a)
.PP
\fByp = eval(xp,n,x,y,s)
.PP
\fBinteger*2 n
.PP
\fBreal x(n),y(n),s(n),a(n),xp,eval
.PP
f77 flag: \fB-lCm\fR
.SH DESCRIPTION
.PP
These two routines perform cubic spline
interpolation for data spaced at
irregular intervals.
Subroutine \fIspline\fR computes the coefficients
needed for spline interpolation; \fIeval\fR 
can then be used to find the value at any
particular point.
.PP
The arguments are:
.IP \fBn\fR
the number of data.
.IP x
the coordinates of the data values,
with x(1) < x(2) . . . < x(n).
.IP \fBy\fR
array of data to be interpolated.
.IP \fBs\fR
auxiliary array (filled by \fIspline\fR),
which holds the second derivatives at
the sample 
points.
.IP \fBa\fR
array used for working space,
dimensioned at least \fBn\fR.
.IP \fBxp\fR
coordinate at which the interpolated
value is wanted.
.PP
The derivatives at the ends are usually found by
fitting a parabola through the first and last three
points.
If you want to specify the derivatives,
before calling \fIspline\fR set \fBs\fR(1) to $ {dy(1)} over dx$,
\fBs\fR(2) to $ {dy(2)} over dx$,
and n to -1 times the number of terms in the series.
.PP
For four or fewer terms in the series,
the programs will fit a straight line.
If \fBxp\fR < \fBx\fR(1), \fIeval\fR will return \fBy\fR(1);
if \fBxp\fR > \fBx\fR(n), it will return \fBy\fR(n).
.SH SEE ALSO
\fBsplneq\fR(3X)
.SH AUTHOR
R. L. Parker (UCSD)
.SH SPONSOR
D. C. Agnew (CIRES)
.SH BUGS
If derivatives are specified, they
must be given at both ends.
