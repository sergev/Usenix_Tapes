

	VERSION RELEASES:  (Manx Versions)
	----------------

	2.06M   30-May-87 Steve Drew  :Compiled with manx 3.4a, bugs fixes,
				      :many new features.
	2.05M   10-Jan-87 Steve Drew  :Few bugs fixed, Matt's new 2.04
				      :features implemented.
	2.04M	09-Dec-86 Steve Drew  :Few bugs fixed, Commandline Editing
				      :& Function key support added.
				      :Changed my version to (M)anx.
	2.02A	20-oct-86 Steve Drew  :Implemented Matt's new features also
				      :now 16 bit compilable.
				      :(Same functionality as Matt's 2.03)
	2.01A	27-sep-86 Steve Drew  :Major conversion from Lattice > MANX
				      :and added more commands/features.

Please send all bug reports/comments to:

Steve Drew at (Digital Equipment Corp)

	ENET:    CGFSV1::DREW
	ARPA:    drew%cfgsv1.dec.com@decwrl.dec.com
	USENET:  {decvax|decwrl}!cgfsv1.dec.com!drew    

or
	52 Castledale Cres N.E.
	Calgary, Alberta
	Canada

Version 2.06M notes: (new features)
-----------------------------------

	- Minor changes for 3.4a of manx. Slightly smaller executable.
          (That of was before the new features).
	- Bug fixes:
	    o New fexec code from 3.4a fixes many problems like some lattice
	      programs causing task helds, when invoked under shell.
            o Limit of 1 line of type a head fixed.
            o Added check in mkdir to see if file already exists.
            o If levels too deep protection added.(prevents potential crash)

	- Better Pathing:
          For all external commands including any 'run' from shell we
          first search $_path variable then search amigados path.
	- Added -a startup switch, turns of command line editing code 
	  for use with AUX or conman handler.
	- Added setfiledate on copy, but maybe disabled via -d switch.
  	- Also -u switch on copy: if dest file is same name and not older
  	  then don't copy.
	- copy command will now create the destination directory if it does
          not exist when specified as 'copy [-r] dir dir'. If you specify
          copy file file file dir, then 'dir' must already exist.

	- Added recursive wild card support via '.../' specifier eg.
	  dir df0:.../*.c will go down all levels of df0: matching on
          any .c file. or echo .../* will expand to all files down all
	  trees from our current level.

	- Exclude pattern matching support, in a limited way , only one
          exclude pattern per cmd line and for files not dirs.
          eg.  
           dir !*.info will 	  exclude all *.info files in current dir.
           dir df0:.../!*.info    full directory tree of df0: but exclude
                                  any ugly .info files.
          dir !*.o !*.c (will result in ALL files matching since what
          doesnt match the !*.o will match the !*.c)

	- Directories always sorted. Sorted directories before were slow
          since files were examined twice once by expand() and then by do_dir.
          Now everything is done by expand() and do_dir() only formats the 
          printed output. -e switch removed since expand does that now.
          eg.
           dir df0:.../           does a full (All) sorted directory

	- Passing an argument that contains a space to an external command
	  is now implement the same way as internal commands, also any
	  expansion of a file name that contains a space will be enclosed
	  in quotes before being pass to an external command.
              the following will now work correctly:
		  $ rm "foo bar"        this worked before
		  $ DELETE "foo bar"    needed "\"foo bar"\" before.
		  $ "my prog"	        would not work before	
		  $ myprog *		would not work with spaced files before

Version 2.05M notes: (new features)
-----------------------------------

	- Shell search path now used on 'run' command as well.
	- New -e, exclude files option on dir command. see shell.doc.
	- Command line editing new key:  ^K - delete to end of line.
        - New variable _insert set to 0 makes default of no insert mode
	  for commandline editing default is 1. (insert mode on).
	- New 'copy' command from Matt's 2.04 'cp' logs files and directorys
	  as they are created and ^C detection. See doc for -r option.
	- Few bugs fixed.

   NEW FEATURES IN 2.04: (from Matt implemented in 2.05M)
	
        - RM command now has '-r' option.
        - \command forces the command parser NOT to look at aliases.  Thus,
          you can alias something like 'cd' and have the alias contain a 'cd'
          which references the internal cd:
           alias cd "stuff...;\\cd $x"
        - _histnum variable .. current history #
        - expanded filenames are sorted.
	   eg. Dir *    will output sorted directory.
 
Version 2.04M notes: (new features)
-----------------------------------
	
	- This version runs UNDER WORKBENCH 1.2 ONLY.
	- COMMAND LINE EDITING
	- Using Function keys.
	- New variable _width shows the number of collums in the window.
	  and will change automatically if the user resizes the window.
	- option -c when starting will invoke the rest of command line
	  and exit. (Thanks Dave.) Usefull to do stuff in the background.
	  e.g. run shell -c copy c:foo ram:;echo done.
	- pwd gets run as part of cd so as to set _cwd to full path name.

 
Version 2.02A notes: 
--------------------
	- For new features of 2.03 see Matt's instruction.txt appended below.
	- All Matt's new feature for 2.03 converted to manx. And uses c.lib.
	- Redirection appears to work fine. Even on bcpl programs.
	  Let me know if you find otherwise.
	- new varible	_path	for setting search path for external
	  cmds. Shell does not use the 1.2 PATH feature but you may
	  specify a search path by setting this symbol.
		e.g.
			$ set _path "ram:,c:,df0:c/,df1:c/"

	- Auto requesters are turned off during searching for cmds
	  except when an explicit path is specified eg. df0:c/sort.
	- Command list is sorted so that help displays readable output.
	- A few bugs fixed
	- Changed all i/o routines that used MY.LIB written by Matt to
	  use standard i/o or Amiga routines, since Manx is so efficeint
	  with standard i/o routines compiling all those library functions
	  did'nt gain anything as it does with Lattice.
	- Dir command rewritten to allow options:
		-s short mutil(4) collum display of files
		-d directorys only
		-f files only
	- Wildcarding now matches upper or lower case.	
	- Command will no longer abort if one of the arguments which
	  has wild card does not expand.
	- run program >redir will work properly as
	  long as you run command is called 'run'. With the lattice 
	  version the command got parsed like run >redir program, so
   	  all you got in you redir file was [CLI n].
	- On startup you current directory is determined and set.
	- Added %full and volume name to devinfo.
	- ps command added
	  

   NEW FEATURES IN 2.03.  Thanks to Steve Drew who suggested a '_path'
   variable.  The other difference with this version is that BCPL
   output redirection works properly.  Additionaly, alias loops are
   detected (this is what is known as a hack).
 
   NEW FEATURES IN 2.02.  I would like to thank Dave Wecker and Steve Drew
   for their numerous comments on the previous version of my shell.
 
   -Return code and error handling
      (A) retrieve return code
      (B) Manual or Automatic error handling.
   -Control C-F now passed to external commands.
   -can execute shell scripts as if they were normal commands (w/ arguments)
    (see down below)
   -BCPL programs which change the CLI state (CD/PATH...) now work with
    the shell.  However, the CLI PATH is not used currently.
   -MV command embellished... can now specify multiple files with a
    directory as the destination.
   -CD re-written, new variable $_cwd. startup directory figured out.
   -Comment character '#'
   -EXIT as an alternate to QUIT
 
   Additional Commands:
      abortline
      forever
 
   Additional SET variables (see documentation below)
      _cwd           current directory (see CD below)
      _maxerr        worst return value to date
      _lasterr       return value from last command (internal or external)
      _except        contains error level AND exception code. "nnn;command"
                     (see ABORTLINE, and start of section E)
 
      _passed        contains passed command line to source files
      _path          contains search path (example:  "c:,df1:c/,df0:c/"
 

