Received: by plus5.com (UIUC-5.31/24Nov86-03:13:38)
	id AA00606; Thu, 26 Mar 87 12:50:32 CST
Path: plus5!wucs1!mcdchg!clyde!rutgers!mit-eddie!think!ames!ptsfa!hoptoad!gnu
From: hoptoad.uucp!gnu (John Gilmore)
Newsgroups: comp.mail.uucp
Subject: uuslave status report
Summary: Look in net.sources for a new uuslave.
Message-Id: <1923@hoptoad.uucp>
Date: 24 Mar 87 01:43:09 GMT
Organization: Nebula Consultants in San Francisco
Lines: 64
Apparently-To: hokey

Uuslave work is progressing well here.  Not only is the program working
better, but the legalities have all been cleared up.

I got a call back from AT&T Unix Licensing (+1 800 828 UNIX) and they
have determined that AT&T has "no claim or interest" in the uuslave code
that I sent them (what came off the ACGNJ bbs).  They're emailing me
confirmation of this.  (I encourage you to contact them if you have
some code that you aren't sure about -- making that determination is
their job, and they seem to do it fairly.)

I will post my current version of uuslave (hoptoad-1.10) to net.sources
tonight.  This version has been running on hoptoad (under Unix) to
handle our incoming uucp traffic from lll-crg for several weeks.  It
has also run successfully on an MSDOS system run by Tim Pozar
(hoptoad!tim), receiving and sending files with hoptoad's uucico.  It's
not Tim's final version; in particular, it needs to rewrite file names
for MSDOS, since opening "D.hoptoadX1234" creates a file called
"D       .hop", which is kind of useless.  I've put in hooks for
OS-specific file name rewriting, which are also used on Unix for the
subdirectory hacks.

Tim also wrote some low-level interrupt driven serial port routines,
and is allowing them to be distributed, though he owns the copyright
on them.  We found that the standard MSDOS serial port drivers were
impossible; in particular, any time an overrun occurred (chars were
received before the program was ready for them), it would stop the
program and ask the console operator whether to abort, ignore, or retry.
Also, MSDOS (at least MSC 4.0) doesn't implement alarm(), so there
were no timeouts possible with their standard driver.

This version also includes some changes for CP/M-80 by Larry Marek,
though he doesn't have it transferring files yet.

Richard Sansom also sent changes to get it to compile on the Atari
ST, and is making progress.  If I get time tonight I'll merge in
his changes, otherwise they'll be in the next release.

This release includes logging code similar to the horrible logging
that uucico does; it also receives files into a temp file and then
renames them, so half-received files aren't picked up as if they
were complete.  The initialization sequence is much more robust.
It will now run like uucico (not prompt for login:, just run the
uucp protocol, and terminate when the other side hangs up).
The retransmission strategy is improved when a line drop occurs.
Many other things are improved since the last net.sources posting.

Probably the next release of uuslave will break it up into several
.c files, and split out the system-dependent code better.  I also
hope to merge in completed changes for several other ports -- 
please send me your diffs!  If it's in good enough shape, I'll
post it to mod.sources at that point.

I have copyrighted my version of uuslave and am distributing it
under the terms from the GNU Emacs General License.  This ensures
that as it evolves, the sources will remain available to the public.
Feel free to pass it all around and use it and hack on it.

I am getting a few pieces of mail per day asking for uuslave or the
uucp protocol documentation.  Please consider this and the net.sources
posting a reply to all of you...
-- 
(C) Copyr 1987 John Gilmore; you can redistribute only if your recipients can.
(This is an effort to bend Stargate to work with Usenet, not against it.)
{sun,ptsfa,lll-crg,ihnp4,ucbvax}!hoptoad!gnu		gnu@ingres.berkeley.edu
