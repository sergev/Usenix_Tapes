
 xpc_appl.hlp             X.PC Application User's Guide               Page  1
  3-31-86

                       Introduction to the User's Guide
                       --------------------------------

    XPC_APPL.EXE is an X.PC supported application that Tymnet has written
    to accompany and test the X.PC Driver Module.  We believe the program
    has achieved true "user hostility" and therefore do not recommend you
    actually use it in a production environment.  However, we designed it
    to be and is an EXCELLENT program to show you what must be done to link
    an application to the X.PC Driver Module.  That is its sole purpose.

    This guide describes some of the features of the 'XPC_APPL.EXE' program
    in order to help users better understand what the X.PC be useful for.
    Users that will be writing an X.PC application can use the source code
    for hints about making the calls, or use the runnable code to test
    their solution.

    It is important to remember that the program is just a test program,
    with very little checking done for 'proper' actions.  We use it to make
    sure the Driver rejects 'improper' actions.  There are some sections
    that are several proper actions made in sequence, such as O(nline.



    First, some general notes about the prompts:

    1.   In the following sections, consider the `|' character to be the
         left edge of the screen.  The examples won't show all 24 lines.

    2.   For prompts that are in the form: "X(??, Y(????:", the character
         preceding the '(' is the single character to be entered (lower or
         upper case).

    3.   With the exception of the 'Enter Channel Number [0-F]' prompt,
         most prompts can be escaped from by pressing the space bar.  The
         channel number prompt requires that you enter hexadecimal digits:
        '0'-'9', 'A'-'F'.

    4.   Prompts requiring integer values usually show the proper range,
         and can be answered with digits, followed by pressing the space
         bar or carriage return. If the system beeps at you, the number was
         not in the proper range.

    5.   Prompts that ask yes/no types of questions can be responded to
         with 'Y' or 'y' for yes, anything else for no.

    6.   In this document, characters within square brackets indicate a
         user response, and strings within angle brackets indicate a user
         response that is special or requires a multi-key keystroke.  For
         example: "[C <return>]" means type the character C, then press the
         return key.  <CTRL ?> means type the letter and the "Ctrl" key at
         the same time.



    For information about setting up your DOS environment so that the
    XPC_APPL.EXE program can run, look at the last section on page 17.  It
    describes the procedures and files required by the application program.





 xpc_appl.hlp             X.PC Application User's Guide               Page  2
  3-31-86

                   Using X.PC Make a Virtual Call and Login
                   ----------------------------------------

    The general procedure for logging into a host connected to TYMNET
    using X.PC is:

         1.   Load the X.PC Driver into memory.
         2.   Execute XPC_APPL.EXE.
         3.   Use the ONLINE function to access TYMNET.
         4.   Send the network a valid Network Server username.
         4.   Once the Network Server is up and running, use the MODE
              function to get the Driver into packet mode.  
         5.   Once in packet mode, use the CALL functions to log in to the
              desired host.

    Detailed instructions for this procedure are described below.  This
    guide will assume that you are using a fixed disk, but the action is
    identical on a two diskette drive system.


         1.   Move to the directory that contains XPC_APPL.EXE and
              XPCv_rr.COM.



         2.   Rename the file XPCv_rr.COM to XPC.COM, if not done already.



         3.   At the DOS prompt:  

                   C>[xpc <return>]

         PROGRAM RESPONSE:
         |X.PC Driver  date    Version v.rr Loaded.



         4.   At the DOS prompt:  

                   C>[xpc_appl <return>]

         PROGRAM RESPONSE (MAIN MENU):
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:
         |




 xpc_appl.hlp             X.PC Application User's Guide               Page  3
  3-31-86

         5.   At the Main Menu, press [O] (for Online)
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[O]
         |

         PROGRAM RESPONSE:
         |
         |Reset link?:

              To obtain a new connection to TYMNET, the link must be
              reset (Y). Other prompts include the baud rate desired,
              whether the PC will be a DTE or DCE (important if you wish to
              test in a PC to PC environment), and which COM port is being
              used:

         |
         |Reset link?:[Y]  1(200,2(400,4(800:[x]  As DTE?:[Y]  use COM1?:[Y]

              The baud rate for most dial connections will be 1200 or 2400.

              If the PC is going to be a DTE, answer (Y).  If a DCE, answer
              (N).

              Make sure that you specify the proper COM port to use,
              depending upon the configuration of your system.  'Y' chooses
              COM1, 'N' is COM2. 


              After choosing the COM port, wait for the program to clear
              the screen and display:

         PROGRAM RESPONSE:
          ___
         |Type ^Z to exit TTY mode

              At this point, you are in a simple terminal emulation mode,
              able to talk to a modem or log directly into Tymnet.  If you
              are using a modem, enter the dialing commands (e.g.,
              ATDTnumber for a Hayes compatible modem).



         6.   Perform normal procedures to access Tymnet. If you have a
              modem dial the local Tymnet number.  If you have a hardwire
              connection, you should not have to do anything. If you are
              not configured at 1200 baud, the initial Tymnet response may
              be unreadable.

         TYMNET RESPONSE:
         |
         |please type your terminal identifer

              Personal computers are terminal identifier type A.

         |please type your terminal identifer [A]

         TYMNET RESPONSE:
         | -#####-###-
         |please log in:



 xpc_appl.hlp             X.PC Application User's Guide               Page  4
  3-31-86

         7.   At this point the objective is to log in to an X.PC Network
              Server, or, XNS, which is an intermediate host within TYMNET
              that the other side of the X.PC protocol and that the
              personal computer will talk to. There are several Network
              Servers available within the TYMNET public network.

              To log in to the Network Server, respond to the 'please log
              in:' prompt with:

         |-#####-###-
         |please log in:[Your Assigned X.PC Network Username <return>]

         TYMNET RESPONSE:
         |
         |TYMNET X.PC DEVELOPMENT NETWORK SERVER - location - node # - host #


              After displaying the banner message, the Network Server will
              send 6 escape characters (an arrow pointing to the left).

              If the banner message does not appear after a few seconds,
              the Network Servers are down.  Try again in a few minutes.
              If there is still no response, call Tymnet Customer Service
              at (800) 336-0149 to report a problem.


         8.   Return to the Main Menu of the test application by typing:

              [<CTRL Z>]

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:
         |


         9.  At the Main Menu, enter packet mode by typing M for Mode:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[M]
         |

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:
         |C(haracter,  P(acket,  W(ait for packet,  S(tart packet :
         |

              Now type P for Packet:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:
         |C(haracter,  P(acket,  W(ait for packet,  S(tart packet :[P]




 xpc_appl.hlp             X.PC Application User's Guide               Page  5
  3-31-86

         PROGRAM RESPONSE:
          ___
         |success
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:
         |C(haracter,  P(acket,  W(ait for packet,  S(tart packet :
         |


              This function just starts up packet mode, the Network Server
              is ready because it sent the escapes already.  If the wait
              function times out, you will have to return to Step 5 and
              start over.

              Once you get the 'success' message on line 1 of the screen
              indicating that the Device is in Packet state, press the
              <Space Bar> to return to the Main Menu.  



         10.  At this point, the X.PC Network Server has been accessed.
              Now you have to log in to the target host.  Follow this
              procedure to log in, or, in X.PC terminology, place a 'call'.

              Press C to perform call-oriented functions.
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :
         |

              Press [N] to do a network log in.
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :[N]
         |

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :[N]
         |Enter Channel Number [0-F] :

              X.PC can handle up to 15 virtual circuits.  It does not
              matter which number you choose, but you must use that number
              for all functions calls that apply to the channel.  Do not
              use channel 0 to build a user session.  Channel 0 is reserved
              to monitor the physical connection to the network.



 xpc_appl.hlp             X.PC Application User's Guide               Page  6
  3-31-86

          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :[N]
         |Enter Channel Number [0-F] : [x]  (1 <= x <= F)


         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :[N]
         |Enter Channel number: [x]


         |Enter Request data (up to ^Z):

              The application will then wait for further input from you.



         11.  Placing the call:

              Enter as many lines of data as required to completely specify
              your Tymnet login string.  Type in whatever you usually use
              to log in, and be sure to put a <return> before the <CTRL Z>.
              As a communications vendor, you should have access to some
              on-line service such as Dow Jones, NewsNet, etc. through
              TYMNET.  If you do not have access to anything on the TYMNET
              network through another vendor, contact Steve Kim.

         Generalized TYMNET public network login example:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :[N]
         |Enter Channel Number [0-F] : [x]


  ====>  |Enter Request Data (up to ^Z): [Username:host #;password<return>]
         |[<Personal Identifier> <return>]  (for host)
         |[<Personal Password> <return>]  (for host)
         |[<CTRL Z>]


         PROGRAM/TYMNET RESPONSE:

              If it all works, you will see "Call Acc Pndg", then "Call
              Acc", then "Connect" flash on the screen. When you see
              "Connect", press the <Space Bar>, and you will enter a TTY
              session with the Host computer.  If it doesn't work, you will
              a see a "Call cleared" message, and a reason.  If the call is
              cleared, return to step 5 and try again.

              If the error message "error=illegal char RQ (5), SPACE"
              appears on the STATUS/ERROR line, you have forgotten to place
              the application into packet mode.  Return to step 8.



 xpc_appl.hlp             X.PC Application User's Guide               Page  7
  3-31-86


         12.  Terminating the TTY session, and returning to the Main Menu:

              If you wish to return to the Main Menu from your on-line
              application, enter the appropriate host logoff command and
              type <CTRL Z>.  You will then be able to initiate more calls,
              set timers, change terminal characteristics, or use other
              packet state functions.




 xpc_appl.hlp               X.PC Application User's Guide             Page  8
  3-31-86

                  Establishing Multiple Sessions and Windows
                  ------------------------------------------

    The procedures to establish multiple sessions are exactly like those to
    establish one session shown in steps 5-11 above.  The only difference
    is that a different channel is selected at the appropriate prompt.

    XPC_APPL.EXE can establish up to 15 simultaneous sessions, though it
    can only display one session at a time.  It isn't sophisticated enough
    to display more than one window of information.  But to prove that it
    works, perform the following:


         1.   Leave the current session without logging off.  To do this,
              press [<CTRL Z>].  If you have already left the session,
              re-establish it by following steps 5-11 above.

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :



         2.   Now establish a call to the identical destination, only use a
              different channel at the appropriate prompt, say channel 2
              instead of 1.

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :[N]
         |Enter Channel Number [0-F] : [2]


         |Enter Request Data (up to ^Z): [Username:host #;password<return>]
         |[<Personal Identifier> <return>]  (for host)
         |[<Personal Password> <return>]  (for host)
         |[<CTRL Z>]

              If it all works, you will see "Call Acc Pndg", then "Call
              Acc", then "Connect" flash on the screen. When you see
              "Connect", the session with the host computer will start.



         3.   Leave the current session without logging off.  To do this,
              press [<CTRL Z>].

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(ET login, P(C login, I(ncoming, O(utgoing, S(tatus :




 xpc_appl.hlp             X.PC Application User's Guide               Page  9
  3-31-86

         4.   Now press the [<space bar>] to return to the Main Menu.

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:



         5.   Now press I to select IO.

         PROGRAM RESPONSE:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
         |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:
         |


              Press W for Window.

      PROGRAM RESPONSE:
       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:[W]
      |Enter Channel Number [0-F] :


         6.   Press the number associated with your first session.

      PROGRAM RESPONSE:
       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:[W]
      |Enter Channel Number [0-F] :[x]
      |
      |
      |Full [1-80, 1-25]?:


              Now fill in the requests exactly as shown:

       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:[W]
      |Enter Channel Number [0-F] :[x]
      |
      |
      |Full [1-80, 1-25]?:[N]
      |first row is : 5 change?:[Y] ok [ 1-23]:[10]
      |first col is : 1 change?:[N]
      |last row is : 23 change?:[Y] ok [11-24]:[15]
      |last col is : 80 change?:[N]




 xpc_appl.hlp             X.PC Application User's Guide               Page 10
  3-31-86

      PROGRAM RESPONSE:
       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:



         7.   Repeat for the channel associated with your second session.

      PROGRAM RESPONSE:
       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:[W]
      |Enter Channel Number [0-F] :[y]
      |
      |
      |Full [1-80, 1-25]?:

              Now fill in the requests exactly as shown:
       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:[W]
      |Enter Channel Number [0-F] :[y]
      |
      |
      |Full [1-80, 1-25]?:[N]
      |first row is : 5 change?:[Y] ok [ 1-23]:[20]
      |first col is : 1 change?:[Y] ok [ 1-79]:[40]
      |last row is : 23 change?:[N]
      |last col is : 80 change?:[N]

      PROGRAM RESPONSE:
       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:



         8.   Press T for TTY and select one of the two channel numbers.

      PROGRAM RESPONSE:
       ___
      |
      |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
      |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:[T]
      |Enter Channel Number [0-F] :[x or y]



         9.   The program will drop you back into the on-line session.  Do
              whatever is necessary to wake up the session, like pressing
              <return>.  You should see the session in that part of the
              screen defined for it.  Use <CTRL Z> and TTY to toggle back
              and forth between the two sessions and windows.




 xpc_appl.hlp             X.PC Application User's Guide               Page 11
  3-31-86

                  Individual Descriptions of Program Prompts
                  ------------------------------------------
    MAIN PROMPT:
          ___
         |STATUS/ERROR MESSAGE LINE
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:
         |

    The STATUS/ERROR MESSAGE LINE will either say "success" or display an
    error message and the number of the error when a call is in error.  You
    will have to press any key to proceed after the error message/number
    are shown.

    D(ev    = Routines to find the status of the device or to clear/reset
              the status of the device.

    M(ode   = Routines to change the device from packet mode to character
              mode states, plus routines that do this on an automatic
              basis.

    O(nline = Does the steps necessary to start or restart character mode,
              i.e., establish a connection to the network or another
              personal computer.

    C(all   = Routines implementing the call logic for logical channels in
              packet mode.

    I(O     = Routines implementing input and output of data.

    L(ink   = Modem signals, baud rate, data/stop bits, etc.

    T(imer  = Start/stop/check on timer routines.

    P(AD    = PAD-specific echo/parity setting and checking routines.

    Q(uit   = Asks "clear device?", best response is 'Y' if really leaving
              the program.

    space   = Clear the screen or move up one menu level.


    DEVICE PROMPT:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[D]
         |Device changes [?] C(lear, R(eset, S(tatus :
         |

    [?]     = Current status, '?' means unknown at this time, 'W' wait
              reset state, 'C' character state, and 'P' packet state.

    C(lear  = Clear the device.

    R(eset  = Asks "Port # [0-2]", see X.PC Driver Interface specification
              for port number uses.

    S(tatus = Gets the device status, and then displays the following:
              state=?  ver=?  rev=?  pad avail=?  port #=?  PVCs=?
               The '?' character will be replaced with status information.



 xpc_appl.hlp             X.PC Application User's Guide               Page 12
  3-31-86

    MODE PROMPT:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[M]
         |[xxx] C(haracter, P(acket, W(ait for packet, S(tart packet:
         |

'xxx'            = Will be 'DTE' or 'DCE'.  This will be helpful when
                   deciding to do either the 'W' or 'S' functions.

C(haracter       = Will issue 'set character state' call to the X.PC
                   Network Server.

P(acket          = Will issue 'set packet state' call to the X.PC Network
                   Server.

W(ait for packet = Should be run in character state only, when the
                   'xxx' string indicates 'DTE'.  The responsibility of
                   a DTE is to wait for SIX ESCAPE characters. Once they
                   arrive, a 'set packet state' call is made.

S(tart packet    = Should be run in character state only, when the 'xxx'
                   string indicates 'DCE'.  The responsibility of a DCE is
                   to send a series of ESCAPE characters (the Network
                   Server is a DCE, use DTE for a PC-Network connection).
                   After the escapes go, a 'set packet state' call is made.


    NOTE:     As mentioned previously, you may use X.PC in a PC to PC
              mode of operation without using the network.  One PC must be
              set as a DTE and the other as a DCE.  When you connect two
              PCs back-to-back, place the DTE in 'wait for packet' first,
              then cause the DCE to 'start packet'.

    ONLINE PROMPT:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[O]
         |

    This is a straightforward way of getting character input/output
    started.  The code asks the following questions:

 Reset link?        :   'Y' causes a reset (channel 0), which drops DTR.
                        'N' will leave the connection as it is.

 1(200, 2(400, 4(800:   Enter 1, 2, or 4 to pick the rate you want.

 As DTE?            :   This has to do with starting packet mode, see the
                        MODE PROMPT section for an explaination.  For a
                        PC-Network Server connection, enter 'Y'.  For a PC
                        to PC connection (if the PC is a DCE), enter 'N'.

 using COM1?        :   'Y' causes use of COM port 1, 'N' causes use of COM 
                        port 2.

    After a short delay, you will be dropped into TTY mode, in character
    state.  Be sure not to hit a key while waiting, you may not let the
    program toggle the DTR signal long enough.



 xpc_appl.hlp             X.PC Application User's Guide               Page 13
  3-31-86


    CALL PROMPTS:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[C]
         |N(et login, P(C login, I(ncoming, O(utgoing, S(tatus:
         |

    Most of these functions will first ask for a channel number.

    N(et login = Performs the steps necessary to log into a host connected
                 to TYMNET.  Sends a call request, waits for a call accept.
                 If an accept is received, state changes to connected.
                 Will pause briefly while 'connected' displayed, then into
                 TTY mode.

    P(C login  = Performs the steps necessary to allow a log in to the PC
                 as a host.  Waits for call request, sends accept, enters
                 connected state.  Will pause briefly before starting TTY.

    O(utgoing  = Sub-menu of calls useful for placing an outgoing call.

    I(ncoming  = Sub-menu of calls useful for receiving an incoming call.

    S(tatus    = Displays the channel status of a channel, until key hit.


    NET LOGIN PROMPT:

         The first section of this document contains a detailed description
         of how to use this function to log in to a host, using Tymnet and
         the Network Server.


    PC LOGIN PROMPT:

         When you enter 'P' at the CALL PROMPT menu, you will be asked for
         a channel number.  You will then be asked, "Auto-accept?".  An
         answer of 'Y' to this will cause the program to respond
         automatically to a call request, if one is received.  After
         sending the accept packet automatically, this option will drop you
         into TTY mode.  If you answer 'N', you will have to wait for the
         program to read the call data of the request, display it, and then
         ask you if want to accept.  If you don't want to accept, answer
         'N', and the call will be cleared.  If you do accept, you will
         enter a TTY session.

    Hints on connecting two PCs back-to-back:

         1.   Make one of the PCs a DCE, the other a DTE (this is
              necessary).
         2.   Set DTE into 'wait for packet', set DCE into 'start packet'.
         3.   Set either PC into the PC LOGIN state, waiting for a call,
              using auto-accept so that you won't have to interact with the
              program.
         4.   Set the other PC into NET LOGIN, and send a call request with
              no data, that is, just enter ^Z at the 'call request data'
              prompt.
         5.   Stand back and wait for both to enter TTY session.



 xpc_appl.hlp             X.PC Application User's Guide               Page 14
  3-31-86


    INCOMING CALL PROMPT:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(et login, P(C login, I(ncoming, O(utgoing, S(tatus:[I]
         |Enter Channel Number [0-F] :
         |W(ait for call, R(ead request data, A(ccept, C(lear, S(tatus:

W(ait for call     = 'Set call answer' function, wait for incoming call.

R(ead request data = Read the data from a call request.

A(ccept            = Accept an incoming call, may enter data for accept
                     packet.

C(lear             = Clear a call: must enter a cause, and a timeout.  If
                     you give up on an incoming call, set timeout to 1,
                     check status. This is the best way to disconnect a
                     channel quickly.

S(tatus            = Looping routine that checks, then displays, channel
                     status.

         The proper sequence of events for getting an incoming call
         connected is:  Wait, read request data, send an accept.  The
         status function should be used in between states, it makes the
         Driver act on packets.




    OUTGOING CALL PROMPT:
          ___
         |
         |D(ev, M(ode, C(all, I(O, L(ink, T(imer, O(nline, P(AD, Q(uit:[C]
         |N(et login, P(C login, I(ncoming, O(utgoing, S(tatus:[O]
         |Enter Channel Number [0-F] :
         |R(equest, I(nput accept data, C(lear, S(tatus:

R(equest           = Enter data for call request, function sends it.

I(nput accept data = Read the data from a call accept packet (if any).

C(lear             = Send call clear, must enter a cause, and a timeout.
                     If you were cleared from the host, set timeout to 1,
                     check status. This is the best way to disconnect a
                     channel quickly.

S(tatus            = Looping routine that checks, then displays, channel
                     status.

         The proper sequence of events for getting an outgoing call
         connected is:  Sead request data, wait for an accept, read the
         accept data.  The status function should be used in between
         states, it makes the Driver act on packets.




 xpc_appl.hlp             X.PC Application User's Guide               Page 15
  3-31-86

    INPUT/OUTPUT PROMPT:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[I]
         |T(ty, O(utput, I(nput, F(ilesend, C(k status, D(ump, S(tuff, W(indow:
         |

         These functions won't ask you for a channel while in character
         state. A channel must be in 'connected' state, or the requests are
         ignored.

  T(ty       = TTY emulator function, using the channel's current 'window'.
               Will also connect you to the current screen on the channel
               specified.

  O(utput    = Allows you to enter a line up to a carriage return, and will
               send that line out with a 'write data' call.  No checks are
               done to make sure that all of the data was output.  To end,
               enter <CTRL Z><return>, as the only characters on a line.

  I(nput     = Will continously read from the line, to halt hit any key.

  F(ilesend  = Enter a text filename, in you current directory, and it will
               be sent. 'Local echo' prompt answered 'Y' will cause the
               characters that are written to X.PC to be displayed, 'N'
               causes the characters that are read from X.PC to be
               displayed. 'Add LFs' prompt answered 'Y' will add a free
               Line Feed for any Carriage Returns, 'N' will not ('Y' is
               useful when talking PC-to-PC).

  C(k status = Shows the current status of the channel.

  D(ump      = Allows you to throw away all data yet unread from X.PC or
               unwritten by X.PC to Network Server.

  S(tuff     = Allows you to enter a single line, and a delay.  The routine
               sends the line, delaying between lines, until any key is
               pressed.

  W(indow    = Allows you to specify the size of the window used during TTY
               session.  Minimum window size is 2 chars, 2 lines.  No tests
               are made for overlap, must set for each channel.


    TIMER PROMPT:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[T]
         |S(tart a timer, E(nd a timer, C(heck on timer :
         |

         These functions will only ask for a channel number in packet
         state.

     S(tart = Allows you to enter a time length, start an X.PC user timer.

     E(nd   = Terminates the timer running on that channel.

     C(heck = Cycles until a key is pressed, showing 'RUNNING' or 'STOPPED'.



 xpc_appl.hlp             X.PC Application User's Guide               Page 16
  3-31-86


    PAD PROMPT:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[P]
         |PAD Parameters: S(et, R(ead:
         |

         The user can set/read the current PAD parameters for packet
         channels.  The most useful are the 'forward character' and the
         'forward timeout'. See the X.PC Driver Interface and PAD Protocol
         Specifications for an explanation.



    QUIT PROMPT:
          ___
         |
         |D(ev, M(ode, O(nline, C(all, I(O, L(ink, T(imer, P(AD, Q(uit:[Q]
         |clear device?:
         |


         If you are actually leaving the application, then respond to the
         prompt with a 'Y' or 'y'.




 xpc_appl.hlp             X.PC Application User's Guide               Page 17
  3-31-86


            Preparing Your Personal Computer To Run The Application
            -------------------------------------------------------

    The XPC_APPL.EXE program requires three things:  
         1.   The "ANSI.SYS" device driver loaded
         2.   Control-Break processing OFF
         3.   The X.PC Driver Module program loaded into memory.
         4.   A modem


    1.   If you don't have the "ANSI.SYS" device driver loaded (by
         including it in your 'config.sys' file before boot-up) you will
         see a message stay on the screen that says:  "IF YOU CAN READ
         THIS, YOU NEED TO LOAD THE 'ANSI.SYS' DRIVER".  If you have the
         Ansi Driver loaded, the message will flash briefly. The cursor
         positioning and clearing routines require that ANSI.SYS be loaded.
         To load ANSI.SYS, create a file called CONFIG.SYS (or append to an
         existing file), on the fixed disk (root directory) used to boot up
         DOS when the PC is turned on.  Place within this file the string
         "device=ansi.sys".  After placing the ANSI.SYS driver file on your
         boot disk, You must reboot the PC for this change to have an
         effect.

    2.   It is suggested that you issue the 'break=off' command to DOS
         before you run the program.  There are problems with typing the
         Control-C character if you don't turn off DOS's Control-Break
         processing.  The command may be typed at the DOS prompts.

    3.   If you attempt to run the program before the X.PC Driver has been
         loaded, it returns you to the DOS monitor with an "The X.PC Driver
         is not loaded" message.  If the Driver is loaded, you will go
         through the ANSI.SYS string display, and then to the Main Menu.

    4.   Obviously, a connection to the TYMNET network cannot be made
         without a modem.  Make sure the modem is properly configured.
