	*** SCAME ***	(the SCreen-oriented Anti-Misery Editor)

You are looking at the SCAME tutorial.  Comments on this document
should be sent via "mail leif@erisun.UUCP".

SCAME commands generally involve the <CONTROL> key (sometimes labelled
<CTRL> or <CTL>) or the <ESCAPE> key (sometimes labelled <ESC> or <ALT>).
Rather than write out <ESCAPE> or <CONTROL> each time we want you to prefix
a character, we'll use the following abbreviations:

 C-<chr>  means hold the <CONTROL> key while typing the character <chr>.
          Thus, C-F (pronounced Control-F) would be: hold the <CONTROL>
	  key and type F.
 M-<chr>  stands for META-<chr>. If you don't have a <META>-key, you
	  must use the <ESCAPE> key.  Thus, M-F (pronounced Meta-F) would
	  be:  Type <ESCAPE>, release it, then type the character F.

The characters ">>" at the left margin indicate directions for you to
try using a command.  For instance:

>>  Now type C-V (View next screen) to move to the next screen.
        (go ahead, do it by depressing the control key and V together).
        From now on, you'll be expected to do this whenever you finish
        reading the screen.

Note that there is an overlap when going from screen to screen; this
provides some continuity when moving through the file.

The first thing that you need to know is how to move around from
place to place in the file.  You already know how to move forward a
screen, with C-V.  To move backwards a screen, type M-V (i e type
<ESCAPE>, release it, then type a V).

>>  Try typing M-V and then C-V to move back and forth a few times.
    Make sure you understand the difference between a Control-command
    and a Meta-command.


SUMMARY
-------

The following commands are useful for viewing screenfuls:

        C-V     Move forward one screenful
        M-V     Move backward one screenful
        C-L     Clear screen and redisplay everything
                 putting the text near the cursor at the center.

>> Find the cursor and remember what text is near it.
   Then type a C-L.
   Find the cursor again and see what text is near it now.



WATCH OUT
---------

For the moment, some of the commands described here have not
been implemented yet. If you try to use them, you will get the 
"NYI Function is Not Yet Implemented?" error message. Also, some
commands do not yet function exactly as described here. When you
encounter one of those cases, have forbearance.


BASIC CURSOR CONTROL
--------------------

Getting from screenful to screenful is useful, but how do you
reposition yourself within a given screen to a specific place?
There are several ways you can do this.  One way (not the best, but
the most basic) is to use the commands previous, backward, forward
and next.  As you can imagine these commands (which are given to
SCAME as C-P, C-B, C-F, and C-N  respectively) move the cursor from
where it currently is to a new place in the given direction.  Here,
in a more graphical form are the commands:

                          Previous line, C-P
                                  :
                                  :
   Backward, C-B .... Current cursor position .... Forward, C-F
                                  :
                                  :
                          Next line, C-N

You'll probably find it easy to think of these by letter.  P for
previous, N for next, B for backward and F for forward.  These are
the basic cursor positioning commands and you'll be using them ALL
the time so it would be of great benefit if you learn them now.

>> Do a few C-N's to bring the cursor down to this line.

>> Move into the line with C-F's and then up with C-P's.
   See what C-P does when the cursor is in the middle of the line.


Lines are separated by one character, called a Linefeed (or Newline).

>> Try to C-B at the beginning of this line.  Do a few more C-B's.
   Then do C-F's back to the end of the line and beyond.


When you go off the top or bottom of the screen, the text beyond
the edge is shifted onto the screen so that your instructions can
be carried out while keeping the cursor on the screen.


>> Try to move the cursor off the bottom of the screen with C-N and
   see what happens.

If moving by characters is too slow, you can move by words.  M-F
(Meta-F) moves forward a word and M-B moves back a word.

>> Type a few M-F's and M-B's.  Intersperse them with C-F's and C-B's.

Notice the parallel between C-F and C-B on the one hand, and M-F and
M-B on the other hand.  Very often Meta characters are used for
operations related to English text whereas Control characters operate
on the basic textual units that are independent of what you are
editing (characters, lines, etc).  There is a similar parallel between
lines and sentences: C-A and C-E move to the beginning or end of a
line, and M-A and M-E move to the beginning or end of a sentence.

>> Try a couple of C-A's, and then a couple of C-E's.
   Try a couple of M-A's, and then a couple of M-E's.

See how repeated C-A's do nothing, but repeated M-A's
keep moving farther.  Do you think that this is right?

Two other simple cursor motion commands are M-< (Meta Less-than),
which moves to the beginning of the file, and M-> (Meta Greater-than),
which moves to the end of the file.  You probably don't need to try
them, since finding this spot again will be boring.

The location of the cursor in the text is also called "point".  To
paraphrase, the cursor shows on the screen where point is located in
the text.

Here is a summary of simple moving operations including
the word and sentence moving commands:

        C-F     Move forward a character
        C-B     Move backward a character

        M-F     Move forward a word
        M-B     Move backward a word

        C-N     Move to next line
        C-P     Move to previous line

        C-A     Move to beginning of line
        C-E     Move to end of line

        M-A     Move back to beginning of sentence
        M-E     Move forward to end of sentence

        M-<     Go to beginning of file
        M->     Go to end of file

>> Try all of these commands now a few times for practice.
   Since the last two will take you away from this screen,
   you can come back here with M-V's and C-V's.  These are
   the most often used commands.

Like all other commands in SCAME, these commands can be given
arguments which cause them to be executed repeatedly.  The way
you give a command a repeat count is by typing C-U and then the
digits before you type the command.

For instance, C-U 8 C-F moves forward eight characters.

>> Try giving a suitable argument to C-N or C-P to come as close
   as you can to this line in one jump.

The only apparent exception to this is the screen moving commands,
C-V and M-V.  When given an argument, they scroll the screen up or
down by that many lines, rather than screenfuls.  This proves to be
much more useful.

>> Try typing C-U 8 C-V now.

Did it scroll the screen up by 8 lines?  If you would like to
scroll it down you can give an argument to M-V.


WHEN SCAME IS HUNG
------------------

If you want to interrupt SCAME when it is waiting for input, you can
stop it safely by typing C-G.
You can also use C-G to discard a numeric argument or the beginning of
a command that you don't want to finish.

>> Type C-U 100 to make a numeric arg of 100, then type C-G.
   Now type C-F.  How many characters does it move?
   If you have typed an <ESCAPE> by mistake, you can get rid of it
   with a C-G.

Note that you can only use C-G to interrupt SCAME when it is waiting
for input. If SCAME is running, the only way to stop it is by logging
in on another terminal and killing the SCAME process. Note that this
is a dangerous procedure that may cause your text buffer to be lost!
Don't use it unless you absolutely have to.


INSERTING AND DELETING
----------------------

If you want to type text, just do it.  Characters which you can see,
such as A, 7, *, etc. are taken by SCAME as text and inserted
immediately.  Type <Return> (the carriage-return key) to insert a line
separator.

You can delete the last character you typed by typing <Rubout>.
<Rubout> is a key on the keyboard, which may be labelled "Delete"
instead of "Rubout" on some terminals.  More generally, <Rubout>
deletes the character immediately before the current cursor position.

>> Do this now, type a few characters and then delete them
   by typing <Rubout> a few times.  Don't worry about this file
   being changed; you won't affect the master tutorial.  This is just
   a copy of it.

>> Now start typing text until you reach the right margin, and keep
   typing.  When a line of text gets too big for one line on the
   screen, the line of text is "continued" onto a second screen line.
   The exclamation mark at the right margin indicates a line which has
   been continued.
>> Use <Rubout>s to delete the text until the line fits on one screen
   line again.  The continuation line goes away.

>> Move the cursor to the beginning of a line and type <Rubout>.  This
   deletes the line separator before the line and merges the line onto
   the previous line.  The resulting line may be too long to fit, in
   which case it has a continuation line.
>> Type <Return> to insert the separator again.

Remember that most SCAME commands can be given a repeat count;  Note
that this includes characters which insert themselves.

>>  Try that now -- type C-U 8 * and see what happens.

You've now learned the most basic way of typing something in
SCAME and correcting errors.  You can delete by words or lines
as well.  Here is a summary of the delete operations:

        <Rubout>     delete the character just before the cursor
        C-D          delete the next character after the cursor

        M-<Rubout>   kill the word immediately before the cursor
        M-D          kill the next word after the cursor

        C-K          kill from the cursor position to end of line
        M-K          kill to the end of the current sentence

Notice that <Rubout> and C-D vs M-<Rubout> and M-D extend the parallel
started by C-F and M-F (well, <Rubout> isn't really a control
character, but let's not worry about that).  C-K and M-K are like C-E
and M-E, sort of, in that lines are opposite sentences.

Now suppose you kill something, and then you decide that you want to
get it back?  Well, whenever you kill something bigger than a
character, SCAME saves it for you.  To yank it back, use C-Y.  Note
that you don't have to be in the same place to do C-Y; This is a good
way to move text around.  Also note that the difference between
"Killing" and "Deleting" something is that "Killed" things can be
yanked back, and "Deleted" things cannot.  Generally, the commands
that can destroy a lot of text save it, while the ones that attack
only one character, or nothing but blank lines and spaces, do not
save.

For instance, type C-N a couple times to postion the cursor
at some line on this screen.

>> Do this now, move the cursor and kill that line with C-K.

Note that a single C-K kills the contents of the line, and a second
C-K kills the line itself, and make all the other lines move up.  If
you give C-K a repeat count, it kills that many lines AND their
contents.

The text that has just disappeared is saved so that you can
retrieve it.  To retrieve the last killed text and put it where
the cursor currently is, type C-Y.

>> Try it; type C-Y to yank the text back.

Think of C-Y as if you were yanking something back that someone
took away from you.  Notice that if you do several C-K's in a row
the text that is killed is all saved together so that one C-Y will
yank all of the lines.

>> Do this now, type C-K several times.

Now to retrieve that killed text:

>> Type C-Y.  Then move the cursor down a few lines and type C-Y
   again.  You now see how to copy some text.


FILES
-----

In order to make the text you edit permanent, you must put it in a
file.  Otherwise, it will go away when your invocation of SCAME goes
away.  You put your editing in a file by "visiting" the file.  What
visiting means is that you see the contents of the file in your SCAME;
and, loosely speaking, what you are editing is the file itself.
However, the changes still don't become permanent until you "save" the
file.  This is so you can have control to avoid leaving a half-changed
file around when you don't want to.  Even then, SCAME really makes a
new version of the file and saves the old version under a slightly
different name (so that you can verify or throw away your changes later
if you like).

If you look near the botton of the screen you will see a line that
starts with "SCAME  (Fundamental)  tut1:" and continues with the
filename tut1, which is the name of the SCAME tutorial; the file
you are now visiting.  Whatever file you visit, that file's name will
appear in that precise spot.

The commands for visiting and saving files are unlike the other
commands you have learned in that they consist of two characters.
They both start with the character Control-X.  There is a whole series
of commands that start with Control-X; many of them have to do with
files, buffers, and related things, and all of them consist of
Control-X followed by some other character.

Another thing about the command for visiting a file is that you have
to say what file name you want.  We say the command "reads an argument
from the terminal" (in this case, the argument is the name of the
file).  After you type the command

        C-X C-V   Visit a file

SCAME will ask you for the file name.  You should end the name with
the Return key.  After this command, you will see the contents of the
file in your SCAME and you can start editing edit its contents.

If you are editing a file in SCAME and type the command C-X C-V to visit
another file, you will lose whatever changes you did to the first file.
If you wish to make the changes permanent, you must issue the command

        C-X C-S   Save the file

A new version of the file will be created.  When the operation is
finished, SCAME prints the name of the file saved.  You should save
fairly often, so that you will not lose very much work if the system
should crash.

Note that there are two ways to visit a file in SCAME. Either you
can start SCAME with the file's name as an argument to the shell,
($ scame foo.p), or you can use the C-X C-V command inside SCAME.

To make a new file, just visit it "as if" it already existed.  Then
start typing in the text.  When you ask to "save" the file, SCAME
will really create the file with the text that you have inserted.
From then on, you can consider yourself to be editing an already
existing file.

>> Try it: Type C-X C-V and then the name of a file, "foo" for 
   instance. Put some text in it, and save it; then exit from
   SCAME and look at the file to be sure that it worked.
   Then continue with part two of the tutorial.
