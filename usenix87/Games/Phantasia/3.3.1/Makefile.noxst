# Makefile for Phantasia 3.3.1
#
# Use this makefile if you don't have 'xstr'.  Use the other makefile if you do.
# To create game:
#
# 1)  Set up a directory where the game and its support files will live.
#        (It is suggested that the source be kept somewhere else.)
#
# 2)  Set up the variables in Makefile to reflect your particular situation.
#
# 3)  Check out ok_to_play() at the end of main.c if you want to include
#        code to restrict access at certain times.
#
# 4)  'make install' and watch it fly.
#
# NOTE:  It is important to run 'setup' before trying to run 'phantasia'.
#	 The install procedure does this for you.

RM =		-rm
SHAR =		/a2/estes/bin/shar

# Add '-ljobs' to LIBS if 4.1bsd; add -ltermlib if not SVR2
LIBS =		-lm -lcurses
# May need '-I/usr/include/sys' for 4.2bsd
# May need '-f' on machines without floating point hardware
CFLAGS =	-O

# DEST is where the program and its support files reside
DEST =		/a2/estes/phant

# The following are program constants which are implementation dependent.
#
# PATH is the same as $DEST.  Note that there is no closing quote here.
# WIZARD is the login of the one who will clean up things.
# UID is the uid of game wizard.
# RAND is one more than the largest number generated by rand().
#	Possible values for this are:
#		32768.0		(for 15 bit rand())
#		65536.0		(for 16 bit rand())
#		2147483648.0	(for 31 bit rand())
# ACCESS is fopen() access to open a file for writing, without
#	clearing the file,  e.g. "a", or "r+".  (Use "r+" if you have it.)
# define OK_TO_PLAY to restrict playing access.  Also see function ok_to_play()
#	in main.c, and tailor to your own needs.
# define ENEMY to include code for checking of a 'hit list' of resricted 
#	accounts.  The list of logins goes in the file 'enemy'.
# define BSD41 for 4.1bsd
# define BSD42 for 4.2bsd
# define SYS3 for System III, or similar
# define SYS5 for System V
# define SMALL to save a little space (omits wormholes)
# If you don't have 'strchr()', put '-Dstrchr=index' below.
FLAGS = 	-DPATH=\"${DEST} \
		-DWIZARD=\"estes\" \
		-DUID=419 \
		-DRAND=32768.0 \
		-DACCESS=\"r+\" \
		-DOK_TO_PLAY \
		-DENEMY \
		-DSYS5

OFILES =	main.o fight.o func0.o func1.o func2.o func3.o

all:		phantasia setup phant.help

# Need separate i/d space on small machines
phantasia:	${OFILES} pathdefs.o
		${CC} ${OFILES} pathdefs.o ${LIBS} -o phantasia

${OFILES}:	phant.h
		${CC} -c ${CFLAGS} ${FLAGS} $*.c

pathdefs.o:	phant.h
		${CC} -c ${CFLAGS} ${FLAGS} pathdefs.c

setup:		phant.h pathdefs.o
		${CC} ${CFLAGS} ${FLAGS} setup.c -o setup pathdefs.o -lm

lint:
		lint ${CFLAGS} ${FLAGS} func?.c main.c fight.c pathdefs.c ${LIBS}

# the flags below on tbl and nroff are to make a line printable version
phant.help:	phant.nr
		tbl -TX phant.nr | nroff -Ttn300 -man > phant.help

install:	all
		cp phantasia monsters phant.help ${DEST}
		chmod 755 ${DEST}
		chmod 4711 ${DEST}/phantasia
		chmod 644 ${DEST}/phant.help
		setup

clean:
		${RM} -f *.o phantasia phant.help phant.pt?

shar:
		${SHAR} README phant.nr func0.c > phant.pt1
		${SHAR} Makefile.* fight.c func1.c phant.h > phant.pt2
		${SHAR} func2.c func3.c main.c monsters pathdefs.c setup.c > phant.pt3
