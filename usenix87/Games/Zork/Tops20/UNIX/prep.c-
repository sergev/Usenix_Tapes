#include <ctype.h>
#define EOF -1

int fd,fdo;
main(argc,argv)
int argc;
char *argv[];
{
  char tmpname[40],line[256];
  register unsigned int i,j;
  system("rm -f /tmp/zork*.f");
  for(j=1;j!=argc;j++){
	fd = open(argv[j],0);
	sprintf(tmpname,"/tmp/zork%d.f",time(0) & 0177777);
	fdo = creat(tmpname,0600);
	while(input(line) != EOF){
      switch(line[0]){
		case 'C':
		case 'D':
		case 'c':
		case 'd':
		case '!':
		  output("\n");
		  break;
		default:
		  if(all_white(line))break;
		  for(i=0;line[i];i++){
			switch(line[i]){
			  case '!':
				  line[i] = '\0';
				  break;
			if(line[i] == '\''){
			  for(i++;line[i];i++){
				if((line[i] == '\'') && (line[i+1] != '\''))
				  break;
			  }
			}
		  }
		  for(i=strlen(line);i;i--)
			if(!isspace(line[i-1]))break;
		  line[i++] = '\n';
		  line[i] = '\0';
		  output(line);
		  break;
	  }
    }
	close_io();
  }
  printf("Done copying.\n");
  system("f77 -Nn2047 -w /tmp/zork* -o zork");
  system("rm -f /tmp/zork*.f");
}

input(line)
char line[];
{
  register unsigned int i,c;
  i = 0;
  for(;;){
	if((c = schar()) == EOF)break;
	if(c == '\f')continue;
	line[i++] = c;
	if(c == '\n')break;
  }
  if((i == 0) && (c == EOF))return(EOF);
  line[i] = '\0';
  return(0);
}

char ibuffer[512] = "";
int curptr = 0;
int numread = 0;
schar()
{
  if(curptr == numread){
    if((numread = read(fd,ibuffer,512)) == 0)return(EOF);
    curptr = 0;
  }
  return(ibuffer[curptr++]);
}

output(line)
char *line;
{
  while(*line)ochar(*(line++));
}

char obuffer[512];
int outptr = 0;
ochar(tchar)
char tchar;
{
  obuffer[outptr++] = tchar;
  if(outptr == 512){
    write(fdo,obuffer,512);
    outptr = 0;
  }
}

close_io()
{
  write(fdo,obuffer,outptr);
  close(fdo);
  close(fd);
}

all_white(line)
char *line;
{
  while(*line){
	if(!isspace(*line))return(0);
	line++;
  }
  return(1);
}
