C INIT-- DUNGEON INITIALIZATION SUBROUTINE
C
C DECLARATIONS
C
	LOGICAL FUNCTION INIT(X)
	IMPLICIT INTEGER (A-Z)
	LOGICAL PROTCT
	integer line2(16)
	INTEGER LINE(78),SDIR(15),CDIR(15)
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	common /magic/magic
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C PARSER STATE
C
	COMMON /ORPHS/ OFLAG,OACT,OSLOT,OPREP,ONAME
	COMMON /LAST/ LASTIT
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
	1	LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C SCREEN OF LIGHT
C
	COMMON /SCREEN/ FROMDR,SCOLRM,SCOLAC
C
C MESSAGE INDEX
C
	COMMON /RMSG/ MLNT,RTEXT(1050)
C
C MISCELLANEOUS VARIABLES
C
	COMMON /STAR/ MBASE,STRBIT
	COMMON /VERS/ VMAJ,VMIN,VEDIT
	COMMON /TIME/ PLTIME,SHOUR,SMIN,SSEC
	COMMON /CHAN/ INPCH,OUTCH,DBCH
	COMMON /DEBUG/ DBGFLG,PRSFLG,GDTFLG
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
	1	RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
	1	RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C EXITS
C
	COMMON /EXITS/ XLNT,travel(870)
C
	COMMON /CURXT/ XTYPE,XROOM1,XSTRNG,XACTIO,XOBJ
	EQUIVALENCE (XFLAG,XOBJ)
C
	COMMON /XPARS/ XRMASK,XDMASK,XFMASK,XFSHFT,XASHFT,
	1	XELNT(4),XNORM,XNO,XCOND,XDOOR,XLFLAG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
	1	OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
	2	OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
	3	OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OROOM2/ R2LNT,O2(15),R2(15)
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
	COMMON /VILL/ VLNT,VILLNS(4),VPROB(4),VOPPS(4),VBEST(4),VMELEE(4)
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
	1	AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
	1	DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
	2	MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
	3	EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
	4	GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
	5	GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
	6	MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
	7	FOLLWF,SPELLF,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
	LOGICAL FLAGS(50)
	INTEGER SWITCH(27)
	EQUIVALENCE (FLAGS(1),TROLLF)
	EQUIVALENCE (SWITCH(1),BTIEF)
C
C FUNCTIONS AND DATA
C
	data magic/"555/
	DATA SDIR/'N ','NE','E ','SE','S ','SW','W ','NW',
	1'U ','D ','LA','LN','EN','EX','CR'/
	DATA CDIR/"2000,"4000,"6000,"10000,"12000,"14000,"16000,
	1"20000,
	2"22000,"24000,"26000,"30000,"32000,"34000,"36000/
C INIT, PAGE 2
C
C FIRST CHECK FOR PROTECTION VIOLATION
C
	IF(PROTCT(X)) GO TO 10000		!PROTECTION VIOLATION?
	TYPE 10100				!YES, THROW HIM OFF.
10100	FORMAT(' There appears before you a threatening figure clad
	1 all over'/' in heavy black armor.  His legs seem like the
	2 massive trunk'/' of the oak tree.  His broad shoulders and
	3 helmeted head loom'/' high over your own puny frame, and
	4 you realize that his powerful'/' arms could easily crush the
	5 very life from your body.  There'/' hangs from his belt a
	6 veritable arsenal of deadly weapons:'/' sword, mace, ball
	7 and chain, dagger, lance, and trident.'/' He speaks with a
	8 commanding voice:'//20X,'"You shall not pass."'//' As
	9 he grabs you by the neck all grows dim about you.')
	CALL EXIT
C
C NOW START INITIALIZATION PROPER
C
10000	INIT=.FALSE.				!ASSUME INIT FAILS.
	MMAX=1050				!SET UP ARRAY LIMITS.
	OMAX=250
	RMAX=215
	VMAX=4
	AMAX=4
	CMAX=25
	FMAX=50
	SMAX=27
	XMAX=870
	R2MAX=15
	DIRMAX=15
C
	MLNT=0					!INIT ARRAY COUNTERS.
	OLNT=0
	RLNT=0
	VLNT=0
	ALNT=0
	CLNT=0
	XLNT=1
	R2LNT=0
C
	LTSHFT=10				!SET UP STATE VARIABLES.
	MXSCOR=LTSHFT
	EGSCOR=0
	EGMXSC=0
	MXLOAD=100
	RWSCOR=0
	DEATHS=0
	MOVES=0
	PLTIME=0
	MUNGRM=0
	HS=0
	PRSA=0					!CLEAR PARSE VECTOR.
	PRSI=0
	PRSO=0
	PRSCON=1
	OFLAG=0					!CLEAR ORPHANS.
	OACT=0
	OSLOT=0
	OPREP=0
	ONAME=0
	THFFLG=.FALSE.				!THIEF NOT INTRODUCED BUT
	THFACT=.TRUE.				!IS ACTIVE.
	SWDACT=.FALSE.				!SWORD IS INACTIVE.
	SWDSTA=0				!SWORD IS OFF.
C
	RECNO=1					!INIT DB FILE POINTER.
	MBASE=0					!INIT MELEE BASE.
	INPCH=5					!TTY INPUT
	OUTCH=5					!TTY OUTPUT.
	DBCH=20					!DATA BASE.
C INIT, PAGE 3
C
C INIT ALL ARRAYS.
C
	DO 5 I=1,CMAX				!CLEAR CLOCK EVENTS
	  CFLAG(I)=.FALSE.
	  CTICK(I)=0
	  CACTIO(I)=0
5	CONTINUE
C
	DO 10 I=1,FMAX				!CLEAR FLAGS.
	  FLAGS(I)=.FALSE.
10	CONTINUE
	BUOYF=.TRUE.				!SOME START AS TRUE.
	EGYPTF=.TRUE.
	CAGETF=.TRUE.
	MR1F=.TRUE.
	MR2F=.TRUE.
	FOLLWF=.TRUE.
	DO 12 I=1,SMAX				!CLEAR SWITCHES.
	  SWITCH(I)=0
12	CONTINUE
	ORMTCH=4				!NUMBER OF MATCHES.
	LCELL=1
	PNUMB=1
	MDIR=270
	MLOC=MRB
C
	DO 15 I=1,R2MAX			!CLEAR ROOM 2 ARRAY.
	  R2(I)=0
	  O2(I)=0
15	CONTINUE
C
	DO 20 I=1,XMAX			!CLEAR TRAVEL ARRAY.
	  TRAVEL(I)=0
20	CONTINUE
C
	DO 30 I=1,VMAX				!CLEAR VILLAINS ARRAYS.
	  VOPPS(I)=0
	  VPROB(I)=0
	  VILLNS(I)=0
	  VBEST(I)=0
	  VMELEE(I)=0
30	CONTINUE
C
	DO 40 I=1,OMAX				!CLEAR OBJECT ARRAYS.
	  ODESC1(I)=0
	  ODESC2(I)=0
	  ODESCO(I)=0
	  OREAD(I)=0
	  OACTIO(I)=0
	  OFLAG1(I)=0
	  OFLAG2(I)=0
	  OFVAL(I)=0
	  OTVAL(I)=0
	  OSIZE(I)=0
	  OCAPAC(I)=0
	  OCAN(I)=0
	  OADV(I)=0
	  OROOM(I)=0
40	CONTINUE
C
	RDESC2=0				!CLEAR DESC BASE PTR.
	DO 50 I=1,RMAX				!CLEAR ROOM ARRAYS.
	  RDESC1(I)=0
	  RACTIO(I)=0
	  RFLAG(I)=0
	  RVAL(I)=0
	  REXIT(I)=0
50	CONTINUE
C
	DO 60 I=1,MMAX				!CLEAR MESSAGE DIRECTORY.
	  RTEXT(I)=0
60	CONTINUE
C
	DO 70 I=1,AMAX				!CLEAR ADVENTURER'S ARRAYS.
	  AROOM(I)=0
	  ASCORE(I)=0
	  AVEHIC(I)=0
	  AOBJ(I)=0
	  AACTIO(I)=0
	  ASTREN(I)=0
	  AFLAG(I)=0
70	CONTINUE
C
	DBGFLG=0
	PRSFLG=0
	GDTFLG=-1
C
	FROMDR=0				!INIT SCOL GOODIES.
	SCOLRM=0
	SCOLAC=0

	CALL SPINIT				!INIT R50 CONSTS
C INIT, PAGE 3A
C
C NOW SEE IF WE CAN RESTORE FROM EXISTING INDEX FILE.
C
	OPEN(UNIT=1,FILE='DINDX.DAT',ACCESS='SEQIN',
	1	MODE='IMAGE',ERR=75,device='sys:')
	READ(1) I,J,K				!GET VERSION.
	IF((I.NE.VMAJ).OR.(J.NE.VMIN))
	1	GO TO 170			!MATCH TO OURS?

	OPEN(UNIT=DBCH,FILE='DTEXT.cpt',
	1	MODE='IMAGE',ACCESS='RANDIN',
	2	RECORDSIZE=17,DISPOSE='SAVE',ERR=170,device='sys:')

D	TYPE 150
D150	FORMAT(' RESTORING FROM "DINDX.DAT"')
	READ(1) MXSCOR,STRBIT,EGMXSC
	READ(1) RLNT,RDESC2,RDESC1,REXIT,RACTIO,RVAL,RFLAG
	READ(1) XLNT,TRAVEL
	READ(1) OLNT,ODESC1,ODESC2,ODESCO,OACTIO,OFLAG1,OFLAG2,
	1	OFVAL,OTVAL,OSIZE,OCAPAC,OROOM,OADV,OCAN,
	2	OREAD
	READ(1) R2LNT,O2,R2
	READ(1) CLNT,CTICK,CACTIO,CFLAG
	READ(1) VLNT,VILLNS,VPROB,VOPPS,VBEST,VMELEE
	READ(1) ALNT,AROOM,ASCORE,AVEHIC,AOBJ,AACTIO,ASTREN,AFLAG
	READ(1) MBASE,MLNT,RTEXT
C
	CLOSE(UNIT=1,DISPOSE='SAVE')
	GO TO 1025				!INIT DONE.
C
C INDEX FILE IS OBSOLETE, OR
C DB FILE IS NOT AVAILABLE.
C KILL INDEX FILE AND START AGAIN.
C
170	CLOSE(UNIT=1,DISPOSE='SAVE')		!KILL INDEX FILE.
C INIT, PAGE 4
C
C NOW START DATA BASE FILE PROCESSING.
C
75	OPEN (UNIT=1,FILE='DTEXT.TXT',ACCESS='SEQIN',ERR=1900)
C
	OPEN (UNIT=DBCH,FILE='DTEXT.CPT',
	1	MODE='IMAGE',ACCESS='RANDOM',RECORDSIZE=17,
	2	DISPOSE='SAVE',ERR=1950)
C
D	TYPE 185
D185	FORMAT(' CREATING NEW "DTEXT.CPT"')
C
C RETURN HERE TO READ NEXT SECTION HEADER.
C
80	READ (1,90) I,LINE			!READ SECTION HEADER.
90	FORMAT(I,78A1)
C
	IF(I.EQ.0) GO TO 80			!IGNORE 0.
	IF(I.LT.0) GO TO 1000			!-1 IS END FILE.
D	TYPE 125,I
D125	FORMAT(' INITIALIZING SECTION #',I4)
	IF(I.LE.8) GO TO 100			!TEXT SECTION?
	GO TO (400,500,600,700,800,900,950),(I-8)
	CALL BUG(12,I)				!INVALID SECTION NO.
C
C TEXT SECTION.  WRITE TEXT OUT TO DB FILE, NOTE INITIAL RECORD
C NUMBER IN APPROPRIATE ARRAY.
C
100	PREVJ=0					!FORCE START OF RECORD.
110	READ(1,90) J,LINE			!READ LINE.
	IF(J.EQ.0) GO TO 110			!IGNORE 0.
	IF(J.LT.0) GO TO 80			!-1 IS END SECTION.
	IF(J.EQ.PREVJ) GO TO 300		!IF CONT, WRITE OUT.
	GO TO (210,220,230,240,250,260,270,280),I
	CALL BUG(12,I)
C
C SECTION 1-- RANDOM REMARKS.
C
210	IF(J.GT.MMAX) CALL BUG(13,J)		!TOO MANY REMARKS?
	IF(RTEXT(J).NE.0) CALL BUG(14,J)	!DUPLICATE REMARK?
	RTEXT(J)=-RECNO				!RECORD START OF RECORD.
	MBASE=MAX0(MBASE,J)
	GO TO 300				!GO OUTPUT LINE.
C
C SECTION 2-- MELEE MESSAGES
C
220	K=J+MBASE				!OFFSET BY END OF RANDOMS.
	IF(K.GT.MMAX) CALL BUG(13,K)
	IF(RTEXT(K).NE.0) CALL BUG(14,K)
	RTEXT(K)=-RECNO
	MLNT=MAX0(MLNT,K)			!UPDATE LENGTH COUNTER.
	GO TO 300
C
C SECTION 3-- LONG ROOM DESCRIPTIONS
C
230	IF(J.GT.RMAX) CALL BUG(15,J)		!TOO  MANY ROOMS?
	IF(RDESC1(J).NE.0) CALL BUG(16,J)	!DUPLICATE ROOM?
	RDESC1(J)=-RECNO
	GO TO 300
C
C SECTION 4-- SHORT ROOM DESCRIPTIONS
C
240	IF(J.GT.RMAX) CALL BUG(17,J)
	IF(RDESC2.EQ.0) RDESC2=-RECNO+1		!RECORD BASE
	GO TO 300
C
C SECTION 5-- LONG OBJECT DESCRIPTIONS
C
250	IF(J.GT.OMAX) CALL BUG(19,J)		!TOO MANY OBJECTS?
	IF(ODESC1(J).NE.0) CALL BUG(20,J)	!DUPLICATE OBJECTS?
	ODESC1(J)=-RECNO
	GO TO 300
C
C SECTION 6-- SHORT OBJECT DESCRIPTIONS
C
260	IF(J.GT.OMAX) CALL BUG(21,J)
	IF(ODESC2(J).NE.0) CALL BUG(22,J)
	ODESC2(J)=-RECNO
	GO TO 300
C
C SECTION 7-- UNTOUCHED OBJECT DESCRIPTIONS
C
270	IF(J.GT.OMAX) CALL BUG(23,J)
	IF(ODESCO(J).NE.0) CALL BUG(24,J)
	ODESCO(J)=-RECNO
	GO TO 300
C
C SECTION 8-- READING MATERIAL
C
280	IF(J.GT.OMAX) CALL BUG(25,J)
	IF(OREAD(J).NE.0) CALL BUG(26,J)
	OREAD(J)=-RECNO
	GO TO 300
C
C HERE TO WRITE OUT CURRENT LINE OF TEXT.
C
300	call encrpt(recno,line,line2)
	WRITE(DBCH'RECNO) J,line2		!WRITE OUT RECORD NO, LINE
	RECNO=RECNO+1				!ON TO NEXT RECORD
	PREVJ=J
	GO TO 110
C INIT, PAGE 5
C
C SECTION 9-- ROOM DATA
C
400	READ(1,90) J,LINE			!GET ROOM NO.
	IF(J.LT.0) GO TO 80			!-1 IS END OF SECTION.
	IF(J.EQ.0) GO TO 400			!0 IS IGNORED.
	IF(J.GT.RMAX) CALL BUG(28,J)		!TOO MANY ROOMS?
	RLNT=MAX0(RLNT,J)			!COUNT ROOMS.
C
	READ(1,425) RACTIO(J),RVAL(J),RFLAG(J)	!READ ROOM NUMERICS.
425	FORMAT(2I,O)
	IF((RFLAG(J).AND.REND).EQ.0)
	1	MXSCOR=MXSCOR+RVAL(J)		!UPDATE BEST SCORE.
	IF((RFLAG(J).AND.REND).NE.0)
	1	EGMXSC=EGMXSC+RVAL(J)		!IF ENDGAME, UPDATE BEST.
	PREVX=0					!NO PREV ENTRY.
C
C HERE TO LOOP ON EXIT DESCRIPTIONS
C
405	READ(1,415) DIR,XTYPE,XROOM1		!READ NEXT EXIT.
415	FORMAT(A2,2I)
	IF(DIR.EQ.'  ') GO TO 400		!BLANK LINE ENDS EXITS.
	DO 410 K=1,DIRMAX			!LOOK UP DIR IN TABLE.
	  IF(DIR.EQ.SDIR(K)) GO TO 420		!IF FOUND, OK.
410	CONTINUE
	CALL BUG(29,DIR)			!INVALID DIRECTION.
C
C HAVE TRANSLATED DIRECTION, VALIDATE OTHER FIELDS.
C
420	IF((XTYPE.LE.0).OR.(XTYPE.GT.(XFMASK+1))) CALL BUG(30,XTYPE)
	IF(XROOM1.GT.RMAX) CALL BUG(31,XROOM1)
	IF(REXIT(J).EQ.0) REXIT(J)=XLNT		!RECORD FIRST.
	IF((XLNT+XELNT(XTYPE)).GT.XMAX) CALL BUG(32,XLNT)
	TRAVEL(XLNT)=CDIR(K)+((XTYPE-1)*XFSHFT)+XROOM1+XLFLAG
	IF(PREVX.NE.0) TRAVEL(PREVX)=TRAVEL(PREVX)-XLFLAG
	GO TO (480,470,460,450),XTYPE		!DO UNIQUE PROCESSING.
	CALL BUG(30,XTYPE)
C
C DOOR ENTRY-- READ OBJECT,APPLICABLE,STRING
C
450	READ(1,455) XOBJ,XACTIO,LINE
455	FORMAT(2I,78A1)
	IF((XOBJ.LE.0).OR.(XOBJ.GT.OMAX)) CALL BUG(34,XOBJ)
	GO TO 468
C
C CONDITIONAL EXIT ENTRY-- READ FLAG,APPLICABLE,STRING
C
460	READ(1,465) XOBJ,XACTIO,LINE
465	FORMAT(2I,78A1)
	IF((XOBJ.LE.0).OR.(XOBJ.GT.FMAX)) CALL BUG(35,XOBJ)
468	TRAVEL(XLNT+2)=(XACTIO*XASHFT)+XOBJ
	GO TO 478
C
C NO EXIT ENTRY-- READ STRING
C
470	READ(1,475) LINE
475	FORMAT(78A1)
478	IF(LINE(1).EQ.'  ') GO TO 480		!BLANK LINE?
	call encrpt(recno,line,line2)
	WRITE(DBCH'RECNO) RECNO,line2		!NO, WRITE OUT.
	TRAVEL(XLNT+1)=-RECNO
	RECNO=RECNO+1
C
C COMMON PROCESSING, ADVANCE OVER ENTRY.
C
480	PREVX=XLNT				!RECORD PREV ENTRY.
	XLNT=XLNT+XELNT(XTYPE)
	GO TO 405
C INIT, PAGE 6
C SECTION 11-- GLOBAL OBJECTS
C SECTION 10-- NORMAL OBJECTS
C
600	STRBIT=OLNT				!RECORD START OF STARS.
500	READ(1,90) J,LINE			!GET OBJ NUMBER.
	IF(J.LT.0) GO TO 80			!-1 IS END SECTION.
	IF(J.EQ.0) GO TO 500			!0 IS IGNORED.
	IF(J.GT.OMAX) CALL BUG(27,J)
	OLNT=MAX0(OLNT,J)
C
	READ(1,560) OROOM(J),OCAN(J),OACTIO(J),OFLAG1(J),
	1	OFLAG2(J),OFVAL(J),OTVAL(J),OSIZE(J),OCAPAC(J)
560	FORMAT(3I,2O,4I)
C
	MXSCOR=MXSCOR+OFVAL(J)+OTVAL(J)		!UPDATE BEST SCORE.
	GO TO 500
C
C SECTION 12-- VILLAINS
C
700	READ(1,710) J,K,L,LINE			!READ VILLAIN NO.
710	FORMAT(3I,78A1)
	IF(J.LT.0) GO TO 80
	IF(J.EQ.0) GO TO 700
	VLNT=VLNT+1
	IF(VLNT.GT.VMAX) CALL BUG(36,VLNT)	!TOO MANY VILLAINS?
	VILLNS(VLNT)=J				!NO, ADD TO LIST.
	VBEST(VLNT)=K				!NOTE BEST WEAPON.
	VMELEE(VLNT)=L				!NOTE MELEE.
	GO TO 700
C
C SECTION 13-- CLOCK EVENTS
C
800	READ(1,90) J,LINE			!READ EVENT NO.
	IF(J.LT.0) GO TO 80
	IF(J.EQ.0) GO TO 800
	IF(J.GT.CMAX) CALL BUG(37,J)
	CLNT=MAX0(CLNT,J)
C
	READ(1,890) CACTIO(J),CTICK(J),CFLAG(J)
890	FORMAT(2I,L2)
	GO TO 800
C
C SECTION 14-- ADVENTURERS
C
900	READ(1,90) J,LINE			!READ ADV NO.
	IF(J.LT.0) GO TO 80
	IF(J.EQ.0) GO TO 900
	IF(J.GT.AMAX) CALL BUG(38,J)
	ALNT=MAX0(ALNT,J)
C
	READ(1,990) AROOM(J),AOBJ(J),AACTIO(J),ASTREN(J)
990	FORMAT(4I)
	GO TO 900
C
C SECTION 15-- MULTI-ROOM OBJECTS
C
950	READ(1,955) J,K,LINE
955	FORMAT(2I,78A1)
	IF(J.LT.0) GO TO 80			!-1 IS END SECTION.
	IF(J.EQ.0) GO TO 950
	R2LNT=R2LNT+1				!GET NEXT TABLE SLOT.
	IF(R2LNT.GT.R2MAX) CALL BUG(33,R2LNT)	!TOO MANY?
	O2(R2LNT)=J
	R2(R2LNT)=K
	GO TO 950				!ONWARD.
C INIT, PAGE 7
C
C INITIALIZATION IS COMPLETE.
C WRITE OUT NEW INDEX FILE FOR NEXT TIME AROUND.
C
1000	J=-1					!FORCE END OF LAST REC.
	WRITE(DBCH'RECNO) J,LINE		!WRITE GUARD REC.
	RECNO=RECNO+1
	CLOSE (UNIT=1,DISPOSE='SAVE')		!CLOSE TXT FILE.
C
	OPEN (UNIT=1,FILE='DINDX.DAT',ACCESS='SEQOUT',
	1	MODE='IMAGE',ERR=1025)
D	TYPE 1005
D1005	FORMAT(' CREATING NEW "DINDX.DAT"')
C
	WRITE(1) VMAJ,VMIN,VEDIT
	WRITE(1) MXSCOR,STRBIT,EGMXSC
	WRITE(1) RLNT,RDESC2,RDESC1,REXIT,RACTIO,RVAL,RFLAG
	WRITE(1) XLNT,TRAVEL
	WRITE(1) OLNT,ODESC1,ODESC2,ODESCO,OACTIO,OFLAG1,OFLAG2,
	1	OFVAL,OTVAL,OSIZE,OCAPAC,OROOM,OADV,OCAN,
	2	OREAD
	WRITE(1) R2LNT,O2,R2
	WRITE(1) CLNT,CTICK,CACTIO,CFLAG
	WRITE(1) VLNT,VILLNS,VPROB,VOPPS,VBEST,VMELEE
	WRITE(1) ALNT,AROOM,ASCORE,AVEHIC,AOBJ,AACTIO,ASTREN,AFLAG
	WRITE(1) MBASE,MLNT,RTEXT
C
	CLOSE (UNIT=1,DISPOSE='SAVE')
1025	CONTINUE
C INIT, PAGE 8
C
C THE INTERNAL DATA BASE IS NOW ESTABLISHED.
C SET UP TO PLAY THE GAME.
C
	CALL ITIME(SHOUR,SMIN,SSEC)		!GET TIME AND DATE.
	CALL IDATE(I,J,K)
	CALL SETRAN((I*J*K).XOR.(SHOUR*SMIN*SSEC))
C
	WINNER=PLAYER
	THFPOS=OROOM(THIEF)
	BLOC=OROOM(BALLO)
	HERE=AROOM(WINNER)
	LASTIT=AOBJ(PLAYER)
	INIT=.TRUE.
C
D	TYPE 1050,RLNT,RMAX,XLNT,XMAX,OLNT,OMAX,MLNT,MMAX,
D	1	VLNT,VMAX,ALNT,AMAX,CLNT,CMAX,R2LNT,R2MAX
D1050	FORMAT(' USED:'/1X,I5,' OF',I5,' ROOMS'/
D	11X,I5,' OF',I5,' EXITS'/
D	21X,I5,' OF',I5,' OBJECTS'/
D	31X,I5,' OF',I5,' MESSAGES'/
D	41X,I5,' OF',I5,' VILLAINS'/
D	51X,I5,' OF',I5,' ADVENTURERS'/
D	61X,I5,' OF',I5,' CLOCK EVENTS'/
D	71X,I5,' OF',I5,' ROOM2 SLOTS')
D	TYPE 1150,MXSCOR,EGMXSC,RECNO,RDESC2,MBASE,STRBIT
D1150	FORMAT(' MAX SCORE=',I5/' EG SCORE=',I5/
D	1' MAX RECNO=',I5/' RDESC2 BASE=',I5/
D	1' MELEE START=',I5/' STAR MASK=',I7)
D	PAUSE 1
C
	RETURN
C INIT, PAGE 9
C
C ERRORS-- INIT FAILS.
C
1900	TYPE 910				!INPUT FILE ERROR
	TYPE 980
	RETURN
1950	TYPE 960				!OUTPUT FILE ERROR
	TYPE 980
	RETURN
910	FORMAT(' I can''t open "DTEXT.TXT".')
960	FORMAT(' I can''t open "DTEXT.DAT".')
980	FORMAT(' Suddenly a sinister, wraithlike figure appears before',
&	'you'/' seeming to float in the air.  In a low, sorrowful voice',
&	'he says,'/' "Alas, the very nature of the world has changed,',
&	'and the dungeon'/' cannot be found.  All must now pass away."',
&	' Raising his oaken staff'/' in farewell, he fades into the',
&	'spreading darkness.  In his place'/' appears a tastefully',
&	'lettered sign reading:'//23X,'INITIALIZATION FAILURE'//
&	' The darkness becomes all encompassing, and your vision fails.')
C
	END
