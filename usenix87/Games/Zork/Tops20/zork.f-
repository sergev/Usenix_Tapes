C DUNGEON-- MAIN PROGRAM
C
	PROGRAM DUNGEO
	INCLUDE 'zork.com'
C DUNGEON, PAGE 2
C
C DATA STATEMENTS FOR CONSTANT ARRAYS
C
	DATA VMAJ/2/,VMIN/1/,VEDIT/'A'/
C
	DATA SDIR/"40000/,SIND/"20000/,SSTD/"10000/,
&	SFLIP/"4000/,SDRIV/"2000/,SVMASK/"777/
	DATA VABIT/"40000/,VRBIT/"20000/,VTBIT/"10000/,
&	VCBIT/"4000/,VEBIT/"2000/,VFBIT/"1000/,VPMASK/"777/
C
	DATA BATDRP/66,67,68,69,70,71,72,65,73/
C
	DATA SCOLDR/"2000,153,"12000,154,"6000,152,"16000,151/
	DATA SCOLWL/151,202,"6000,152,203,"16000,
&		153,201,"12000,154,200,"2000/
C
	DATA CEVCUR/1/,CEVMNT/2/,CEVLNT/3/,CEVMAT/4/,
&		CEVCND/5/,CEVBAL/6/,CEVBRN/7/,CEVFUS/8/,
&		CEVLED/9/,CEVSAF/10/,CEVVLG/11/,CEVGNO/12/,
&		CEVBUC/13/,CEVSPH/14/,CEVEGH/15/,
&		CEVFOR/16/,CEVSCL/17/,CEVZGI/18/,CEVZGO/19/,
&		CEVSTE/20/,CEVMRS/21/,CEVPIN/22/,CEVINQ/23/,
&		CEVFOL/24/
C
	DATA XRMASK/"377/,XDMASK/"76000/,XFMASK/3/
	DATA XFSHFT/256/,XASHFT/256/
	DATA XNORM/1/,XNO/2/,XCOND/3/,XDOOR/4/
	DATA XELNT/1,2,3,3/,XLFLAG/"100000/
	DATA XMIN/"2000/,XMAX/"40000/,XUP/"22000/,XDOWN/"24000/
	DATA XNORTH/"2000/,XSOUTH/"12000/,XENTER/"32000/,XEXIT/"34000/
C
	DATA PLAYER/1/,AROBOT/2/,AMASTR/3/
	DATA ASTAG/"100000/
C
	DATA RSEEN/"100000/,RLIGHT/"40000/,RLAND/"20000/
	DATA RWATER/"10000/,RAIR/"4000/,RSACRD/"2000/,RFILL/"1000/
	DATA RMUNG/"400/,RBUCK/"200/,RHOUSE/"100/,RNWALL/"40/,REND/"20/
C
	DATA WHOUS/2/,LROOM/8/,CELLA/9/
	DATA MTROL/10/,MAZE1/11/
	DATA MGRAT/25/,MAZ15/30/
	DATA FORE1/31/,FORE3/33/,CLEAR/36/,RESER/40/
	DATA STREA/42/,EGYPT/44/,ECHOR/49/
	DATA TSHAF/61/
	DATA BSHAF/76/,MMACH/77/,DOME/79/,MTORC/80/
	DATA CAROU/83/
	DATA RIDDL/91/,LLD2/94/,TEMP1/96/,TEMP2/97/,MAINT/100/
	DATA MCYCL/101/,BLROO/102/,TREAS/103/,RIVR1/107/,RIVR2/108/
	DATA 	RIVR3/109/
	DATA RIVR4/112/,RIVR5/113/,FCHMP/114/,MBARR/119/,FALLS/120/
	DATA MRAIN/121/,POG/122/,VLBOT/126/,VAIR1/127/,VAIR2/128/
	DATA 	VAIR3/129/,VAIR4/130/
	DATA LEDG2/131/,LEDG3/132/,LEDG4/133/,MSAFE/135/,CAGER/140/
	DATA CAGED/141/,TWELL/142/,BWELL/143/,ALICE/144/,ALISM/145/
	DATA 	ALITR/146/,MTREE/147/,BKENT/148/
	DATA BKVW/151/,BKTWI/153/,BKVAU/154/,BKBOX/155/
	DATA	CRYPT/157/,TSTRS/158/,MRANT/159/
	DATA MREYE/160/,MRA/161/,MRB/162/,MRC/163/,MRG/164/
	DATA	MRD/165/,FDOOR/166/,MRAE/167/
	DATA MRCE/171/,MRCW/172/,MRGE/173/,MRGW/174/,MRDW/176/
	DATA	INMIR/177/,SCORR/179/
	DATA NCORR/182/,PARAP/183/,CELL/184/,PCELL/185/,NCELL/186/
C
	DATA CINTW/1/,DEADXW/2/,FRSTQW/3/,INXW/4/
	DATA OUTXW/5/,WALKIW/6/,FIGHTW/7/,FOOW/8/
C
	DATA READW/100/,MELTW/101/
	DATA INFLAW/102/,DEFLAW/103/,ALARMW/104/,EXORCW/105/
	DATA PLUGW/106/,KICKW/107/,WAVEW/108/,RAISEW/109/,LOWERW/110/
	DATA RUBW/111/,PUSHW/112/,UNTIEW/113/,TIEW/114/,TIEUPW/115/
	DATA TURNW/116/,BREATW/117/,KNOCKW/118/,LOOKW/119/
	DATA EXAMIW/120/,SHAKEW/121/,MOVEW/122/,TRNONW/123/,TRNOFW/124/
	DATA OPENW/125/,CLOSEW/126/,FINDW/127/,WAITW/128/,SPINW/129/
	DATA BOARDW/130/,UNBOAW/131/,TAKEW/132/,INVENW/133/
	DATA FILLW/134/,EATW/135/,DRINKW/136/,BURNW/137/
	DATA MUNGW/138/,KILLW/139/,ATTACW/141/
	DATA SWINGW/140/,WALKW/142/,TELLW/143/,PUTW/144/
	DATA DROPW/145/,GIVEW/146/,POURW/147/,THROWW/148/
C
	DATA DIGW/89/,LEAPW/91/,STAYW/73/,FOLLOW/85/
	DATA HELLOW/151/,LOOKIW/152/,LOOKUW/153/,PUMPW/154/
	DATA WINDW/155/,CLMBW/156/,CLMBUW/157/,CLMBDW/158/,TRNTOW/159/
C
	DATA VISIBT/"100000/,READBT/"40000/,TAKEBT/"20000/,DOORBT/"10000/,
&		TRANBT/"4000/,FOODBT/"2000/,NDSCBT/"1000/,DRNKBT/"400/,
&		CONTBT/"200/,LITEBT/"100/,VICTBT/"40/,BURNBT/"20/,
&		FLAMBT/"10/,TOOLBT/"4/,TURNBT/"2/,ONBT/"1/
C
	DATA FINDBT/"100000/,SLEPBT/"40000/,SCRDBT/"20000/,TIEBT/"10000/,
&		CLMBBT/"4000/,ACTRBT/"2000/,WEAPBT/"1000/,FITEBT/"400/,
&		VILLBT/"200/,STAGBT/"100/,TRYBT/"40/,NOCHBT/"20/,
&		OPENBT/"10/,TCHBT/"4/,VEHBT/"2/,SCHBT/"1/
C
	DATA GARLI/2/,FOOD/3/,GUNK/4/,COAL/5/,MACHI/7/,DIAMO/8/
	DATA	TCASE/9/,BOTTL/10/
	DATA WATER/11/,ROPE/12/,KNIFE/13/,SWORD/14/,LAMP/15/,BLAMP/16/
	DATA	RUG/17/,LEAVE/18/,TROLL/19/,AXE/20/
	DATA RKNIF/21/,KEYS/23/,BAR/26/,ICE/30/
	DATA COFFI/33/,TORCH/34/,TBASK/35/,FBASK/36/,IRBOX/39/
	DATA GHOST/42/,TRUNK/45/,BELL/46/,BOOK/47/,CANDL/48/
	DATA MATCH/51/,TUBE/54/,PUTTY/55/,WRENC/56/,SCREW/57/
	DATA	CYCLO/58/,CHALI/59/
	DATA THIEF/61/,STILL/62/,WINDO/63/,GRATE/65/,DOOR/66/
	DATA HPOLE/71/,RBUTT/79/,LEAK/78/,RAILI/75/
	DATA POT/85/,STATU/86/,IBOAT/87/,DBOAT/88/,PUMP/89/,RBOAT/90/
	DATA STICK/92/,BUOY/94/,SHOVE/96/,GUANO/97/,BALLO/98/,RECEP/99/
	DATA BROPE/101/,HOOK1/102/,HOOK2/103/,SAFE/105/,SSLOT/107/
	DATA	BRICK/109/,FUSE/110/
	DATA GNOME/111/,BLABE/112/,DBALL/113/,TOMB/119/
	DATA LCASE/123/,CAGE/124/,RCAGE/125/,SPHER/126/,SQBUT/127/
	DATA FLASK/132/,POOL/133/,SAFFR/134/,BUCKE/137/,ORICE/139/
	DATA	ECAKE/138/,RDICE/140/
	DATA BLICE/141/,ROBOT/142/,FTREE/145/,BILLS/148/,PORTR/149/
	DATA SCOL/151/,ZGNOM/152/,EGG/154/,BEGG/155/,BAUBL/156/
	DATA	CANAR/157/,BCANA/158/,YLWAL/159/
	DATA RDWAL/161/,PINDR/164/
	DATA RBEAM/171/,ODOOR/172/,QDOOR/173/,CDOOR/175/
	DATA	NUM1/178/,NUM8/185/
	DATA ITOBJ/187/,OPLAY/188/,EVERY/189/
	DATA	VALUA/190/,SAILO/191/,TEETH/192/,WALL/193/
	DATA HANDS/195/,LUNGS/196/,AVIAT/197/
	DATA WNORT/200/,GWATE/204/,MASTER/210/
C DUNGEON, PAGE 3
C
C 1) INITIALIZE DATA STRUCTURES
C 2) PLAY GAME
C
	CALL ERRSET(0)				!NO OV'FLO MESSAGES
	IF(INIT(X)) CALL GAME			!IF INIT, PLAY GAME.
	CALL EXIT				!DONE
	END
C GAME- MAIN COMMAND LOOP FOR DUNGEON
C
C DECLARATIONS
C
	SUBROUTINE GAME
	IMPLICIT INTEGER (A-Z)
	LOGICAL RMINFO,VAPPLI,RAPPLI,AAPPLI
	LOGICAL F,PARSE,FINDXT,XVEHIC,LIT
	LOGICAL SECHO(4),GDTSTR(3)
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	common  /spare/ccflg
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C MISCELLANEOUS VARIABLES
C
	LOGICAL INLINE
	COMMON /INPUT/ INLNT,INLINE(78)
	COMMON /CHAN/ INPCH,OUTCH,DBCH
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&			RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&		EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	DATA SECHO/'E','C','H','O'/
	DATA GDTSTR/'G','D','T'/
C GAME, PAGE 2
C
C START UP, DESCRIBE CURRENT LOCATION.
C
	CALL RSPEAK(1)				!WELCOME ABOARD.
	F=RMINFO(.TRUE.)			!START GAME.
C
C NOW LOOP, READING AND EXECUTING COMMANDS.
C
100	WINNER=PLAYER				!PLAYER MOVING.
	TELFLG=.FALSE.				!ASSUME NOTHING TOLD.
	IF(PRSCON.LE.1) CALL RDLINE(INLINE,INLNT,1) !READ COMMAND.
C
	DO 150 I=1,3				!CALL ON GDT?
	  IF(INLINE(I+PRSCON-1).NE.GDTSTR(I)) GO TO 200
150	CONTINUE
	CALL GDT				!YES, INVOKE.
	GO TO 100				!ONWARD.
C
200	MOVES=MOVES+1
	PRSWON=PARSE(INLINE,INLNT,.TRUE.)	!PARSE INPUT, NORMAL MODE.
	IF(.NOT.PRSWON) GO TO 400		!PARSE LOSES?
	IF(XVEHIC(1)) GO TO 400			!VEHICLE HANDLE?
C
	IF(PRSA.EQ.TELLW) GO TO 2000		!TELL?
300	IF((PRSO.EQ.VALUA).OR.(PRSO.EQ.EVERY)) GO TO 900
	prsab=prsa
	IF(.NOT.VAPPLI(PRsab)) GO TO 400	!VERB OK?
350	IF(.NOT.ECHOF.AND.(HERE.EQ.ECHOR)) GO TO 1000
	F=RAPPLI(RACTIO(HERE))
C
400	CALL XENDMV(TELFLG)			!DO END OF MOVE.
	IF(.NOT.LIT(HERE)) PRSCON=1
	GO TO 100
C
900	CALL VALUAC(VALUA)
	GO TO 350
C GAME, PAGE 3
C
C SPECIAL CASE-- ECHO ROOM.
C IF INPUT IS NOT 'ECHO' OR A DIRECTION, JUST ECHO.
C
1000	CALL RDLINE(INLINE,INLNT,0)		!READ LINE.
	MOVES=MOVES+1				!CHARGE FOR MOVES.
	DO 1100 I=1,4				!INPUT = ECHO?
	  IF(INLINE(I).NE.SECHO(I)) GO TO 1300
1100	CONTINUE
C
	DO 1200 I=5,78				!REST BLANK?
	  IF(INLINE(I).NE.' ') GO TO 1300
1200	CONTINUE
C
	CALL RSPEAK(571)			!KILL THE ECHO.
	ECHOF=.TRUE.
	OFLAG2(BAR)=OFLAG2(BAR).AND. .NOT.SCRDBT !LET THIEF STEAL BAR.
	PRSWON=.TRUE.				!FAKE OUT PARSER.
	PRSCON=1				!FORCE NEW INPUT.
	GO TO 400
C
1300	PRSWON=PARSE(INLINE,INLNT,.FALSE.)	!PARSE INPUT, ECHO MODE.
	IF(.NOT.PRSWON .OR. (PRSA.NE.WALKW))
&		GO TO 1400			!WALK?
	IF(FINDXT(PRSO,HERE)) GO TO 300		!VALID EXIT?
C
1400	WRITE(OUTCH,1410) (INLINE(J),J=1,INLNT)	!ECHO INPUT.
1410	FORMAT('+',78A1)
	ccflg=.false.
	TELFLG=.TRUE.				!INDICATE OUTPUT.
	GO TO 1000				!MORE ECHO ROOM.
C GAME, PAGE 4
C
C SPECIAL CASE-- TELL <ACTOR>, NEW COMMAND
C NOTE THAT WE CANNOT BE IN THE ECHO ROOM.
C
2000	IF((OFLAG2(PRSO).AND.ACTRBT).NE.0) GO TO 2100 !ACTOR?
	CALL RSPEAK(602)			!CANT DO IT.
	GO TO 350				!VAPPLI SUCCEEDS.
C
2100	WINNER=OACTOR(PRSO)			!NEW PLAYER.
	HERE=AROOM(WINNER)			!NEW LOCATION.
	IF(PRSCON.LE.1) GO TO 2700		!ANY INPUT?
	IF(PARSE(INLINE,INLNT,.TRUE.)) GO TO 2150	!PARSE COMMAND.
2700	I=341					!FAILS.
	IF(TELFLG) I=604			!GIVE RESPONSE.
	CALL RSPEAK(I)
2600	WINNER=PLAYER				!RESTORE STATE.
	HERE=AROOM(WINNER)
	GO TO 350
C
2150	IF(AAPPLI(AACTIO(WINNER))) GO TO 2400	!ACTOR HANDLE?
	IF(XVEHIC(1)) GO TO 2400		!VEHICLE HANDLE?
	IF((PRSO.EQ.VALUA).OR.(PRSO.EQ.EVERY)) GO TO 2900
	IF(.NOT.VAPPLI(PRSA)) GO TO 2400	!VERB HANDLE?
2350	F=RAPPLI(RACTIO(HERE))
C
2400	CALL XENDMV(TELFLG)			!DO END OF MOVE.
	GO TO 2600				!DONE.
C
2900	CALL VALUAC(VALUA)			!ALL OR VALUABLES.
	GO TO 350
C
	END
C XENDMV-	EXECUTE END OF MOVE FUNCTIONS.
C
C DECLARATIONS
C
	SUBROUTINE XENDMV(FLAG)
	IMPLICIT INTEGER(A-Z)
	LOGICAL F,CLOCKD,FLAG,XVEHIC
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSO,PRSI,PRSWON,PRSCON
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
C
	IF(.NOT.FLAG) CALL RSPEAK(341)		!DEFAULT REMARK.
	IF(THFACT) CALL THIEFD			!THIEF DEMON.
	IF(PRSWON) CALL FIGHTD			!FIGHT DEMON.
	IF(SWDACT) CALL SWORDD			!SWORD DEMON.
	IF(PRSWON) F=CLOCKD(X)			!CLOCK DEMON.
	IF(PRSWON) F=XVEHIC(2)			!VEHICLE READOUT.
	RETURN
	END
C XVEHIC- EXECUTE VEHICLE FUNCTION
C
C DECLARATIONS
C
	LOGICAL FUNCTION XVEHIC(N)
	IMPLICIT INTEGER(A-Z)
	LOGICAL OAPPLI
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	XVEHIC=.FALSE.				!ASSUME LOSES.
	AV=AVEHIC(WINNER)			!GET VEHICLE.
	IF(AV.NE.0) XVEHIC=OAPPLI(OACTIO(AV),N)
	RETURN
	END
 C RSPEAK-- OUTPUT RANDOM MESSAGE ROUTINE
C
C CALLED BY--
C
C	CALL RSPEAK(MSGNUM)
C
	SUBROUTINE RSPEAK(N)
	IMPLICIT INTEGER(A-Z)
C
	CALL RSPSB2(N,0,0)
	RETURN
	END
C RSPSUB-- OUTPUT RANDOM MESSAGE WITH SUBSTITUTABLE ARGUMENT
C
C CALLED BY--
C
C	CALL RSPSUB(MSGNUM,SUBNUM)
C
	SUBROUTINE RSPSUB(N,S1)
	IMPLICIT INTEGER(A-Z)
C
	CALL RSPSB2(N,S1,0)
	RETURN
	END
C RSPSB2-- OUTPUT RANDOM MESSAGE WITH SUBSTITUTABLE ARGUMENTS
C
C CALLED BY--
C
C	CALL RSPSB2(MSGNUM,S1,S2)
C
	SUBROUTINE RSPSB2(A,B,C)
	IMPLICIT INTEGER(A-Z)
	LOGICAL B1(78),B2(78)
	integer bx(16),by(16)
C
C DECLARATIONS
C
	LOGICAL TELFLG,CCFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /SPARE/CCFLG
C
	COMMON /RMSG/ MLNT,RTEXT(1050)
	COMMON /CHAN/ INPCH,OUTCH,DBCH
C
C CONVERT ALL ARGUMENTS FROM DICTIONARY NUMBERS (IF POSITIVE)
C TO ABSOLUTE RECORD NUMBERS.
C
	X=A					!SET UP WORK VARIABLES.
	Y=B
	Z=C
	IF(X.GT.0) X=RTEXT(X)			!IF >0, LOOK UP IN RTEXT.
	IF(Y.GT.0) Y=RTEXT(Y)
	IF(Z.GT.0) Z=RTEXT(Z)
	X=IABS(X)				!TAKE ABS VALUE.
	Y=IABS(Y)
	Z=IABS(Z)
	IF(X.EQ.0) RETURN			!ANYTHING TO DO?
	TELFLG=.TRUE.				!SAID SOMETHING.
C
	READ(DBCH'X) OLDREC,bx			!READ FIRST LINE.
200	len=78
	call decrpt(x,b1,len,bx)
250	IF(Y.EQ.0) GO TO 400			!ANY SUBSTITUTABLE?
	DO 300 I=1,78				!YES, LOOK FOR #.
	  IF(B1(I).EQ.'#') GO TO 1000
300	CONTINUE
C
400	DO 500 I=len,1,-1			!BACKSCAN FOR BLANKS.
	  IF(B1(I).NE.' ') GO TO 600
500	CONTINUE
C
600	IF(.NOT.CCFLG)WRITE(OUTCH,610)
610	FORMAT(' ',$)
	WRITE(OUTCH,650) (B1(J),J=1,I)		!OUTPUT LINE.
650	FORMAT('+',78A1)
	CCFLG=.FALSE.
	X=X+1					!ON TO NEXT RECORD.
	READ(DBCH'X) NEWREC,bx			!READ NEXT RECORD.
	IF(OLDREC.EQ.NEWREC) GO TO 200		!CONTINUATION?
	RETURN					!NO, EXIT.
C
C SUBSTITUTION WITH SUBSTITUTABLE AVAILABLE.
C I IS INDEX OF # IN B1.
C Y IS NUMBER OF RECORD TO SUBSTITUTE.
C
C PROCEDURE:
C   1) COPY REST OF B1 TO B2
C   2) READ SUBSTITUTABLE OVER B1
C   3) RESTORE TAIL OF ORIGINAL B1
C
C THE IMPLICIT ASSUMPTION HERE IS THAT THE SUBSTITUTABLE STRING
C IS VERY SHORT.
C
1000	K2=1					!TO
	DO 1100 K1=I+1,78			!COPY REST OF B1.
	  B2(K2)=B1(K1)
	  K2=K2+1
1100	CONTINUE
C
	READ(DBCH'Y) J,by
	len2=78-i+1
	call decrpt(y,b1(i),len2,by)
C
	DO 1200 J=78,1,-1			!ELIM TRAILING BLANKS.
	  IF(B1(J).NE.' ') GO TO 1300
1200	CONTINUE
C
1300	K1=1					!FROM
	DO 1400 K2=J+1,78			!COPY REST OF B1 BACK.
	  B1(K2)=B2(K1)
	  K1=K1+1
1400	CONTINUE
C
	Y=Z					!SET UP FOR NEXT
	Z=0					!SUBSTITUTION AND
	GO TO 250				!RECHECK LINE.
C
	END
C OBJACT-- APPLY OBJECTS FROM PARSE VECTOR
C
C DECLARATIONS
C
	LOGICAL FUNCTION OBJACT(X)
	IMPLICIT INTEGER (A-Z)
	LOGICAL OAPPLI
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
	OBJACT=.TRUE.				!ASSUME WINS.
	IF(PRSI.EQ.0) GO TO 100			!IND OBJECT?
	IF(OAPPLI(OACTIO(PRSI),0)) RETURN	!YES, LET IT HANDLE.
C
100	IF(PRSO.EQ.0) GO TO 200			!DIR OBJECT?
	IF(OAPPLI(OACTIO(PRSO),0)) RETURN	!YES, LET IT HANDLE.
C
200	OBJACT=.FALSE.				!LOSES.
	RETURN
	END
C BUG-- REPORT FATAL SYSTEM ERROR
C
C CALLED BY--
C
C	CALL BUG(NO,PAR)
C
	SUBROUTINE BUG(A,B)
	IMPLICIT INTEGER(A-Z)
C
	COMMON /DEBUG/ DBGFLG
C
	TYPE 100,A,B
	IF(DBGFLG.NE.0) RETURN
	CALL EXIT
C
100	FORMAT(' PROGRAM ERROR ',I2,', PARAMETER=',I6)
	END
C NEWSTA-- SET NEW STATUS FOR OBJECT
C
C CALLED BY--
C
C	CALL NEWSTA(OBJECT,STRING,NEWROOM,NEWCON,NEWADV)
C
	SUBROUTINE NEWSTA(O,R,RM,CN,AD)
	IMPLICIT INTEGER(A-Z)
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
	CALL RSPEAK(R)
	OROOM(O)=RM
	OCAN(O)=CN
	OADV(O)=AD
	RETURN
	END
C QHERE-- TEST FOR OBJECT IN ROOM
C
C DECLARATIONS
C
	LOGICAL FUNCTION QHERE(OBJ,RM)
	IMPLICIT INTEGER (A-Z)
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OROOM2/ R2LNT,O2(15),R2(15)
C
	QHERE=.TRUE.
	IF(OROOM(OBJ).EQ.RM) RETURN		!IN ROOM?
	DO 100 I=1,R2LNT			!NO, SCH ROOM2.
	  IF((O2(I).EQ.OBJ).AND.(R2(I).EQ.RM)) RETURN
100	CONTINUE
	QHERE=.FALSE.				!NOT PRESENT.
	RETURN
	END
C QEMPTY-- TEST FOR OBJECT EMPTY
C
C DECLARATIONS
C
	LOGICAL FUNCTION QEMPTY(OBJ)
	IMPLICIT INTEGER (A-Z)
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
	QEMPTY=.FALSE.				!ASSUME LOSE.
	DO 100 I=1,OLNT
	  IF(OCAN(I).EQ.OBJ) RETURN		!INSIDE TARGET?
100	CONTINUE
	QEMPTY=.TRUE.
	RETURN
	END
C JIGSUP- YOU ARE DEAD
C
C DECLARATIONS
C
	SUBROUTINE JIGSUP(DESC)
	IMPLICIT INTEGER (A-Z)
	LOGICAL YESNO,MOVETO,QHERE,F
	INTEGER RLIST(9)
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
	COMMON /CHAN/ INPCH,OUTCH,DBCH
	COMMON /DEBUG/ DBGFLG
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&		EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	DATA RLIST/8,6,36,35,34,4,34,6,5/
C JIGSUP, PAGE 2
C
	CALL RSPEAK(DESC)			!DESCRIBE SAD STATE.
	PRSCON=1				!STOP PARSER.
	IF(DBGFLG.NE.0) RETURN			!IF DBG, EXIT.
	AVEHIC(WINNER)=0			!GET RID OF VEHICLE.
	IF(WINNER.EQ.PLAYER) GO TO 100		!HIMSELF?
	CALL RSPSUB(432,ODESC2(AOBJ(WINNER)))	!NO, SAY WHO DIED.
	CALL NEWSTA(AOBJ(WINNER),0,0,0,0)	!SEND TO HYPER SPACE.
	RETURN
C
100	IF(ENDGMF) GO TO 900			!NO RECOVERY IN END GAME.
	IF(DEATHS.GE.2) GO TO 1000		!DEAD TWICE? KICK HIM OFF.
	IF(.NOT.YESNO(10,9,8)) GO TO 1100	!CONTINUE?
C
	DO 50 J=1,OLNT				!TURN OFF FIGHTING.
	  IF(QHERE(J,HERE)) OFLAG2(J)=OFLAG2(J).AND. .NOT.FITEBT
50	CONTINUE
C
	DEATHS=DEATHS+1
	CALL SCRUPD(-10)			!CHARGE TEN POINTS.
	F=MOVETO(FORE1,WINNER)			!REPOSITION HIM.
	EGYPTF=.TRUE.				!RESTORE COFFIN.
	IF(OADV(COFFI).EQ.WINNER) CALL NEWSTA(COFFI,0,EGYPT,0,0)
	OFLAG2(DOOR)=OFLAG2(DOOR).AND. .NOT.TCHBT !RESTORE DOOR.
	OFLAG1(ROBOT)=(OFLAG1(ROBOT).OR.VISIBT) .AND. .NOT.NDSCBT
	IF((OROOM(LAMP).NE.0).OR.(OADV(LAMP).EQ.WINNER))
&		CALL NEWSTA(LAMP,0,LROOM,0,0)	!RESTORE LAMP.
C
C NOW REDISTRIBUTE HIS VALUABLES AND OTHER BELONGINGS.
C
C THE LAMP HAS BEEN PLACED IN THE LIVING ROOM.
C THE FIRST 8 NON-VALUABLES ARE PLACED IN LOCATIONS AROUND THE HOUSE.
C HIS VALUABLES ARE PLACED AT THE END OF THE MAZE.
C REMAINING NON-VALUABLES ARE PLACED AT THE END OF THE MAZE.
C
	I=1
	DO 200 J=1,OLNT				!LOOP THRU OBJECTS.
	  IF((OADV(J).NE.WINNER).OR.(OTVAL(J).NE.0))
&		GO TO 200			!GET HIS NON-VAL OBJS.
	  I=I+1
	  IF(I.GT.9) GO TO 400			!MOVE TO RANDOM LOCATIONS.
	  CALL NEWSTA(J,0,RLIST(I),0,0)
200	CONTINUE
C
400	I=RLNT+1				!NOW MOVE VALUABLES.
	NONOFL=RAIR+RWATER+RSACRD+REND		!DONT MOVE HERE.
	DO 300 J=1,OLNT
	  IF((OADV(J).NE.WINNER).OR.(OTVAL(J).EQ.0))
&		GO TO 300			!ON ADV AND VALUABLE?
250	  I=I-1					!FIND NEXT ROOM.
	  IF((RFLAG(I).AND.NONOFL).NE.0) GO TO 250	!SKIP IF NONO.
	  CALL NEWSTA(J,0,I,0,0)		!YES, MOVE.
300	CONTINUE
C
	DO 500 J=1,OLNT				!NOW GET RID OF REMAINDER.
	  IF(OADV(J).NE.WINNER) GO TO 500
450	  I=I-1					!FIND NEXT ROOM.
	  IF((RFLAG(I).AND.NONOFL).NE.0) GO TO 450	!SKIP IF NONO.
	  CALL NEWSTA(J,0,I,0,0)
500	CONTINUE
	RETURN
C
C CANT OR WONT CONTINUE, CLEAN UP AND EXIT.
C
900	CALL RSPEAK(625)			!IN ENDGAME, LOSE.
	GO TO 1100
C
1000	CALL RSPEAK(7)				!INVOLUNTARY EXIT.
1100	CALL SCORE(.FALSE.)			!TELL SCORE.
	CLOSE (UNIT=DBCH,DISPOSE='SAVE')
	CALL EXIT
C
	END
C OACTOR-	GET ACTOR ASSOCIATED WITH OBJECT
C
C DECLARATIONS
C
	INTEGER FUNCTION OACTOR(OBJ)
	IMPLICIT INTEGER(A-Z)
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	DO 100 I=1,ALNT				!LOOP THRU ACTORS.
	  OACTOR=I				!ASSUME FOUND.
	  IF(AOBJ(I).EQ.OBJ) RETURN		!FOUND IT?
100	CONTINUE
	CALL BUG(40,OBJ)			!NO, DIE.
	RETURN
	END
C PROB-		COMPUTE PROBABILITY
C
C DECLARATIONS
C
	LOGICAL FUNCTION PROB(G,B)
	IMPLICIT INTEGER(A-Z)
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&		EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
	I=G					!ASSUME GOOD LUCK.
	IF(BADLKF) I=B				!IF BAD, TOO BAD.
	PROB=RND(100).LT.I			!COMPUTE.
	RETURN
	END
C RMINFO-- PRINT ROOM DESCRIPTION
C
C RMINFO PRINTS A DESCRIPTION OF THE CURRENT ROOM.
C IT IS ALSO THE PROCESSOR FOR VERBS 'LOOK' AND 'EXAMINE'.
C
	LOGICAL FUNCTION RMINFO(FULL)
C
C DECLARATIONS
C
	IMPLICIT INTEGER (A-Z)
	LOGICAL FULL,PROB,LIT,RAPPLI
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C SCREEN OF LIGHT
C
	COMMON /SCREEN/ FROMDR,SCOLRM,SCOLAC
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&		EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C RMINFO, PAGE 2
C
	RMINFO=.TRUE.				!ASSUME WINS.
	IF(PRSO.LT.XMIN) GO TO 50		!IF DIRECTION,
	FROMDR=PRSO				!SAVE AND
	PRSO=0					!CLEAR.
50	IF(HERE.EQ.AROOM(PLAYER)) GO TO 100	!PLAYER JUST MOVE?
	CALL RSPEAK(2)				!NO, JUST SAY DONE.
	PRSA=WALKIW				!SET UP WALK IN ACTION.
	RETURN
C
100	IF(LIT(HERE)) GO TO 300			!LIT?
	CALL RSPEAK(430)			!WARN OF GRUE.
	RMINFO=.FALSE.
	RETURN
C
300	RA=RACTIO(HERE)				!GET ROOM ACTION.
	I=RDESC2-HERE				!ASSUME SHORT DESC.
	IF(.NOT.FULL .AND. (SUPERF.OR.(((RFLAG(HERE).AND.RSEEN).NE.0)
&		.AND. (BRIEFF.OR.PROB(80,80))))) GO TO 400
	I=RDESC1(HERE)				!USE LONG.
	IF((I.NE.0).OR.(RA.EQ.0)) GO TO 400	!IF GOT DESC, SKIP.
	PRSA=LOOKW				!PRETEND LOOK AROUND.
	IF(.NOT.RAPPLI(RA)) GO TO 100		!ROOM HANDLES, NEW DESC?
	PRSA=FOOW				!NOP PARSER.
	GO TO 500
C
400	CALL RSPEAK(I)				!OUTPUT DESCRIPTION.
500	IF(AVEHIC(WINNER).NE.0) CALL RSPSUB(431,ODESC2(AVEHIC(WINNER)))
	CALL PRINCR(FULL,HERE)			!PRINT CONTENTS OF ROOM.
	RFLAG(HERE)=RFLAG(HERE).OR.RSEEN	!INDICATE ROOM SEEN.
	IF(FULL.OR.(RA.EQ.0)) RETURN		!ANYTHING MORE?
	PRSA=WALKIW				!GIVE HIM A SURPISE.
	IF(.NOT.RAPPLI(RA)) GO TO 100		!ROOM HANDLES, NEW DESC?
	PRSA=FOOW
	RETURN
C
	END
C RAPPLI-	ROUTING ROUTINE FOR ROOM APPLICABLES
C
C DECLARATIONS
C
	LOGICAL FUNCTION RAPPLI(RI)
	IMPLICIT INTEGER(A-Z)
	LOGICAL RAPPL1,RAPPL2
	DATA NEWRMS/38/
C
	RAPPLI=.TRUE.				!ASSUME WINS.
	IF(RI.EQ.0) RETURN			!IF ZERO, WIN.
	IF(RI.LT.NEWRMS) RAPPLI=RAPPL1(RI)	!IF OLD, PROCESSOR 1.
	IF(RI.GE.NEWRMS) RAPPLI=RAPPL2(RI)	!IF NEW, PROCESSOR 2.
	RETURN
	END
  
c
c	decrpt - routine to decrpt the text files
c
	subroutine decrpt(rec,line,len,line2)
	implicit integer(a-z)
	dimension line2(16)
	dimension line(len)
	common /magic/magic

	crypt=(magic.xor.(rec.and."777))*"1001001001

	do 7 kj=16,1,-1
	if(line2(kj).ne.0)goto 6
7	continue

6	do 10 kc=1,kj
	  line2(kc)=line2(kc).xor.crypt
10	continue
	decode(len,9,line2)line
9	format(78a1)
	return
	end
C PROTCT-- CHECK FOR USER VIOLATION
C
C THIS ROUTINE SHOULD BE MODIFIED IF YOU WISH TO ADD SYSTEM
C DEPENDANT PROTECTION AGAINST ABUSE.
C
C AT THE MOMENT, PLAY IS PERMITTED UDER ALL CIRCUMSTANCES.
C
	LOGICAL FUNCTION PROTCT(X)
	IMPLICIT INTEGER(A-Z)
C
	PROTCT=.TRUE.
	RETURN
	END
c
c subroutine to encrypt the text file
c
	subroutine encrpt(rec,line,line2)
	implicit integer(a-z)
	dimension line2(16)
	dimension line(78)
	common /magic/ magic

	encode(78,9,line2)line
9	format(78a1)

	LINE2(16)=(LINE2(16)+('     '.AND.77777))
	do 8 kl=16,1,-1
	if(line2(kl).eq.'     ')goto 8
	kj=kl
	goto 7
8	line2(kl)=0

7	crypt=(magic.xor.(rec.and."777))*"1001001001
	do 10 kc=1,kj
	 line2(kc)=line2(kc).xor.crypt
10	continue
	return
	end
   C RDLINE-	READ INPUT LINE
C
C DECLARATIONS
C
	SUBROUTINE RDLINE(INBUF,INLNT,WHO)
	IMPLICIT INTEGER(A-Z)
	LOGICAL INBUF(78)
C
C PARSER OUTPUT
C
	LOGICAL PRSWON,CCFLG
	COMMON /SPARE/ CCFLG			!NEED FLAG TO SEE IF WE NEED CC
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
	COMMON /CHAN/ INPCH,OUTCH,DBCH
C
5	GO TO (90,10),WHO+1			!SEE WHO TO PROMPT FOR.
10	IF(.NOT.CCFLG)WRITE(OUTCH,7)
7	FORMAT(' ',$)
	WRITE(OUTCH,50)				!PROMPT FOR GAME.
50	FORMAT('+>',$)
C
90	READ(INPCH,100) INBUF			!GET INPUT.
100	FORMAT(78A1)
	CCFLG=.TRUE.				!SAY THAT WE HAVE DONE READ
C
	DO 200 INLNT=78,1,-1
	  IF(INBUF(INLNT).NE.' ') GO TO 300	!NOT BLANK?
200	CONTINUE
	GO TO 5					!TRY AGAIN.
C
300	DO 400 I=1,INLNT			!CONVERT TO UPPER CASE.
	  IF((INBUF(I).GE.'a').AND.(INBUF(I).LE.'z'))
&		INBUF(I)=INBUF(I)-"200000000000
400	CONTINUE
	PRSCON=1				!RESTART LEX SCAN.
	RETURN
	END
C PARSE-	TOP LEVEL PARSE ROUTINE
C
C DECLARATIONS
C
C THIS ROUTINE DETAILS ON BIT 0 OF PRSFLG
C
	LOGICAL FUNCTION PARSE(INBUF,INLNT,VBFLAG)
	IMPLICIT INTEGER(A-Z)
	LOGICAL INBUF(78)
	LOGICAL LEX,SYNMCH,DFLAG,VBFLAG
	INTEGER OUTBUF(40)
	COMMON /DEBUG/ DBGFLG,PRSFLG
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
	COMMON /LAST/ spv(4)
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
D	DFLAG=(PRSFLG.AND."1).NE.0
	PARSE=.FALSE.				!ASSUME FAILS.
	PRSA=0					!ZERO OUTPUTS.
	PRSI=0
	PRSO=0
C
	IF(.NOT.LEX(INBUF,INLNT,OUTBUF,OUTLNT,VBFLAG)) GO TO 100
	IF(SPARSE(OUTBUF,OUTLNT,VBFLAG)) 100,200,300	!DO SYN SCAN.
C
C PARSE REQUIRES VALIDATION
C
200	IF(.NOT.VBFLAG) GO TO 350		!ECHO MODE, FORCE FAIL.
	IF(.NOT.SYNMCH(X)) GO TO 100		!DO SYN MATCH.
	IF((PRSO.GT.0).AND.(PRSO.LT.XMIN)) spv(1)=PRSO
C
C SUCCESSFUL PARSE OR SUCCESSFUL VALIDATION
C
300	PARSE=.TRUE.
350	CALL ORPHAN(0,0,0,0,0)			!CLEAR ORPHANS.
D	IF(DFLAG) TYPE 10,PARSE,PRSA,PRSO,PRSI
D10	FORMAT(' PARSE RESULTS- ',L7,3I7)
	SPV(2)=PRSA
	SPV(1)=PRSO
	SPV(3)=PRSI
	SPV(4)=.TRUE.
	RETURN
C
C PARSE FAILS, DISALLOW CONTINUATION
C
100	PRSCON=1
D	IF(DFLAG) TYPE 10,PARSE,PRSA,PRSO,PRSI
	SPV(4)=.FALSE.
	RETURN
C
	END
C ORPHAN- SET UP NEW ORPHANS
C
C DECLARATIONS
C
	SUBROUTINE ORPHAN(O1,O2,O3,O4,O5)
	IMPLICIT INTEGER(A-Z)
	COMMON /ORPHS/ A,B,C,D,E
C
	A=O1					!SET UP NEW ORPHANS.
	B=O2
	C=O3
	D=O4
	E=O5
	RETURN
	END
C LEX-	LEXICAL ANALYZER
C
C DECLARATIONS
C
C THIS ROUTINE DETAILS ON BIT 1 OF PRSFLAG
C
	LOGICAL FUNCTION LEX(INBUF,INLNT,OUTBUF,OP,VBFLAG)
	IMPLICIT INTEGER(A-Z)
	LOGICAL INBUF(78),J
	INTEGER OUTBUF(40)
	LOGICAL DFLAG,VBFLAG
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
	COMMON /DEBUG/ DBGFLG,PRSFLG
C
	DO 100 I=1,40				!CLEAR OUTPUT BUF.
	  OUTBUF(I)=0
100	CONTINUE
C
D	DFLAG=(PRSFLG.AND."2).NE.0
	LEX=.FALSE.				!ASSUME LEX FAILS.
	OP=-1					!OUTPUT PTR.
50	OP=OP+2					!ADV OUTPUT PTR.
	CP=0					!CHAR PTR=0.
C
200	IF(PRSCON.GT.INLNT) GO TO 1000		!END OF INPUT?
	J=INBUF(PRSCON)				!NO, GET CHARACTER,
	PRSCON=PRSCON+1				!ADVANCE PTR.
	IF(J.EQ.'.') GO TO 1000			!END OF SENTENCE?
	IF(J.EQ.',') GO TO 2000			!END OF COMMAND?
	IF(J.EQ.' ') GO TO 6000			!SPACE?
	J1=G50(J)				!CONVERT TO R50
	IF(J1.NE.0) GO TO 4000
C
	IF(VBFLAG) CALL RSPEAK(601)		!GREEK TO ME, FAIL.
	RETURN
C
C END OF INPUT, SEE IF PARTIAL WORD AVAILABLE.
C
1000	PRSCON=1				!FORCE PARSE RESTART.
2000	IF((CP.EQ.0).AND.(OP.EQ.1)) RETURN	!ANY RESULTS?
	IF(CP.EQ.0) OP=OP-2			!ANY LAST WORD?
	LEX=.TRUE.
D	IF(DFLAG) TYPE 10,CP,OP,PRSCON,(OUTBUF(I),I=1,OP+1)
D10	FORMAT(' LEX RESULTS- ',3I7/1X,10O7)
	RETURN
C
C LEGITIMATE CHARACTERS: LETTER, DIGIT, OR HYPHEN.
C
4000	CONTINUE
D	IF(DFLAG) TYPE 20,J,J1,CP
D20	FORMAT(' LEX- CHAR= ',3I7)
	IF(CP.GE.6) GO TO 200			!IGNORE IF TOO MANY CHAR.
	K=OP+(CP/3)				!COMPUTE WORD INDEX.
	GO TO (4100,4200,4300),(MOD(CP,3)+1)	!BRANCH ON CHAR.
4100	J2=J1*780				!CHAR 1... *780
	OUTBUF(K)=OUTBUF(K)+J2+J2		!*1560 (40 ADDED BELOW).
4200	OUTBUF(K)=OUTBUF(K)+(J1*39)		!*39 (1 ADDED BELOW).
4300	OUTBUF(K)=OUTBUF(K)+J1			!*1.
	CP=CP+1
	GO TO 200				!GET NEXT CHAR.
C
C SPACE
C
6000	IF(CP.EQ.0) GO TO 200			!ANY WORD YET?
	GO TO 50				!YES, ADV OP.
C
	END
 C SPARSE-	START OF PARSE
C
C DECLARATIONS
C
C THIS ROUTINE DETAILS ON BIT 2 OF PRSFLG
C
	INTEGER FUNCTION SPARSE(LBUF,LLNT,VBFLAG)
	IMPLICIT INTEGER(A-Z)
	INTEGER LBUF(40)
	LOGICAL LIT,QHERE,OTEST,DFLAG,VBFLAG
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C PARSER STATE
C
	COMMON /ORPHS/ OFLAG,OACT,OSLOT,OPREP,ONAME
	COMMON /LAST/ spv(4)
	COMMON /PV/ ACT,O1,O2,P1,P2
	INTEGER OBJVEC(2),PRPVEC(2)
	EQUIVALENCE (OBJVEC(1),O1),(PRPVEC(1),P1)
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /DEBUG/ DBGFLG,PRSFLG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&		OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C SPARSE, PAGE 2
C
C VOCABULARIES
C
	COMMON /BUZVOC/ BVOC(20)
	COMMON /PRPVOC/ PVOC(45)
	COMMON /DIRVOC/ DVOC(75)
	INTEGER AVOC(400)
	COMMON /ADJVOC/ AVOC1(181),AVOC2(111),AVOC3(106),AVOCND
	INTEGER VVOC(900)
	COMMON /VRBVOC/ VVOC1(92),VVOC1A(118),VVOC2(104),VVOC3(136),
&		VVOC4(116),VVOC5(134),VVOC6(117),VVOC7(89),VVOCND
	INTEGER OVOC(1050)
	COMMON /OBJVOC/ OVOC1(158),OVOC2(144),OVOC3(149),OVOC4(127),
&		OVOC5(108),OVOC6(104),OVOC6A(91),OVOC7(124),OVOCND
C
	EQUIVALENCE (VVOC(1),VVOC1(1))
	EQUIVALENCE (AVOC(1),AVOC1(1))
	EQUIVALENCE (OVOC(1),OVOC1(1))
C
C FUNCTIONS AND DATA
C
	OTEST(R)=(R.GT.0).AND.(R.LT.R50MIN)
	DATA R50MIN/"3100/,R50WAL/'WAL'/
C
C BUZZ WORDS--	IGNORED IN SYNTACTIC PROCESSING
C
	DATA BVOC/'AND',0,'BY',0,'IS',0,'A',0,
&		'AN',0,'THE',0,'RUN',0,'GO',0,'PRO','CEE',0,0/
C
C PREPOSITIONS--	MAPS PREPOSITIONS TO INDICES
C
	DATA PVOC/'OVE','R',1,'WIT','H',2,'USI','NG',2,'THR','OUG',2,
&		'AT',0,3,'TO',0,4,'IN',0,5,'INS','IDE',5,'INT','O',5,
&		'DOW','N',6,'UP',0,7,'UND','ER',8,'OF',0,9,'ON',0,10,
&		'OFF',0,11/
C
C DIRECTIONS--	MAPS DIRECTIONS TO INDICES
C
	DATA DVOC/'N',0,"2000,'NOR','TH',"2000,'S',0,"12000,
&		'E',0,"6000,'EAS','T',"6000,'W',0,"16000,'WES','T',"16000,
&		'SE',0,"10000,'SW',0,"14000,
&		'NE',0,"4000,'NW',0,"20000,
&		'U',0,"22000,'UP',0,"22000,'D',0,"24000,'DOW','N',"24000,
&		'LAU','NCH',"26000,'LAN','D',"30000,'ENT','ER',"32000,
&		'EXI','T',"34000,'OUT',0,"34000,'LEA','VE',"34000,
&		'TRA','VEL',"36000,'SOU','TH',"12000,
&		'IN',0,"32000,
&		'CRO','SS',"36000/
C SPARSE, PAGE 3
C
C ADJECTIVES--	MAPS ADJECTIVES TO OBJECT NUMBERS
C
C EACH ENTRY IS VARIABLE LENGTH AND CONSISTS OF A TWO WORD
C ADJECTIVE IN RADIX-50 FOLLOWED BY ONE OR MORE OBJECT NUMBERS.
C NOTE THAT ADJECTIVES CAN BE DISTINGUISHED FROM OBJECTS AS
C FOLLOWS-- ALL ADJECTIVES ARE .GE. 'A (1600)', WHILE ALL OBJECTS
C ARE .LE. OLNT (255 MAX).
C
	DATA AVOC1/'BRO','WN',1,81,'ELO','NGA',1,'HOT',0,3,'PEP','PER',3,
&		'VIT','REO',4,'JAD','E',6,'HUG','E',8,'ENO','RMO',8,122,
&		'TRO','PHY',9,'CLE','AR',10,'LAR','GE',12,26,47,95,96,123,
&		133,135,146,147,150,176,'NAS','TY',13,'ELV','ISH',14,
&		'BRA','SS',15,16,46,156,
&		'BRO','KEN',16,22,92,113,155,158,'ORI','ENT',17,
&		'BLO','ODY',20,'RUS','TY',21,'BUR','NED',22,
&		'DEA','D',22,'OLD',0,25,41,44,45,'LEA','THE',25,
&		'PLA','TIN',26,'PEA','RL',27,
&		'MOB','Y',31,'CRY','STA',32,126,'GOL','D',33,85,104,157,158,
&		'IVO','RY',34,'SAP','PHI',37,'WOO','DEN',38,67,136,137,
&		165,173,174,175,'WOO','D',38,67,136,137,165,173,174,175,
&		'STE','EL',39,125,
&		'DEN','TED',39,'FAN','CY',40,'ANC','IEN',41,44,
&		'SMA','LL',5,46,52,53,89,102,103,153,
&		'BLA','CK',47,162,'TOU','R',49,
&		'VIS','COU',55,'VIC','IOU',62,
&		 'GLA','SS',10,126,132,'TRA','P',66/
C
	DATA AVOC2/'FRO','NT',68,'STO','NE',69,150,209,'MAN','GLE',72,
&		'RED',0,79,94,140,161,170,171,'YEL','LOW',80,159,
&		'BLU','E',82,112,114,141,
&		'VAM','PIR',83,'MAG','IC',90,
&		'SEA','WOR',90,'TAN',0,91,'SHA','RP',92,
&		'WIC','KER',98,'CLO','TH',100,
&		'BRA','IDE',101,
&		'GAU','DY',108,'SQU','ARE',109,127,'CLA','Y',109,
&		'SHI','NY',110,'THI','N',110,
&		'GRE','EN',115,143,'PUR','PLE',116,'WHI','TE',117,147,160,
&		'MAR','BLE',119,'COK','E',121,
&		'ROU','ND',128,'TRI','ANG',129,
 	2 'RAR','E',134,'OBL','ONG',135,'EAT','$ME',138,
&		'EAT','ME',138,'ORA','NGE',139,'ECC','H',141/
C
	DATA AVOC3/'ROC','KY',147,'SHE','ER',147,
&		'200',0,148,'NEA','T',148,'SHI','MME',151,
&		'ZUR','ICH',152,'BIR','DS',153,154,155,
&		'ENC','RUS',154,155,'BEA','UTI',156,'CLO','CKW',157,158,
&		'MEC','HAN',157,158,'BAR','E',195,'SON','G',198,
&		'MAH','OGA',163,'PIN','E',164,'LON','G',166,
&		'CEN','TER',166,'SHO','RT',167,'T',0,168,
&		'COM','PAS',169,206,'BRO','NZE',172,'CEL','L',174,175,
&		'LOC','KED',174,'SUN',0,177,
&		'NOR','TH',200,'NOR','THE',200,'SOU','TH',201,
&		'SOU','THE',201,'EAS','T',202,'EAS','TER',202,
&		'WES','T',203,'WES','TER',203,'DUN','GEO',210/
C
	DATA AVOCND/-1/
C SPARSE, PAGE 4
C
C VERBS--	MAPS VERBS TO SYNTAX SLOTS
C
C EACH ENTRY IS VARIABLE LENGTH AND CONSISTS OF ONE OR MORE
C TWO WORD VERBS IN RADIX-50 FOLLOWED BY A SYNTAX WORD COUNT
C FOLLOWED BY ONE OR MORE SYNTAXES.  NOTE THAT VERBS CAN BE
C DISTINGUISHED FROM WORD COUNTS AS FOLLOWS--
C ALL VERBS ARE .GE. 'A (1600)', WHILE ALL SYNTAX WORD COUNTS
C ARE .LE. 255.
C
C SYNTAX ENTRIES CONSIST OF A FLAG WORD FOLLOWED BY 0, 1, OR 2
C OBJECT DESCRIPTIONS.  THE FLAG WORD HAS THE FOLLOWING FORMAT--
C
C BIT <14>	IF 1, SYNTAX INCLUDES DIRECT OBJECT
C BIT <13>	IF 1, SYNTAX INCLUDES INDIRECT OBJECT
C BIT <12>	IF 1, DIRECT OBJECT IS IMPLICIT (STANDARD FORM)
C BIT <11>	IF 1, DIRECT AND INDIRECT OBJECT MUST BE SWAPPED
C			AFTER SYNTAX PROCESSING
C BIT <10>	IF 1, THIS IS DEFAULT SYNTAX FOR ORPHANERY
C BITS <8:0>	VERB NUMBER FOR VAPPLI
C
C OBJECT DESCRIPTIONS CONSIST OF A FLAG WORD AND TWO FWIM WORDS.
C THE FLAG WORD HAS THE FOLLOWING FORMAT--
C
C BIT <14>	IF 1, SEARCH ADVENTURER FOR OBJECT
C BIT <13>	IF 1, SEARCH ROOM FOR OBJECT
C BIT <12>	IF 1, PARSER WILL TRY TO TAKE OBJECT
C BIT <11>	IF 1, ADVENTURER MUST HAVE OBJECT
C BIT <10>	IF 1, QUALIFYING BITS (NORMALLY -1,-1) ARE SAME
C			AS FWIM BITS
C BIT <9>	IF 1, OBJECT MUST BE REACHABLE
C BITS <8:0>	PREPOSITION NUMBER FOR SYNMCH
C
C THE FWIM WORDS HAVE THE SAME FORMAT AS THE TWO OBJECT FLAG WORDS.
C
C NOTE THAT BITS 12 AND 11 OF OBJECT DESCRIPTIONS ACTUALLY HAVE
C FOUR DISTINCT STATES--
C
C	BIT 12	BIT 11	MDLDESC		INTERPRETATION
C	------	------	-------		---------------
C
C	  0	  0	 --		NO PARSER ACTION
C	  0	  1	 HAVE		ADVENTURER MUST HAVE OBJECT
C	  1	  0	 TRY		TRY TO TAKE, DONT CARE IF FAIL
C	  1	  1	 TAKE		TRY TO TAKE, CARE IF FAIL
C
C SPARSE, PAGE 5
C
	DATA VVOC1/'BRI','EF',1,70,'VER','BOS',1,71,
&		'SUP','ERB',1,72,'STA','Y',1,73,'VER','SIO',1,74,
&		'SWI','M','BAT','HE','WAD','E',1,75,'GER','ONI',1,76,
&		'ULY','SSE','ODY','SSE',1,77,
&		 'WEL','L',1,78,'PRA','Y',1,79,'TRE','ASU',1,80,
&		'TEM','PLE',1,81,'BLA','ST',1,82,'SCO','RE',1,83,
&		'Q',0,'QUI','T',1,84,'HEL','P',1,50,'INF','O',1,51,
&		'HIS','TOR','UPD','ATE',1,52,'BAC','K',1,53,
&		'SIG','H','MUM','BLE',1,54/
C
	DATA VVOC1A/'CHO','MP','LOS','E','BAR','F',1,55,
&		'DUN','GEO',1,56,'FRO','BOZ',1,57,'FOO',0,'BLE','TCH',
&		'BAR',0,1,58,'REP','ENT',1,59,'HOU','S','SCH','EDU',1,60,
&		'WIN',0,1,61,'YEL','L','SCR','EAM','SHO','UT',1,62,
&		'HOP',0,'SKI','P',1,63,'FUC','K','SHI','T','DAM','N',
&		'CUR','SE',1,64,'ZOR','K',1,65,'GRA','NIT',1,"50102,
&		'SAV','E',1,149,'RES','TOR',1,150,'TIM','E',1,90,
&		 'DIA','GNO',1,94,'EXO','RCI',1,105,'INV','ENT',
&		'I',0,1,133,'WAI','T',1,128,
&		'INC','ANT',1,95,'ANS','WER',1,96,'ROO','M','RNA','ME',1,97,
&		'AGA','IN',1,255/

C
	DATA VVOC2/'DEF','LAT',1,"50147,
&		'DES','CRI','WHA','T','EXA','MIN',1,"50170,
&		'FIL','L',11,"60206,"61000,"200,0,"61002,"400,0,
&		"40206,"61000,"200,0,
&		'FIN','D','SEE','K','WHE','RE','SEE',0,4,"40177,"60000,-1,-1,
&		'FOL','LOW',2,"125,"50125,
&		'KIC','K','BIT','E','TAU','NT',1,"50153,'LOW','ER',1,"50156,
&		 'PUS','H','PRE','SS',1,"50160,'RIN','G','PEA','L',1,"50127,
&		'RUB',0,'CAR','ESS','TOU','CH','FON','DLE',1,"50157,
&		'SHA','KE',1,"50171,'SPI','N',1,"50201,
&		'UNT','IE','FRE','E',1,"50161,'WAL','K',9,"50216,
&		"40126,"61002,-1,-1,"40126,"61005,-1,-1/
C
	DATA VVOC3/'ATT','ACK','FIG','HT','INJ','URE','HIT',0,'HUR','T',
&		7,"60215,"21000,0,"200,"44002,0,"1000,
&		'BOA','RD',4,"40202,"21000,0,"2,
&		 'BRU','SH','CLE','AN',5,"52130,"70130,"61002,-1,-1,
&		'BUR','N','IGN','ITE','INC','INE',7,"60211,"61000,"20,0,
&		"64002,"10,0,
&		'CLI','MB',12,"40235,"20007,0,"4000,
&		"40236,"20006,0,"4000,"40234,"20000,0,"4000,
&		'CLO','SE',4,"40176,"61000,"10200,0,
&		'DIG',0,4,"40131,"44002,"4,0,
&		'DIS','EMB',4,"40203,"20000,0,"2,
&		'DRI','NK','IMB','IBE','SWA','LLO',4,"40210,"61000,"400,0,
&		'DRO','P','REL','EAS',11,"42221,"41000,-1,-1,
&		"60221,"41000,-1,-1,"61005,-1,-1,
&		'EAT',0,'CON','UME','GOB','BLE','MUN','CH','TAS','TE',
&		4,"40207,"75000,"2000,0,
&		'EXT','ING','DOU','SE',4,"40174,"75000,"100,0/
C
	DATA VVOC4/'GIV','E','HAN','D','DON','ATE',11,"72222,"21004,
&		"40,0,"64222,"21000,"40,0,"61000,-1,-1,
&		'HEL','LO','HI',0,2,"2227,"50227,
&		'BLO','W',15,"62146,"61007,-1,-1,"61002,"4,0,
&		"40160,"61007,-1,-1,"40165,"61005,-1,-1,
&		'INF','LAT',4,"70146,"61002,"4,0,
&		'JUM','P','LEA','P',5,"133,"40133,"61001,-1,-1,
&		'KIL','L','MUR','DER','SLA','Y','STA','B','DIS','PAT',
&		7,"60213,"21000,0,"200,
&		"44002,0,"1000,
&		'KNO','CK','RAP',0,12,"42166,"61003,-1,-1,
&		"40166,"61012,-1,-1,"40215,"23006,"40,0,
&		'LIG','HT',11,"42173,"75000,"100,0,
&			"60211,"61000,"100,0,"54002,"10,0,
&		'LOC','K',4,"40134,"20000,-1,-1/
C
	DATA VVOC5/'LOO','K','L',0,'STA','RE','GAZ','E',
&		13,"167,"40167,"60003,-1,-1,
&		"40231,"61010,-1,-1,"40230,"60005,-1,-1,
&		'MEL','T','LIQ','UIF',4,"70145,"61002,"10,0,
&		 'MOV','E',4,"40172,"20000,-1,-1,
&		'PUL','L','TUG',0,8,"42172,"21000,-1,-1,
&		"40172,"21012,-1,-1,
&		'MUN','G','HAC','K','FRO','B','DAM','AGE',
&		5,"52212,"70212,"44002,-1,-1,
&		'OPE','N',11,"42175,"61000,"10200,0,
&		"60175,"61000,"10200,0,"54002,"4,"1000,
&		'PIC','K',4,"40204,"61007,"20000,"40,
&		'PLU','G','GLU','E','PAT','CH',4,"70152,"61002,-1,-1,
&		'POK','E','BRE','AK','JAB',0,7,"60212,"21000,0,"200,
&		"44002,0,"1000,
&		 'POU','R','SPI','LL',11,"42223,"42000,"400,0,
&		"60223,"42000,"400,0,"60005,-1,-1,
&		'PUM','P',4,"60232,"60007,-1,-1/
C
	DATA VVOC6/'PUT',0,'INS','ERT','STU','FF','PLA','CE',
&		8,"72220,"61005,-1,-1,
&		"40221,"61006,-1,-1,
&		'RAI','SE','LIF','T',5,"52155,"40155,"61007,-1,-1,
&		 'REA','D','SKI','M',11,"42144,"71000,"40000,0,
&		"60144,"71000,"40000,0,"61002,-1,-1,
&		'STR','IKE',12,"60215,"23000,"40,0,
&		"44002,0,"1000,"42215,"23000,"40,0,"50173,
&		'SWI','NG','THR','UST',7,"60214,"44000,0,"1000,
&		"21003,0,"200,
&		'TAK','E','GET',0,'HOL','D','CAR','RY','REM','OVE',
&		4,"40204,"61000,"20000,"40,
&		'TEL','L','COM','MAN','REQ','UES',4,"40217,"20000,0,"2000,
&		'THR','OW','HUR','L','CHU','CK',14,"60224,"44000,-1,-1,
&			"21003,"40,0,"60224,"44000,-1,-1,"21002,"40,0/
C
	DATA VVOC7/'TIE',0,'FAS','TEN',11,"70162,"61004,-1,-1,
&		"60163,"21000,"40,0,"65002,"4,0,
&		'TUR','N','SET',0,22,"62164,"61000,"2,0,
&			"64002,"4,0,
&		"40173,"75012,"100,0,"40174,"75013,"100,0,
&		"60237,"61000,"2,0,"20004,-1,-1,
&		'UNL','OCK',7,"60135,"21000,-1,-1,
&		"74002,"4,0,
&		'WAK','E','SUR','PRI','ALA','RM','STA','RTL',
&		8,"42150,"20000,"40,0,
&		"40150,"20007,"40,0,
&		'WAV','E','FLA','UNT','BRA','NDI',4,"40154,"40000,-1,-1,
&		'WIN','D',5,"50233,"40233,"61007,-1,-1/
C
	DATA VVOCND/-1/
C SPARSE, PAGE 6
C
C OBJECTS--	MAPS OBJECTS TO OBJECT INDICES
C
C SAME FORMAT AS AVOC.
C
	DATA OVOC1/'BAG',0,1,25,100,'SAC','K',1,'GAR','LIC',2,
&		'CLO','VE',2,'FOO','D',3,'SAN','DWI',3,'LUN','CH',3,
&		'DIN','NER',3,
&		'GUN','K',4,55,'PIE','CE',4,143,'SLA','G',4,'COA','L',5,
&		 'PIL','E',5,38,78,87,88,122,'HEA','P',5,
&		 'FIG','URI',6,
&		'MAC','HIN',7,'PDP','10',7,'PDP','11',7,'DRY','ER',7,
&		'LID',0,7,'DIA','MON',8,'CAS','E',9,123,'BOT','TLE',10,123,
&		'CON','TAI',10,'WAT','ER',11,204,'QUA','NTI',11,204,
&		'LIQ','UID',11,204,'H2O',0,11,204,
&		'ROP','E',12,101,'HEM','P',12,'COI','L',12,110,
&		'KNI','FE',13,21,'BLA','DE',13,14,'SWO','RD',14,'ORC','HRI',14,
&		'GLA','MDR',14,'LAM','P',15,16,22,'LAN','TER',15,16,22,
&		'RUG',0,17,'CAR','PET',17,
&		'LEA','VES',18,'LEA','F',18,'TRO','LL',19,
&		 'AXE',0,20,'DIN','NER',3/
C
	DATA OVOC2/'KEY','S',23,'KEY',0,23,
&		'SET',0,23,'BON','ES',24,'SKE','LET',24,'BOD','Y',24,73,
&		'COI','NS',25,'BAR',0,26,165,168,
&		 'NEC','KLA',27,'PEA','RLS',27,'MIR','ROR',28,29,207,
&		'ICE',0,30,'MAS','S',30,'GLA','CIE',30,'RUB','Y',31,
&		'TRI','DEN',32,'FOR','K',32,'COF','FIN',33,'CAS','KET',33,
&		'TOR','CH',34,'CAG','E',35,36,124,125,'DUM','BWA',35,36,
&		'BAS','KET',35,36,98,113,'BRA','CEL',37,
&		'JEW','EL',37,'TIM','BER',38,'BOX',0,39,53,105,'STR','ADI',40,
&		'VIO','LIN',40,'ENG','RAV',41,'INS','CRI',41,44,'GHO','ST',42,
&		'SPI','RIT',42,'FIE','ND',42,'GRA','IL',43,'PRA','YER',44,47,
&		'TRU','NK',45,'CHE','ST',45,'BEL','L',46,
&		 'BOO','K',47,49,114,115,116,117,'BIB','LE',47/
C
	DATA OVOC3/'GOO','DBO',47,'CAN','DLE',48,'PAI','R',48,
&		'GUI','DEB',49,
&		'GUI','DE',49,'PAP','ER',50,122,143,'NEW','SPA',50,
&		'ISS','UE',50,'REP','ORT',50,'MAG','AZI',50,'NEW','S',50,
&		 'MAT','CHB',51,
&		 'MAT','CH',51,'MAT','CHE',51,'ADV','ERT',52,'PAM','PHL',52,
&		'LEA','FLE',52,'BOO','KLE',52,'MAI','LBO',53,
&		'TUB','E',54,'TOO','THP',54,'PUT','TY',55,'MAT','ERI',55,
&		'GLU','E',55,'WRE','NCH',56,'SCR','EWD',57,
&		'CYC','LOP',58,'MON','STE',58,'CHA','LIC',59,'CUP',0,59,
&		'GOB','LET',59,'PAI','NTI',60,149,'ART',0,60,149,
&		'CAN','VAS',60,'PIC','TUR',60,'WOR','K',60,
&		'MAS','TER',60,210,'THI','EF',61,'ROB','BER',61,
&		'CRI','MIN',61,'BAN','DIT',61,'CRO','OK',61,'GEN','T',61,
&		'GEN','TLE',61,'MAN',0,61,'THU','G',61,
&		 'BAG','MAN',61,'STI','LLE',62/
C
	DATA OVOC4/'WIN','DOW',63,'BOL','T',64,'NUT',0,64,
&		'GRA','TE',65,'GRA','TIN',65,'DOO','R',66,67,68,69,
&		164,172,173,174,175,'TRA','PDO',66,
&		'TRA','P$D',66,'SWI','TCH',70,76,79,80,81,82,170,
&		 'HEA','D',71,120,'COR','PSE',72,73,'BOD','IES',73,
&		'DAM',0,74,'GAT','ES',74,76,'GAT','E',74,76,
&		'FCD',0,74,'RAI','L',75,'RAI','LIN',75,
&		'BUT','TON',76,79,80,81,82,127,128,129,170,176,
&		'BUB','BLE',77,'LEA','K',78,'DRI','P',78,
&		'HOL','E',78,107,
&		'BAT',0,83,'RAI','NBO',84,
&		'POT',0,85,'STA','TUE',86,'SCU','LPT',86,'ROC','K',86,
&		'BOA','T',87,88,90,'PLA','STI',87,88,
&		 'PUM','P',89/
C
	DATA OVOC5/'AIR','PUM',89,'AIR','$PU',89,'LAB','EL',91,112,
&		'FIN','EPR',91,'STI','CK',92,'BAR','REL',93,'BUO','Y',94,
&		'EME','RAL',95,'SHO','VEL',96,'GUA','NO',97,'CRA','P',97,
&		 'SHI','T',97,'HUN','K',97,'BAL','LOO',98,113,
&		'REC','EPT',99,'WIR','E',101,110,
&		'HOO','K',102,103,'ZOR','KMI',104,148,'COI','N',104,
&		'SAF','E',105,'CAR','D',106,'NOT','E',106,
&		'SLO','T',107,'CRO','WN',108,'BRI','CK',109,
&		'FUS','E',110,'GNO','ME',111,152,
&		'STA','MP',118,
&		'TOM','B',119,'CRY','PT',119,'GRA','VE',119,'HEA','DS',120,
&		 'POL','ES',120,'IMP','LEM',120/
C
	DATA OVOC6/'LOS','ERS',120,'COK','ES',121,
&		'LIS','TIN',122,'STA','CK',122,
&		'PRI','NTO',122,
&		 'SPH','ERE',126,'BAL','L',126,
&		'ETC','HIN',130,131,
&		'WAL','LS',130,131,193,200,201,202,203,'WAL','L',
&		130,131,159,160,161,162,163,164,193,200,201,202,203,
&		'FLA','SK',132,'POO','L',133,'SEW','AGE',133,
&		'TIN',0,134,'SAF','FRO',134,'SPI','CES',134,'TAB','LE',135,
&		'POS','T',136,166,167,'POS','TS',136,'BUC','KET',137,
&		'CAK','E',138,139,140,141,'ICI','NG',139,140,141,
&		'ROB','OT',142,'ROB','BY',142,
&		'C3P','O',142,'R2D','2',142/
C
	DATA OVOC6A/'PAN','EL',159,160,161,162,163,164,208,
&		'POL','E',166,167,'TBA','R',168,'T$B','AR',168,
&		'ARR','OW',169,'POI','NT',169,'BEA','M',171,
&		 'DIA','L',177,'SUN','DIA',177,'1',0,178,
&		'ONE',0,178,'2',0,179,'TWO',0,179,'3',0,180,
&		'THR','EE',180,'4',0,181,'FOU','R',181,'5',0,182,
&		'FIV','E',182,'6',0,183,'SIX',0,183,'7',0,184,
&		'SEV','EN',184,'8',0,185,'EIG','HT',185,
&		 'IT',0,187,'THA','T',187,'THI','S',187/
C
	DATA OVOC7/'ME',0,188,'MYS','ELF',188,'CRE','TIN',188,
&		'ALL',0,189,'EVE','RYT',189,
&		'TRE','ASU',190,'VAL','UAB',190,'SAI','LOR',191,'TEE','TH',192,
&		'GRU','E',194,'HAN','D',195,'HAN','DS',195,
&		 'LUN','GS',196,'AIR',0,196,'AVI','ATO',197,
&		'FLY','ER',197,'TRE','E',144,145,199,
&		'CLI','FF',146,147,'LED','GE',146,147,'POR','TRA',149,
&		'STA','CK',148,'BIL','LS',148,
&		'VAU','LT',150,'CUB','E',150,'LET','TER',67,150,
&		'CUR','TAI',151,'LIG','HT',151,'NES','T',153,
&		'EGG',0,154,155,'BAU','BLE',156,'CAN','ARY',157,158,
&		'BIR','D',198,'SON','GBI',198,
&		'GUA','RD',205,'GUA','RDI',205,'ROS','E',206,
&		'STR','UCT',207,'CHA','NNE',209,
&		 'KEE','PER',210/
C
	DATA OVOCND/-1/
C SPARSE, PAGE 7
C
C SET UP FOR PARSING
C
	SPARSE=-1				!ASSUME PARSE FAILS.
	ADJ=0					!CLEAR PARTS HOLDERS.
	ACT=0
	PREP=0
	PPTR=0
	O1=0
	O2=0
	P1=0
	P2=0
D	DFLAG=(PRSFLG.AND."4).NE.0
C
	BUZLNT=20
	PRPLNT=48
	DIRLNT=75
C SPARSE, PAGE 8
C
C NOW LOOP OVER INPUT BUFFER OF LEXICAL TOKENS.
C
	DO 1000 I=1,LLNT,2			!TWO WORDS/TOKEN.
	  LBUF1=LBUF(I)				!GET CURRENT TOKEN.
	  LBUF2=LBUF(I+1)
	  IF(LBUF1.EQ.0) GO TO 1500		!END OF BUFFER?
C
C CHECK FOR BUZZ WORD
C
	  DO 50 J=1,BUZLNT,2
	    IF((LBUF1.EQ.BVOC(J)).AND.(LBUF2.EQ.BVOC(J+1)))
&		GO TO 1000			!IGNORE BUZZ WORDS.
50	  CONTINUE
C
C CHECK FOR ACTION OR DIRECTION
C
	  IF(ACT.NE.0) GO TO 75			!GOT ACTION ALREADY?
	  J=1					!CHECK FOR ACTION.
125	  IF((LBUF1.EQ.VVOC(J)).AND.(LBUF2.EQ.VVOC(J+1)))
&		GO TO 3000
150	  J=J+2					!ADV TO NEXT SYNONYM.
	  IF(.NOT.OTEST(VVOC(J))) GO TO 125	!ANOTHER VERB?
	  J=J+VVOC(J)+1				!NO, ADVANCE OVER SYNTAX.
	  IF(VVOC(J).NE.-1) GO TO 125		!TABLE DONE?
C
75	  IF((ACT.NE.0).AND.((VVOC(ACT).NE.R50WAL).OR.
&		(PREP.NE.0))) GO TO 200		!NO ACTION OR WALK?
	  DO 100 J=1,DIRLNT,3			!THEN CHK FOR DIR.
	    IF((LBUF1.EQ.DVOC(J)).AND.(LBUF2.EQ.DVOC(J+1)))
&		GO TO 2000
100	  CONTINUE
C
C NOT AN ACTION, CHECK FOR PREPOSITION, ADJECTIVE, OR OBJECT.
C
200	  DO 250 J=1,PRPLNT,3			!LOOK FOR PREPOSITION.
	    IF((LBUF1.EQ.PVOC(J)).AND.(LBUF2.EQ.PVOC(J+1)))
&		GO TO 4000
250	  CONTINUE
C
	  J=1					!LOOK FOR ADJECTIVE.
300	  IF((LBUF1.EQ.AVOC(J)).AND.(LBUF2.EQ.AVOC(J+1)))
&		GO TO 5000
	  J=J+1
325	  J=J+1					!ADVANCE TO NEXT ENTRY.
	  IF(OTEST(AVOC(J))) GO TO 325	!A RADIX 50 CONSTANT?
	  IF(AVOC(J).NE.-1) GO TO 300		!POSSIBLY, END TABLE?
C
	  J=1					!LOOK FOR OBJECT.
450	  IF((LBUF1.EQ.OVOC(J)).AND.(LBUF2.EQ.OVOC(J+1)))
&		GO TO 600
	  J=J+1
500	  J=J+1
	  IF(OTEST(OVOC(J))) GO TO 500
	  IF(OVOC(J).NE.-1) GO TO 450
C
C NOT RECOGNIZABLE
C
	  IF(VBFLAG) CALL RSPEAK(601)
	  RETURN
C SPARSE, PAGE 9
C
C OBJECT PROCESSING (CONTINUATION OF DO LOOP ON PREV PAGE)
C
600	  OBJ=GETOBJ(J,ADJ,0)			!IDENTIFY OBJECT.
D	  IF(DFLAG) TYPE 60,J,OBJ
D60	  FORMAT(' SPARSE- OBJ AT ',I6,'  OBJ= ',I6)
	  IF(OBJ.LE.0) GO TO 6000		!IF LE, COULDNT.
	  IF(OBJ.NE.ITOBJ) GO TO 650		!"IT"?
	  OBJ=GETOBJ(0,0,spv(1))		!FIND LAST.
	  IF(OBJ.LE.0) GO TO 6000		!IF LE, COULDNT.
C
650	  IF(PREP.EQ.9) GO TO 8000		!"OF" OBJ?
	  IF(PPTR.EQ.2) GO TO 7000		!TOO MANY OBJS?
	  PPTR=PPTR+1
	  OBJVEC(PPTR)=OBJ			!STUFF INTO VECTOR.
	  PRPVEC(PPTR)=PREP
700	  PREP=0
	  ADJ=0
1000	CONTINUE				!AT LAST.
C
C NOW SOME MISC CLEANUP
C
1500	IF(ACT.EQ.0) ACT=OFLAG.AND.OACT	!IF NO ACT, STEAL ORPHAN.
	IF(ACT.EQ.0) GO TO 9000			!IF STILL NONE, PUNT.
	IF(ADJ.NE.0) GO TO 10000		!IF DANGLING ADJ, PUNT.
C
	IF((OFLAG.NE.0).AND.(OPREP.NE.0).AND.(PREP.EQ.0).AND.
&		(O1.NE.0).AND.(O2.EQ.0).AND.(ACT.EQ.OACT))
&		GO TO 11000
C
	SPARSE=0				!PARSE SUCCEEDS.
	IF(PREP.EQ.0) GO TO 1750		!IF DANGLING PREP,
	IF((PPTR.EQ.0).OR.(PRPVEC(PPTR).NE.0))
&		GO TO 12000			!AND HAVE 'PICK FROB UP',
	PRPVEC(PPTR)=PREP			!CVT TO 'PICK UP FROB'.
1750	CONTINUE				!WIN.
D	IF(DFLAG) TYPE 70,ACT,O1,O2,P1,P2
D70	FORMAT(' SPARSE RESULTS- ',5I7)
	RETURN
C SPARSE, PAGE 10
C
C SPECIAL PARSE PROCESSORS
C
C 2000--	DIRECTION
C
2000	PRSA=WALKW				!VERB IS WALK.
	PRSO=DVOC(J+2)				!GET DIRECTION.
	SPARSE=1				!WIN TOTALLY.
D	IF(DFLAG) TYPE 10,J
D10	FORMAT(' SPARSE- DIR AT ',I6)
	RETURN
C
C 3000--	ACTION
C
3000	ACT=J					!SAVE INDEX TO VERB.
	OACT=0					!NO ORPHAN.
C
	IF(vvoc(act+3).ne.255)GO TO 3500		!AGAIN PROCESSOR
	IF(SPV(4))GOTO 3200			!IF PREVIOUS COMMAND WAS BAD
	CALL RSPEAK(622)			!CHOMP
	RETURN
C ELSE
3200	PRSA=SPV(2)
	PRSO=SPV(1)
	PRSI=SPV(3)
D	IF(DFLAG)TYPE 15,SPV
D15	FORMAT(' SPARSE- AGAIN: ',4I6)
	SPARSE=1				!DO NOT REVALIDATE THE LINE
	RETURN
C
3500	CONTINUE
D	IF(DFLAG) TYPE 20,J
D20	FORMAT(' SPARSE- ACT AT ',I6)
	GO TO 1000				!DONE.
C
C 4000--	PREPOSITION
C
4000	IF(PREP.NE.0) GO TO 4500		!ALREADY HAVE ONE?
	PREP=PVOC(J+2)			!NO, GET INDEX.
	ADJ=0					!NO ADJECTIVE.
D	IF(DFLAG) TYPE 30,J
D30	FORMAT(' SPARSE- PREP AT ',I6)
	GO TO 1000
C
4500	IF(VBFLAG) CALL RSPEAK(616)		!YES, GAG AND LOSE.
	RETURN
C
C 5000--	ADJECTIVE
C
5000	ADJ=J					!SAVE ADJECTIVE.
	J=ONAME.AND.OFLAG
D	IF(DFLAG) TYPE 40,ADJ,J
D40	FORMAT(' SPARSE- ADJ AT ',I6,' ORPHAN= ',I6)
	IF((J.NE.0).AND.(I.GE.LLNT)) GO TO 600
	GO TO 1000
C
C 6000--	UNIDENTIFIABLE OBJECT (INDEX INTO OVOC IS J)
C
6000	IF(OBJ.LT.0) GO TO 6100			!IF LT, AMBIGUOUS.
	I=579					!NOT HERE OR
	IF(LIT(HERE)) I=618			!NOT LIT.
	IF(VBFLAG) CALL RSPEAK(I)
	RETURN					!LOSE.
C
6100	IF(OBJ.NE.-10000) GO TO 6200		!INSIDE VEHICLE?
	IF(VBFLAG) CALL RSPSUB(620,ODESC2(AVEHIC(WINNER)))
	RETURN
C
6200	IF(VBFLAG) CALL RSPEAK(619)		!CANT DISTINGUISH.
	IF(ACT.EQ.0) ACT=OFLAG.AND.OACT	!IF NO ACT, GET ORPHAN.
	CALL ORPHAN(-1,ACT,O1,PREP,J)		!ORPHAN THE WORLD.
	RETURN
C
C 7000--	TOO MANY OBJECTS.
C
7000	IF(VBFLAG) CALL RSPEAK(617)
	RETURN
C
C 8000--	RANDOMNESS FOR "OF" WORDS
C
8000	IF(OBJVEC(PPTR).EQ.OBJ) GO TO 700	!IGNORE IF OK.
	IF(VBFLAG) CALL RSPEAK(601)
	RETURN
C
C 9000--	NO ACTION, PUNT
C
9000	IF(O1.EQ.0) GO TO 10000			!ANY DIRECT OBJECT?
	IF(VBFLAG) CALL RSPSUB(621,ODESC2(O1))	!WHAT TO DO?
	CALL ORPHAN(-1,0,O1,0,0)
	RETURN
C
C 10000--	TOTAL CHOMP
C
10000	IF(VBFLAG) CALL RSPEAK(622)		!HUH?
	RETURN
C
C 11000--	ORPHAN PREPOSITION.  CONDITIONS ARE
C		O1.NE.0, O2=0, PREP=0, ACT=OACT
C
11000	IF(OSLOT.NE.0) GO TO 11500		!ORPHAN OBJECT?
	P1=OPREP				!NO, JUST USE PREP.
	GO TO 1750
C
11500	O2=O1					!YES, USE AS DIRECT OBJ.
	P2=OPREP
	O1=OSLOT
	P1=0
	GO TO 1750
C
C 12000--	TRUE HANGING PREPOSITION.
C		ORPHAN FOR LATER.
C
12000	CALL ORPHAN(-1,ACT,0,PREP,0)		!ORPHAN PREP.
	GO TO 1750
C
C  SPECIAL ENTRY TO INIT RADIX-50 TEXT (CALLED FROM DINIT)
C
	ENTRY SPINIT
C
	CALL R50CNV(R50WAL,1)
	CALL R50CNV(BVOC,20)
	CALL R50CNV(PVOC,45)
	CALL R50CNV(DVOC,75)
	CALL R50CNV(AVOC,400)
	CALL R50CNV(VVOC,900)
	CALL R50CNV(OVOC,1050)
	RETURN
C
	END

C GETOBJ--	FIND OBJ DESCRIBED BY ADJ, NAME PAIR
C
C DECLARATIONS
C
C THIS ROUTINE DETAILS ON BIT 3 OF PRSFLG
C
	INTEGER FUNCTION GETOBJ(OIDX,AIDX,SPCOBJ)
	IMPLICIT INTEGER(A-Z)
	LOGICAL THISIT,GHERE,LIT,CHOMP,DFLAG
C
	COMMON /OBJFLG/ VABIT,VRBIT,VTBIT,VCBIT,VEBIT,VFBIT,VPMASK
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C MISCELLANEOUS VARIABLES
C
	COMMON /STAR/ MBASE,STRBIT
	COMMON /DEBUG/ DBGFLG,PRSFLG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
C VOCABULARIES
C
	COMMON /OBJVOC/ OVOC(1050)
C GETOBJ, PAGE 2
C
D	DFLAG=(PRSFLG.AND."10).NE.0
	CHOMP=.FALSE.
	AV=AVEHIC(WINNER)
	OBJ=0					!ASSUME DARK.
	IF(.NOT.LIT(HERE)) GO TO 200		!LIT?
C
	OBJ=SCHLST(OIDX,AIDX,HERE,0,0,SPCOBJ)	!SEARCH ROOM.
D	IF(DFLAG) TYPE 10,OBJ
D10	FORMAT(' SCHLST- ROOM SCH ',I6)
	IF(OBJ) 1000,200,100			!TEST RESULT.
100	IF((AV.EQ.0).OR.(AV.EQ.OBJ).OR.
&		((OFLAG2(OBJ).AND.FINDBT).NE.0)) GO TO 200
	IF(OCAN(OBJ).EQ.AV) GO TO 200		!TEST IF REACHABLE.
	CHOMP=.TRUE.				!PROBABLY NOT.
C
200	IF(AV.EQ.0) GO TO 400			!IN VEHICLE?
	NOBJ=SCHLST(OIDX,AIDX,0,AV,0,SPCOBJ)	!SEARCH VEHICLE.
D	IF(DFLAG) TYPE 20,NOBJ
D20	FORMAT(' SCHLST- VEH SCH  ',I6)
	IF(NOBJ) 1100,400,300			!TEST RESULT.
300	CHOMP=.FALSE.				!REACHABLE.
	IF(OBJ.EQ.NOBJ) GO TO 400		!SAME AS BEFORE?
	IF(OBJ.NE.0) NOBJ=-NOBJ			!AMB RESULT?
	OBJ=NOBJ
C
400	NOBJ=SCHLST(OIDX,AIDX,0,0,WINNER,SPCOBJ)	!SEARCH ADVENTURER.
D	IF(DFLAG) TYPE 30,NOBJ
D30	FORMAT(' SCHLST- ADV SCH  ',I6)
	IF(NOBJ) 1100,600,500			!TEST RESULT
500	IF(OBJ.NE.0) NOBJ=-NOBJ			!AMB RESULT?
1100	OBJ=NOBJ				!RETURN NEW OBJECT.
600	IF(CHOMP) OBJ=-10000			!UNREACHABLE.
1000	GETOBJ=OBJ
C
	IF(GETOBJ.NE.0) GO TO 1500		!GOT SOMETHING?
	DO 1200 I=STRBIT+1,OLNT			!NO, SEARCH GLOBALS.
	  IF(.NOT.THISIT(OIDX,AIDX,I,SPCOBJ)) GO TO 1200
	  IF(.NOT.GHERE(I,HERE)) GO TO 1200	!CAN IT BE HERE?
	  IF(GETOBJ.NE.0) GETOBJ=-I		!AMB MATCH?
	  IF(GETOBJ.EQ.0) GETOBJ=I
1200	CONTINUE
C
1500	CONTINUE				!END OF SEARCH.
D	IF(DFLAG) TYPE 40,GETOBJ
D40	FORMAT(' SCHLST- RESULT   ',I6)
	RETURN
	END
C SCHLST--	SEARCH FOR OBJECT
C
C DECLARATIONS
C
	INTEGER FUNCTION SCHLST(OIDX,AIDX,RM,CN,AD,SPCOBJ)
	IMPLICIT INTEGER(A-Z)
	LOGICAL THISIT,QHERE,NOTRAN,NOVIS
C
	COMMON /STAR/ MBASE,STRBIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C FUNCTIONS AND DATA
C
	NOTRAN(O)=((OFLAG1(O).AND.TRANBT).EQ.0).AND.
&		((OFLAG2(O).AND.OPENBT).EQ.0)
	NOVIS(O)=((OFLAG1(O).AND.VISIBT).EQ.0)
C
	SCHLST=0					!NO RESULT.
	DO 1000 I=1,OLNT			!SEARCH OBJECTS.
	  IF(NOVIS(I).OR.
&		(((RM.EQ.0).OR.(.NOT.QHERE(I,RM))).AND.
&		 ((CN.EQ.0).OR.(OCAN(I).NE.CN)).AND.
&			 ((AD.EQ.0).OR.(OADV(I).NE.AD)))) GO TO 1000
	  IF(.NOT.THISIT(OIDX,AIDX,I,SPCOBJ)) GO TO 200
	  IF(SCHLST.NE.0) GO TO 2000		!GOT ONE ALREADY?
	  SCHLST=I					!NO.
C
C IF OPEN OR TRANSPARENT, SEARCH THE OBJECT ITSELF.
C
200	  IF(NOTRAN(I)) GO TO 1000
C
C SEARCH IS CONDUCTED IN REVERSE.  ALL OBJECTS ARE CHECKED TO
C SEE IF THEY ARE AT SOME LEVEL OF CONTAINMENT INSIDE OBJECT 'I'.
C IF THEY ARE AT LEVEL 1, OR IF ALL LINKS IN THE CONTAINMENT
C CHAIN ARE OPEN, VISIBLE, AND HAVE SEARCHME SET, THEY CAN QUALIFY
C AS A POTENTIAL MATCH.
C
	  DO 500 J=1,OLNT			!SEARCH OBJECTS.
	    IF(NOVIS(J).OR. (.NOT.THISIT(OIDX,AIDX,J,SPCOBJ)))
&		GO TO 500			!VISIBLE & MATCH?
	    X=OCAN(J)				!GET CONTAINER.
300	    IF(X.EQ.I) GO TO 400		!INSIDE TARGET?
	    IF(X.EQ.0) GO TO 500		!INSIDE ANYTHING?
	    IF(NOVIS(X).OR.NOTRAN(X).OR.
&		((OFLAG2(X).AND.SCHBT).EQ.0)) GO TO 500
	    X=OCAN(X)				!GO ANOTHER LEVEL.
	    GO TO 300
C
400	    IF(SCHLST.NE.0) GO TO 2000		!ALREADY GOT ONE?
	    SCHLST=J				!NO.
500	  CONTINUE
C
1000	CONTINUE
	RETURN
C
2000	SCHLST=-SCHLST				!AMB RETURN.
	RETURN
C
	END
C THISIT--	VALIDATE OBJECT VS DESCRIPTION
C
C DECLARATIONS
C
	LOGICAL FUNCTION THISIT(OIDX,AIDX,OBJ,SPCOBJ)
	IMPLICIT INTEGER(A-Z)
	LOGICAL NOTEST
C
C VOCABULARIES
C
	COMMON /OBJVOC/ OVOC(1050)
	COMMON /ADJVOC/ AVOC(400)
C
C FUNCTIONS AND DATA
C
	NOTEST(O)=(O.LE.0).OR.(O.GE.R50MIN)
	DATA R50MIN/"3100/
C
	THISIT=.FALSE.				!ASSUME NO MATCH.
	IF((SPCOBJ.NE.0).AND.(OBJ.EQ.SPCOBJ)) GO TO 500
C
C CHECK FOR OBJECT NAMES
C
	I=OIDX+1
100	I=I+1
	IF(NOTEST(OVOC(I))) RETURN		!IF DONE, LOSE.
	IF(OVOC(I).NE.OBJ) GO TO 100		!IF FAIL, CONT.
C
	IF(AIDX.EQ.0) GO TO 500			!ANY ADJ?
	I=AIDX+1
200	I=I+1
	IF(NOTEST(AVOC(I))) RETURN		!IF DONE, LOSE.
	IF(AVOC(I).NE.OBJ) GO TO 200		!IF FAIL, CONT.
C
500	THISIT=.TRUE.
	RETURN
	END
C SYNMCH--	SYNTAX MATCHER
C
C DECLARATIONS
C
C THIS ROUTINE DETAILS ON BIT 4 OF PRSFLG
C
	LOGICAL FUNCTION SYNMCH
	IMPLICIT INTEGER(A-Z)
	LOGICAL SYNEQL,TAKEIT,DFLAG
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
	COMMON /DEBUG/ DBGFLG,PRSFLG
C
	COMMON /ORPHS/ OFLAG,OACT,OSLOT,OPREP,ONAME
	COMMON /PV/ ACT,O1,O2,P1,P2
	COMMON /SYNTAX/VFLAG,DOBJ,DFL1,DFL2,DFW1,DFW2,
&		IOBJ,IFL1,IFL2,IFW1,IFW2
	COMMON /VRBVOC/ VVOC(900)
	COMMON /SYNFLG/ SDIR,SIND,SSTD,SFLIP,SDRIV,SVMASK
	COMMON /OBJFLG/ VABIT,VRBIT,VTBIT,VCBIT,VEBIT,VFBIT,VPMASK
	DATA R50MIN/"3100/
C
	SYNMCH=.FALSE.
D	DFLAG=(PRSFLG.AND."20).NE.0
	J=ACT					!SET UP PTR TO SYNTAX.
	DRIVE=0					!NO DEFAULT.
	DFORCE=0				!NO FORCED DEFAULT.
	QPREP=OFLAG.AND.OPREP			!VALID ORPHAN PREP FLAG.
100	J=J+2					!FIND START OF SYNTAX.
	IF((VVOC(J).LE.0).OR.(VVOC(J).GE.R50MIN)) GO TO 100
	LIMIT=J+VVOC(J)+1			!COMPUTE LIMIT.
	J=J+1					!ADVANCE TO NEXT.
C
200	CALL UNPACK(J,NEWJ)			!UNPACK SYNTAX.
D	IF(DFLAG) TYPE 60,O1,P1,DOBJ,DFL1,DFL2
D60	FORMAT(' SYNMCH INPUTS TO SYNEQL- ',5I7)
	SPREP=DOBJ.AND.VPMASK			!SAVE EXPECTED PREP.
	IF(.NOT.SYNEQL(P1,O1,DOBJ,DFL1,DFL2)) GO TO 1000
D	IF(DFLAG) TYPE 60,O2,P2,IOBJ,IFL1,IFL2
	SPREP=IOBJ.AND.VPMASK			!SAVE EXPECTED PREP.
	IF(SYNEQL(P2,O2,IOBJ,IFL1,IFL2)) GO TO 6000
C
C SYNTAX MATCH FAILS, TRY NEXT ONE.
C
	IF(O2) 3000,500,3000			!IF O2=0, SET DFLT.
1000	IF(O1) 3000,500,3000			!IF O1=0, SET DFLT.
500	IF((QPREP.EQ.0).OR.(QPREP.EQ.SPREP)) DFORCE=J	 !IF PREP MCH.
	IF((VFLAG.AND.SDRIV).NE.0) DRIVE=J	!IF DRIVER, RECORD.
3000	J=NEWJ
	IF(J.LT.LIMIT) GO TO 200		!MORE TO DO?
C SYNMCH, PAGE 2
C
C MATCH HAS FAILED.  IF DEFAULT SYNTAX EXISTS, TRY TO SNARF
C ORPHANS OR GWIMS, OR MAKE NEW ORPHANS.
C
D	IF(DFLAG) TYPE 20,DRIVE,DFORCE
D20	FORMAT(' SYNMCH, DRIVE=',2I6)
	IF(DRIVE.EQ.0) DRIVE=DFORCE		!NO DRIVER? USE FORCE.
	IF(DRIVE.EQ.0) GO TO 10000		!ANY DRIVER?
	CALL UNPACK(DRIVE,DFORCE)		!UNPACK DFLT SYNTAX.
C
C TRY TO FILL DIRECT OBJECT SLOT IF THAT WAS THE PROBLEM.
C
	IF(((VFLAG.AND.SDIR).EQ.0).OR.(O1.NE.0)) GO TO 4000
C
C FIRST TRY TO SNARF ORPHAN OBJECT.
C
	O1=OFLAG.AND.OSLOT
	IF(O1.EQ.0) GO TO 3500			!ANY ORPHAN?
	IF(SYNEQL(P1,O1,DOBJ,DFL1,DFL2)) GO TO 4000
C
C ORPHAN FAILS, TRY GWIM.
C
3500	O1=GWIM(DOBJ,DFW1,DFW2)			!GET GWIM.
D	IF(DFLAG) TYPE 30,O1
D30	FORMAT(' SYNMCH- DO GWIM= ',I6)
	IF(O1.GT.0) GO TO 4000		!TEST RESULT.
	CALL ORPHAN(-1,ACT,0,DOBJ.AND.VPMASK,0)	!FAILS, ORPHAN.
	CALL RSPEAK(623)
	RETURN
C
C TRY TO FILL INDIRECT OBJECT SLOT IF THAT WAS THE PROBLEM.
C
4000	IF(((VFLAG.AND.SIND).EQ.0).OR.(O2.NE.0)) GO TO 6000
	O2=GWIM(IOBJ,IFW1,IFW2)			!GWIM.
D	IF(DFLAG) TYPE 40,O2
D40	FORMAT(' SYNMCH- IO GWIM= ',I6)
	IF(O2.GT.0) GO TO 6000
	IF(O1.EQ.0) O1=OFLAG.AND.OSLOT
	CALL ORPHAN(-1,ACT,O1,DOBJ.AND.VPMASK,0)
	CALL RSPEAK(624)
	RETURN
C
C TOTAL CHOMP
C
10000	CALL RSPEAK(601)			!CANT DO ANYTHING.
	RETURN
C SYNMCH, PAGE 3
C
C NOW TRY TO TAKE INDIVIDUAL OBJECTS AND
C IN GENERAL CLEAN UP THE PARSE VECTOR.
C
6000	IF((VFLAG.AND.SFLIP).EQ.0) GO TO 5000	!FLIP?
	J=O1					!YES.
	O1=O2
	O2=J
C
5000	PRSA=VFLAG.AND.SVMASK			!GET VERB.
	PRSO=O1					!GET DIR OBJ.
	PRSI=O2					!GET IND OBJ.
	IF(.NOT.TAKEIT(PRSO,DOBJ)) RETURN	!TRY TAKE.
	IF(.NOT.TAKEIT(PRSI,IOBJ)) RETURN	!TRY TAKE.
	SYNMCH=.TRUE.
D	IF(DFLAG) TYPE 50,SYNMCH,PRSA,PRSO,PRSI,ACT,O1,O2
D50	FORMAT(' SYNMCH- RESULTS ',L1,6I7)
	RETURN
C
	END
C UNPACK-	UNPACK SYNTAX SPECIFICATION, ADV POINTER
C
C DECLARATIONS
C
	SUBROUTINE UNPACK(OLDJ,J)
	IMPLICIT INTEGER(A-Z)
C
	COMMON /VRBVOC/ VVOC(900)
C
	COMMON /SYNFLG/ SDIR,SIND,SSTD,SFLIP,SDRIV,SVMASK
	COMMON /OBJFLG/ VABIT,VRBIT,VTBIT,VCBIT,VEBIT,VFBIT,VPMASK
	COMMON /SYNTAX/ VFLAG,DOBJ,DFL1,DFL2,DFW1,DFW2,
&		IOBJ,IFL1,IFL2,IFW1,IFW2
	INTEGER SYN(11)
	EQUIVALENCE (SYN(1),VFLAG)
C
	DO 10 I=1,11				!CLEAR SYNTAX.
	  SYN(I)=0
10	CONTINUE
C
	VFLAG=VVOC(OLDJ)
	J=OLDJ+1
	IF((VFLAG.AND.SDIR).EQ.0) RETURN	!DIR OBJECT?
	DFL1=-1					!ASSUME STD.
	DFL2=-1
	IF((VFLAG.AND.SSTD).EQ.0) GO TO 100	!STD OBJECT?
	DFW1=-1					!YES.
	DFW2=-1
	DOBJ=VABIT+VRBIT+VFBIT
	GO TO 200
C
100	DOBJ=VVOC(J)				!NOT STD.
	DFW1=VVOC(J+1)
	DFW2=VVOC(J+2)
	J=J+3
	IF((DOBJ.AND.VEBIT).EQ.0) GO TO 200	!VBIT = VFWIM?
	DFL1=DFW1				!YES.
	DFL2=DFW2
C
200	IF((VFLAG.AND.SIND).EQ.0) RETURN	!IND OBJECT?
	IFL1=-1					!ASSUME STD.
	IFL2=-1
	IOBJ=VVOC(J)
	IFW1=VVOC(J+1)
	IFW2=VVOC(J+2)
	J=J+3
	IF((IOBJ.AND.VEBIT).EQ.0) RETURN	!VBIT = VFWIM?
	IFL1=IFW1				!YES.
	IFL2=IFW2
	RETURN
C
	END
C SYNEQL-	TEST FOR SYNTAX EQUALITY
C
C DECLARATIONS
C
	LOGICAL FUNCTION SYNEQL(PREP,OBJ,SPREP,SFL1,SFL2)
	IMPLICIT INTEGER(A-Z)
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OBJFLG/ VABIT,VRBIT,VTBIT,VCBIT,VEBIT,VFBIT,VPMASK
C
	IF(OBJ.EQ.0) GO TO 100			!ANY OBJECT?
	SYNEQL=(PREP.EQ.(SPREP.AND.VPMASK)).AND.
&		(((SFL1.AND.OFLAG1(OBJ)).OR.
&		  (SFL2.AND.OFLAG2(OBJ))).NE.0)
	RETURN
C
100	SYNEQL=(PREP.EQ.0).AND.(SFL1.EQ.0).AND.(SFL2.EQ.0)
	RETURN
C
	END
C TAKEIT-	PARSER BASED TAKE OF OBJECT
C
C DECLARATIONS
C
	LOGICAL FUNCTION TAKEIT(OBJ,SFLAG)
	IMPLICIT INTEGER(A-Z)
C
	COMMON /OBJFLG/ VABIT,VRBIT,VTBIT,VCBIT,VEBIT,VFBIT,VPMASK
	COMMON /STAR/ MBASE,STRBIT
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C TAKEIT, PAGE 2
C
	TAKEIT=.FALSE.				!ASSUME LOSES.
	IF((OBJ.EQ.0).OR.(OBJ.GT.STRBIT)) GO TO 4000	!NULL/STARS WIN.
	ODO2=ODESC2(OBJ)			!GET DESC.
	X=OCAN(OBJ)				!GET CONTAINER.
	IF((X.EQ.0).OR.((SFLAG.AND.VFBIT).EQ.0)) GO TO 500
	IF((OFLAG2(X).AND.OPENBT).NE.0) GO TO 500
	CALL RSPSUB(566,ODO2)			!CANT REACH.
	RETURN
C
500	IF((SFLAG.AND.VRBIT).EQ.0) GO TO 1000	!SHLD BE IN ROOM?
	IF((SFLAG.AND.VTBIT).EQ.0) GO TO 2000	!CAN BE TAKEN?
C
C SHOULD BE IN ROOM (VRBIT NE 0) AND CAN BE TAKEN (VTBIT NE 0)
C
	IF(SCHLST(0,0,HERE,0,0,OBJ).LE.0) GO TO 4000 !IF NOT, OK.
C
C ITS IN THE ROOM AND CAN BE TAKEN
C
	IF((OFLAG1(OBJ).AND.TAKEBT).NE.0) GO TO 3000
C
C NOT TAKEABLE.  IF WE CARE, FAIL.
C
	IF((SFLAG.AND.VCBIT).EQ.0) GO TO 4000	!IF NO CARE, RETURN.
	CALL RSPSUB(445,ODO2)
	RETURN
C
C 1000--	IT SHOULD NOT BE IN THE ROOM.
C 2000--	IT CANT BE TAKEN.
C
2000	IF((SFLAG.AND.VCBIT).EQ.0) GO TO 4000	!IF NO CARE, RETURN
1000	IF(SCHLST(0,0,HERE,0,0,OBJ).LE.0) GO TO 4000
	CALL RSPSUB(665,ODO2)
	RETURN
C TAKEIT, PAGE 3
C
C OBJECT IS IN THE ROOM, CAN BE TAKEN BY THE PARSER,
C AND IS TAKEABLE IN GENERAL.  IT IS NOT A STAR.
C IF IT IS INSIDE SOMETHING, THE CONTAINER IS OPEN.
C THE FOLLOWING CODE IS LIFTED FROM SUBROUTINE TAKE.
C
3000	IF(OBJ.NE.AVEHIC(WINNER)) GO TO 3500	!TAKE VEHICLE?
	CALL RSPEAK(672)
	RETURN
C
3500	IF(((X.NE.0).AND.(OADV(X).EQ.WINNER)).OR.
&		((WEIGHT(0,OBJ,WINNER)+OSIZE(OBJ)).LE.MXLOAD))
&		GO TO 3700
	CALL RSPEAK(558)			!TOO BIG.
	RETURN
C
3700	CALL NEWSTA(OBJ,559,0,0,WINNER)		!DO TAKE.
	OFLAG2(OBJ)=OFLAG2(OBJ).OR.TCHBT	!TOUCHED.
	CALL SCRUPD(OFVAL(OBJ))
	OFVAL(OBJ)=0
C
4000	TAKEIT=.TRUE.				!SUCCESS.
	RETURN
C
	END
C GWIM- GET WHAT I MEAN IN AMBIGOUS SITUATIONS
C
C DECLARATIONS
C
	INTEGER FUNCTION GWIM(SFLAG,SFW1,SFW2)
	IMPLICIT INTEGER(A-Z)
	LOGICAL TAKEIT,NOCARE
C
	COMMON /OBJFLG/ VABIT,VRBIT,VTBIT,VCBIT,VEBIT,VFBIT,VPMASK
	COMMON /STAR/ MBASE,STRBIT
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C GWIM, PAGE 2
C
	GWIM=-1					!ASSUME LOSE.
	AV=AVEHIC(WINNER)
	NOBJ=0
	NOCARE=(SFLAG.AND.VCBIT).EQ.0
C
C FIRST SEARCH ADVENTURER
C
	IF((SFLAG.AND.VABIT).NE.0)
&		NOBJ=FWIM(SFW1,SFW2,0,0,WINNER,NOCARE)
	IF((SFLAG.AND.VRBIT).NE.0) GO TO 100
50	GWIM=NOBJ
	RETURN
C
C ALSO SEARCH ROOM
C
100	ROBJ=FWIM(SFW1,SFW2,HERE,0,0,NOCARE)
	IF(ROBJ) 500,50,200			!TEST RESULT.
C
C ROBJ > 0
C
200	IF((AV.EQ.0).OR.(ROBJ.EQ.AV).OR.
&		((OFLAG2(ROBJ).AND.FINDBT).NE.0)) GO TO 300
	IF(OCAN(ROBJ).NE.AV) GO TO 50		!UNREACHABLE? TRY NOBJ
300	IF(NOBJ.NE.0) RETURN			!IF AMBIGUOUS, RETURN.
	IF(.NOT.TAKEIT(ROBJ,SFLAG)) RETURN	!IF UNTAKEABLE, RETURN
	GWIM=ROBJ
500	RETURN
C
	END
C CLOCKD- CLOCK DEMON FOR INTERMOVE CLOCK EVENTS
C
C DECLARATIONS
C
	LOGICAL FUNCTION CLOCKD(X)
	IMPLICIT INTEGER (A-Z)
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	CLOCKD=.FALSE.			!ASSUME NO ACTION.
	DO 100 I=1,CLNT
	  IF(.NOT.CFLAG(I) .OR.(CTICK(I).EQ.0)) GO TO 100
	  IF(CTICK(I).LT.0) GO TO 50		!PERMANENT ENTRY?
	  CTICK(I)=CTICK(I)-1
	  IF(CTICK(I).NE.0) GO TO 100		!TIMER EXPIRED?
50	  CLOCKD=.TRUE.
	  CALL CEVAPP(CACTIO(I))		!DO ACTION.
100	CONTINUE
	RETURN
C
	END
    C OAPPLI- OBJECT SPECIAL ACTION ROUTINES
C
C DECLARATIONS
C
	LOGICAL FUNCTION OAPPLI(RI,ARG)
	IMPLICIT INTEGER (A-Z)
	LOGICAL SOBJS,NOBJS
	LOGICAL QOPEN,QON,LIT
	LOGICAL MOVETO,RMINFO,CLOCKD
	LOGICAL THIEFP,CYCLOP,TROLLP,BALLOP,LIGHTP
	LOGICAL QEMPTY,QHERE,F,OPNCLS
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
	COMMON /BATS/ BATDRP(9)
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL

C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	QOPEN(R)=(OFLAG2(R).AND.OPENBT).NE.0
	QON(R)=(OFLAG1(R).AND.ONBT).NE.0
	DATA MXSMP/99/
C OAPPLI, PAGE 2
C
	IF(RI.EQ.0) GO TO 10			!ZERO IS FALSE APP.
	IF(RI.LE.MXSMP) GO TO 100		!SIMPLE OBJECT?
	IF(PRSO.NE.0) ODO2=ODESC2(PRSO)
	IF(PRSI.NE.0) ODI2=ODESC2(PRSI)
	AV=AVEHIC(WINNER)
	FLOBTS=FLAMBT+LITEBT+ONBT
	OAPPLI=.TRUE.
C
	GO TO (2000,5000,10000,11000,12000,15000,18000,
&		19000,20000,22000,25000,26000,32000,35000,39000,40000,
&		45000,47000,48000,49000,50000,51000,52000,54000,55000,
&		 56000,57000,58000,59000,60000,61000),
&			(RI-MXSMP)
	CALL BUG(6,RI)
C
C RETURN HERE TO DECLARE FALSE RESULT
C
10	OAPPLI=.FALSE.
	RETURN
C
C SIMPLE OBJECTS, PROCESSED EXTERNALLY.
C
100	IF(RI.LT.32) OAPPLI=SOBJS(RI,ARG)
	IF(RI.GE.32) OAPPLI=NOBJS(RI,ARG)
	RETURN
C OAPPLI, PAGE 3
C
C O100--	MACHINE FUNCTION
C
2000	IF(HERE.NE.MMACH) GO TO 10		!NOT HERE? F
	OAPPLI=OPNCLS(MACHI,123,124)		!HANDLE OPN/CLS.
	RETURN
C
C O101--	WATER FUNCTION
C
5000	IF(PRSA.NE.FILLW) GO TO 5050		!FILL IS
	PRSA=PUTW				!MADE INTO
	I=PRSI
	PRSI=PRSO
	PRSO=I					!PUT WATER IN OBJ.
	I=ODI2
	ODI2=ODO2
	ODO2=I
5050	IF(PRSA.NE.THROWW) GO TO 5100		!THROW?
	CALL NEWSTA(PRSO,132,0,0,0)		!EVAPORATES.
	RETURN
C
5100	IF((PRSA.NE.DROPW).AND.(PRSA.NE.POURW).AND.(PRSA.NE.GIVEW))
&		GO TO 5200			!DROP?
	IF(AV.NE.0) GO TO 5150			!INTO VEHICLE?
	CALL NEWSTA(PRSO,133,0,0,0)		!EVAPORATES.
	RETURN
C
5150	CALL NEWSTA(WATER,0,0,AV,0)		!INTO VEHICLE.
	CALL RSPSUB(296,ODESC2(AV))		!DESCRIBE.
	RETURN
C
5200	IF((PRSA.NE.TAKEW).AND.(PRSA.NE.PUTW)) GO TO 10
	IF((AV.EQ.PRSI).AND.(AV.NE.0)) GO TO 5150
	IF((PRSI.NE.0).AND.(PRSI.NE.BOTTL)) GO TO 5300
	IF(OADV(BOTTL).NE.WINNER) GO TO 5400	!GOT BOTTLE?
	I=612
	IF(.NOT.QOPEN(BOTTL)) GO TO 5250	!BOTTLE OPEN?
	I=613
	IF(.NOT.QEMPTY(BOTTL)) GO TO 5250	!BOTTLE EMPTY?
	I=614
	CALL NEWSTA(WATER,0,0,BOTTL,0)		!WATER INTO BOTTLE
5250	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
5300	CALL RSPSUB(297,ODI2)			!WATER WONT GO
	CALL NEWSTA(PRSO,0,0,0,0)		!EVAPORATES.
	RETURN
C
C BOTTLE NOT ON WINNER.
C
5400	IF((OCAN(WATER).EQ.BOTTL).AND.(PRSA.EQ.TAKEW).AND.
&		(PRSI.EQ.0)) GO TO 5500		!TAKE W IN B?
	CALL RSPEAK(615)			!NO, LOSE.
	RETURN
C
5500	IF(QHERE(BOTTL,HERE)) GO TO 5600	!BOTTLE HERE?
	CALL RSPSUB(566,ODESC2(BOTTL))		!NO, CANT TAKE IT.
	RETURN
C
5600	CALL NEWSTA(BOTTL,559,0,0,WINNER)	!FINALLY, TAKE BOTTLE.
	RETURN
C OAPPLI, PAGE 4
C
C O102--	LEAF PILE
C
10000	IF(PRSA.NE.BURNW) GO TO 10500		!BURN?
	IF(OROOM(PRSO).EQ.0) GO TO 10100	!WAS HE CARRYING?
	CALL NEWSTA(PRSO,158,0,0,0)		!NO, BURN IT.
	RETURN
C
10100	CALL NEWSTA(PRSO,0,HERE,0,0)		!DROP LEAVES.
	CALL JIGSUP(159)			!BURN HIM.
	RETURN
C
10500	IF(PRSA.NE.MOVEW) GO TO 10600		!MOVE?
	CALL RSPEAK(2)				!DONE.
	RETURN
C
10600	IF((PRSA.NE.LOOKUW).OR.(RVCLR.NE.0)) GO TO 10
	CALL RSPEAK(344)			!LOOK UNDER?
	RETURN
C
C O103--	TROLL, DONE EXTERNALLY.
C
11000	OAPPLI=TROLLP(ARG)			!TROLL PROCESSOR.
	RETURN
C
C O104--	RUSTY KNIFE.
C
12000	IF(PRSA.NE.TAKEW) GO TO 12100		!TAKE?
	IF(OADV(SWORD).EQ.WINNER) CALL RSPEAK(160) !PULSE SWORD.
	GO TO 10
C
12100	IF((((PRSA.NE.ATTACW).AND.(PRSA.NE.KILLW)).OR.
&		(PRSI.NE.RKNIF)).AND.
&		(((PRSA.NE.SWINGW).AND.(PRSA.NE.THROWW)).OR.
&			(PRSO.NE.RKNIF))) GO TO 10
	CALL NEWSTA(RKNIF,0,0,0,0)		!KILL KNIFE.
	CALL JIGSUP(161)			!KILL HIM.
	RETURN
C OAPPLI, PAGE 5
C
C O105--	GLACIER
C
15000	IF(PRSA.NE.THROWW) GO TO 15500	!THROW?
	IF(PRSO.NE.TORCH) GO TO 15400		!TORCH?
	CALL NEWSTA(ICE,169,0,0,0)		!MELT ICE.
	ODESC1(TORCH)=174			!MUNG TORCH.
	ODESC2(TORCH)=173
	OFLAG1(TORCH)=OFLAG1(TORCH).AND. .NOT.FLOBTS
	CALL NEWSTA(TORCH,0,STREA,0,0)		!MOVE TORCH.
	GLACRF=.TRUE.				!GLACIER GONE.
	IF(.NOT.LIT(HERE)) CALL RSPEAK(170)	!IN DARK?
	RETURN
C
15400	CALL RSPEAK(171)			!JOKE IF NOT TORCH.
	RETURN
C
15500	IF((PRSA.NE.MELTW).OR.(PRSO.NE.ICE)) GO TO 10
	IF((OFLAG1(PRSI).AND.FLOBTS).EQ.FLOBTS) GO TO 15600
	CALL RSPSUB(298,ODI2)			!CANT MELT WITH THAT.
	RETURN
C
15600	GLACMF=.TRUE.				!PARTIAL MELT.
	IF(PRSI.NE.TORCH) GO TO 15700		!MELT WITH TORCH?
	ODESC1(TORCH)=174			!MUNG TORCH.
	ODESC2(TORCH)=173
	OFLAG1(TORCH)=OFLAG1(TORCH).AND. .NOT.FLOBTS
15700	CALL JIGSUP(172)			!DROWN.
	RETURN
C
C O106--	BLACK BOOK
C
18000	IF(PRSA.NE.OPENW) GO TO 18100		!OPEN?
	CALL RSPEAK(180)			!JOKE.
	RETURN
C
18100	IF(PRSA.NE.CLOSEW) GO TO 18200		!CLOSE?
	CALL RSPEAK(181)
	RETURN
C
18200	IF(PRSA.NE.BURNW) GO TO 10		!BURN?
	CALL NEWSTA(PRSO,0,0,0,0)		!FATAL JOKE.
	CALL JIGSUP(182)
	RETURN
C OAPPLI, PAGE 6
C
C O107--	CANDLES, PROCESSED EXTERNALLY
C
19000	OAPPLI=LIGHTP(CANDL)
	RETURN
C
C O108--	MATCHES, PROCESSED EXTERNALLY
C
20000	OAPPLI=LIGHTP(MATCH)
	RETURN
C
C O109--	CYCLOPS, PROCESSED EXTERNALLY.
C
22000	OAPPLI=CYCLOP(ARG)			!CYCLOPS
	RETURN
C
C O110--	THIEF, PROCESSED EXTERNALLY
C
25000	OAPPLI=THIEFP(ARG)
	RETURN
C
C O111--	WINDOW
C
26000	OAPPLI=OPNCLS(WINDO,208,209)		!OPEN/CLS WINDOW.
	RETURN
C
C O112--	PILE OF BODIES
C
32000	IF(PRSA.NE.TAKEW) GO TO 32500		!TAKE?
	CALL RSPEAK(228)			!CANT.
	RETURN
C
32500	IF((PRSA.NE.BURNW).AND.(PRSA.NE.MUNGW)) GO TO 10
	IF(ONPOLF) RETURN			!BURN OR MUNG?
	ONPOLF=.TRUE.				!SET HEAD ON POLE.
	CALL NEWSTA(HPOLE,0,LLD2,0,0)
	CALL JIGSUP(229)			!BEHEADED.
	RETURN
C
C O113--	VAMPIRE BAT
C
35000	CALL RSPEAK(50)				!TIME TO FLY, JACK.
	F=MOVETO(BATDRP(RND(9)+1),WINNER)	!SELECT RANDOM DEST.
	F=RMINFO(.FALSE.)
	RETURN
C OAPPLI, PAGE 7
C
C O114--	STICK
C
39000	IF(PRSA.NE.WAVEW) GO TO 10		!WAVE?
	IF(HERE.EQ.MRAIN) GO TO 39500		!ON RAINBOW?
	IF((HERE.EQ.POG).OR.(HERE.EQ.FALLS)) GO TO 39200
	CALL RSPEAK(244)			!NOTHING HAPPENS.
	RETURN
C
39200	OFLAG1(POT)=OFLAG1(POT).OR.VISIBT	!MAKE GOLD VISIBLE.
	RAINBF=.NOT. RAINBF			!COMPLEMENT RAINBOW.
	I=245					!ASSUME OFF.
	IF(RAINBF) I=246			!IF ON, SOLID.
	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
39500	RAINBF=.FALSE.				!ON RAINBOW,
	CALL JIGSUP(247)			!TAKE A FALL.
	RETURN
C
C O115--	BALLOON, HANDLED EXTERNALLY
C
40000	OAPPLI=BALLOP(ARG)
	RETURN
C
C O116--	HEADS
C
45000	IF(PRSA.NE.HELLOW) GO TO 45100		!HELLO HEADS?
	CALL RSPEAK(633)			!TRULY BIZARRE.
	RETURN
C
45100	IF(PRSA.EQ.READW) GO TO 10		!READ IS OK.
	CALL NEWSTA(LCASE,260,LROOM,0,0)	!MAKE LARGE CASE.
	I=ROBADV(WINNER,0,LCASE,0)+ROBRM(HERE,100,0,LCASE,0)
	CALL JIGSUP(261)			!KILL HIM.
	RETURN
C OAPPLI, PAGE 8
C
C O117--	SPHERE
C
47000	IF(CAGESF.OR.(PRSA.NE.TAKEW)) GO TO 10	!TAKE?
	IF(WINNER.NE.PLAYER) GO TO 47500	!ROBOT TAKE?
	CALL RSPEAK(263)			!NO, DROP CAGE.
	IF(OROOM(ROBOT).NE.HERE) GO TO 47200	!ROBOT HERE?
	F=MOVETO(CAGED,WINNER)			!YES, MOVE INTO CAGE.
	CALL NEWSTA(ROBOT,0,CAGED,0,0)	!MOVE ROBOT.
	AROOM(AROBOT)=CAGED
	OFLAG1(ROBOT)=OFLAG1(ROBOT).OR.NDSCBT	!DONT DESCRIBE ROBOT.
	CTICK(CEVSPH)=10			!GET OUT IN 10 OR ELSE.
	RETURN
C
47200	CALL NEWSTA(SPHER,0,0,0,0)		!YOURE DEAD.
	RFLAG(CAGER)=RFLAG(CAGER).OR.RMUNG	!MUNG CAGE ROOM.
	RRAND(CAGER)=147
	CALL JIGSUP(148)			!MUNG PLAYER.
	RETURN
C
47500	CALL NEWSTA(SPHER,0,0,0,0)		!ROBOT TRIED,
	CALL NEWSTA(ROBOT,264,0,0,0)		!KILL HIM.
	CALL NEWSTA(CAGE,0,HERE,0,0)		!INSERT MANGLED CAGE.
	RETURN
C
C O118--	GEOMETRICAL BUTTONS
C
48000	IF(PRSA.NE.PUSHW) GO TO 10		!PUSH?
	I=PRSO-SQBUT+1				!GET BUTTON INDEX.
	IF((I.LE.0).OR.(I.GE.4)) GO TO 10	!A BUTTON?
	IF(WINNER.NE.PLAYER) GO TO (48100,48200,48300),I
	CALL JIGSUP(265)			!YOU PUSHED, YOU DIE.
	RETURN
C
48100	I=267
	IF(CAROZF) I=266			!SPEED UP?
	CAROZF=.TRUE.
	CALL RSPEAK(I)
	RETURN
C
48200	I=266					!ASSUME NO CHANGE.
	IF(CAROZF) I=268
	CAROZF=.FALSE.
	CALL RSPEAK(I)
	RETURN
C
48300	CAROFF=.NOT.CAROFF			!FLIP CAROUSEL.
	IF(.NOT.QHERE(IRBOX,CAROU)) RETURN	!IRON BOX IN CAROUSEL?
	CALL RSPEAK(269)			!YES, THUMP.
	OFLAG1(IRBOX)=OFLAG1(IRBOX).XOR.VISIBT	!COMPLEMENT VISIBILITY.
	IF(CAROFF) RFLAG(CAROU)=RFLAG(CAROU).AND. .NOT.RSEEN
	RETURN
C
C O119--	FLASK FUNCTION
C
49000	IF(PRSA.EQ.OPENW) GO TO 49100		!OPEN?
	IF((PRSA.NE.MUNGW).AND.(PRSA.NE.THROWW)) GO TO 10
	CALL NEWSTA(FLASK,270,0,0,0)		!KILL FLASK.
49100	RFLAG(HERE)=RFLAG(HERE).OR.RMUNG	!MUNG ROOM.
	RRAND(HERE)=271
	CALL JIGSUP(272)			!POISONED.
	RETURN
C
C O120--	BUCKET FUNCTION
C
50000	IF(ARG.NE.2) GO TO 10			!READOUT?
	IF((OCAN(WATER).NE.BUCKE).OR.BUCKTF) GO TO 50500
	BUCKTF=.TRUE.				!BUCKET AT TOP.
	CTICK(CEVBUC)=100			!START COUNTDOWN.
	CALL NEWSTA(BUCKE,290,TWELL,0,0)	!REPOSITION BUCKET.
	GO TO 50900				!FINISH UP.
C
50500	IF((OCAN(WATER).EQ.BUCKE).OR..NOT.BUCKTF) GO TO 10
	BUCKTF=.FALSE.
	CALL NEWSTA(BUCKE,291,BWELL,0,0)	!BUCKET AT BOTTOM.
50900	IF(AV.NE.BUCKE) RETURN			!IN BUCKET?
	F=MOVETO(OROOM(BUCKE),WINNER)	!MOVE ADVENTURER.
	F=RMINFO(.FALSE.)			!DESCRIBE ROOM.
	RETURN
C OAPPLI, PAGE 9
C
C O121--	EATME CAKE
C
51000	IF((PRSA.NE.EATW).OR.(PRSO.NE.ECAKE).OR.
&		(HERE.NE.ALICE)) GO TO 10	!EAT CAKE IN ALICEROOM?
	CALL NEWSTA(ECAKE,273,0,0,0)		!VANISH CAKE.
	OFLAG1(ROBOT)=OFLAG1(ROBOT).AND. .NOT.VISIBT	!VANISH ROBOT.
	DO 51100 I=1,OLNT			!MAKE OBJECTS BIG.
	  IF((OROOM(I).NE.ALICE).OR.(OSIZE(I).EQ.10000))
&		GO TO 51100
	  OSIZE(I)=OSIZE(I)*64
	  OROOM(I)=ALISM
51100	CONTINUE
	OAPPLI=MOVETO(ALISM,WINNER)		!MOVE TO ALICE SMALL.
	RETURN
C
C O122--	ICINGS
C
52000	IF(PRSA.NE.READW) GO TO 52200		!READ?
	I=274					!CANT READ.
	IF(PRSI.NE.0) I=275			!THROUGH SOMETHING?
	IF(PRSI.EQ.BOTTL) I=276			!THROUGH BOTTLE?
	IF(PRSI.EQ.FLASK) I=277+(PRSO-ORICE)	!THROUGH FLASK?
	CALL RSPEAK(I)				!READ FLASK.
	RETURN
C
52200	IF((PRSA.NE.THROWW).OR.(PRSO.NE.RDICE).OR.(PRSI.NE.POOL))
&		GO TO 52300			!THROW RDICE AT POOL?
	CALL NEWSTA(POOL,280,0,0,0)		!VANISH POOL.
	OFLAG1(SAFFR)=OFLAG1(SAFFR).OR.VISIBT	!MATERIALIZE SPICES.
	RETURN
C
52300	IF((HERE.NE.ALICE).AND.(HERE.NE.ALISM).AND.(HERE.NE.ALITR))
&		GO TO 10			!IN WONDERLAND?
	IF(((PRSA.NE.EATW).AND.(PRSA.NE.THROWW)).OR.
&		(PRSO.NE.ORICE)) GO TO 52400	!THROW ORANGE ICE?
	CALL NEWSTA(ORICE,0,0,0,0)		!VANISH ORANGE ICE.
	RFLAG(HERE)=RFLAG(HERE).OR.RMUNG	!VANISH ROOM.
	RRAND(HERE)=281
	CALL JIGSUP(282)			!VANISH ADVENTURER.
	RETURN
C
52400	IF((PRSA.NE.EATW).OR.(PRSO.NE.BLICE))
&		GO TO 10			!EAT BLUE ICE?
	CALL NEWSTA(BLICE,283,0,0,0)		!VANISH BLUE ICE.
	IF(HERE.NE.ALISM) GO TO 52500		!IN REDUCED ROOM?
	OFLAG1(ROBOT)=OFLAG1(ROBOT).OR.VISIBT	!MATERIALIZE ROBOT.
	DO 52450 I=1,OLNT			!ENLARGE WORLD.
	  IF((OROOM(I).NE.HERE).OR.(OSIZE(I).EQ.10000))
&		GO TO 52450
	  OROOM(I)=ALICE
	  OSIZE(I)=OSIZE(I)/64
52450	CONTINUE
	OAPPLI=MOVETO(ALICE,WINNER)		!RETURN
	RETURN
C
52500	CALL JIGSUP(284)			!ENLARGED IN WRONG ROOM.
	RETURN
C
C O123--	BRICK
C
54000	IF(PRSA.NE.BURNW) GO TO 10		!BURN?
	CALL JIGSUP(150)			!BOOM!
	RETURN
C
C O124--	MYSELF
C
55000	IF(PRSA.NE.GIVEW) GO TO 55100		!GIVE?
	CALL NEWSTA(PRSO,2,0,0,PLAYER)		!DONE.
	RETURN
C
55100	IF(PRSA.NE.TAKEW) GO TO 55200		!TAKE?
	CALL RSPEAK(286)			!JOKE.
	RETURN
C
55200	IF((PRSA.NE.KILLW).AND.(PRSA.NE.MUNGW)) GO TO 10
	CALL JIGSUP(287)			!KILL, NO JOKE.
	RETURN
C OAPPLI, PAGE 10
C
C O125--	PANELS INSIDE MIRROR
C
56000	IF(PRSA.NE.PUSHW) GO TO 10		!PUSH?
	IF(POLEUF.NE.0) GO TO 56100		!SHORT POLE UP?
	I=731					!NO, WONT BUDGE.
	IF(MOD(MDIR,180).EQ.0) I=732		!DIFF MSG IF N-S.
	CALL RSPEAK(I)				!TELL WONT MOVE.
	RETURN
C
56100	IF(MLOC.NE.MRG) GO TO 56200		!IN GDN ROOM?
	CALL RSPEAK(733)			!YOU LOSE.
	CALL JIGSUP(685)
	RETURN
C
56200	I=831					!ROTATE L OR R.
	IF((PRSO.EQ.RDWAL).OR.(PRSO.EQ.YLWAL)) I=830
	CALL RSPEAK(I)				!TELL DIRECTION.
	MDIR=MOD(MDIR+45+(270*(I-830)),360)	!CALCULATE NEW DIR.
	CALL RSPSUB(734,695+(MDIR/45))		!TELL NEW DIR.
	IF(WDOPNF) CALL RSPEAK(730)		!IF PANEL OPEN, CLOSE.
	WDOPNF=.FALSE.
	RETURN					!DONE.
C
C O126--	ENDS INSIDE MIRROR
C
57000	IF(PRSA.NE.PUSHW) GO TO 10		!PUSH?
	IF(MOD(MDIR,180).EQ.0) GO TO 57100	!MIRROR N-S?
	CALL RSPEAK(735)			!NO, WONT BUDGE.
	RETURN
C
57100	IF(PRSO.NE.PINDR) GO TO 57300		!PUSH PINE WALL?
	IF(((MLOC.EQ.MRC).AND.(MDIR.EQ.180)).OR.
&		((MLOC.EQ.MRD).AND.(MDIR.EQ.0)).OR.
&		(MLOC.EQ.MRG)) GO TO 57200		!IN VIEW OF GDN?
	CALL RSPEAK(736)			!NO, OPENS.
	WDOPNF=.TRUE.				!INDICATE OPEN.
	CFLAG(CEVPIN)=.TRUE.			!TIME OPENING.
	CTICK(CEVPIN)=5
	RETURN
C
57200	CALL RSPEAK(737)			!GDN SEES YOU, DIE.
	CALL JIGSUP(685)
	RETURN
C
57300	NLOC=MLOC-1				!NEW LOC IF SOUTH.
	IF(MDIR.EQ.0) NLOC=MLOC+1		!NEW LOC IF NORTH.
	IF((NLOC.GE.MRA).AND.(NLOC.LE.MRD)) GO TO 57400
	CALL RSPEAK(738)			!HAVE REACHED END.
	RETURN
C
57400	I=699					!ASSUME SOUTH.
	IF(MDIR.EQ.0) I=695			!NORTH.
	J=739					!ASSUME SMOOTH.
	IF(POLEUF.NE.0) J=740			!POLE UP, WOBBLES.
	CALL RSPSUB(J,I)			!DESCRIBE.
	MLOC=NLOC
	IF(MLOC.NE.MRG) RETURN			!NOW IN GDN ROOM?
C
	IF(POLEUF.NE.0) GO TO 57500		!POLE UP, GDN SEES.
	IF(MROPNF.OR.WDOPNF) GO TO 57600	!DOOR OPEN, GDN SEES.
	IF(MR1F.AND.MR2F) RETURN		!MIRRORS INTACT, OK.
	CALL RSPEAK(742)			!MIRRORS BROKEN, DIE.
	CALL JIGSUP(743)
	RETURN
C
57500	CALL RSPEAK(741)			!POLE UP, DIE.
	CALL JIGSUP(743)
	RETURN
C
57600	CALL RSPEAK(744)			!DOOR OPEN, DIE.
	CALL JIGSUP(743)
	RETURN
C OAPPLI, PAGE 11
C
C O127--	GLOBAL GUARDIANS
C
58000	IF((PRSA.NE.ATTACW).AND.(PRSA.NE.KILLW).AND.
&		(PRSA.NE.MUNGW)) GO TO 58100		!AGGRESSIVE?
	CALL JIGSUP(745)			!LOSE.
	RETURN
C
58100	IF(PRSA.NE.HELLOW) GO TO 10		!HELLO?
	CALL RSPEAK(746)			!NO REPLY.
	RETURN
C
C O128--	GLOBAL MASTER
C
59000	IF((PRSA.NE.ATTACW).AND.(PRSA.NE.KILLW).AND.
&		(PRSA.NE.MUNGW)) GO TO 59100		!AGGRESSIVE?
	CALL JIGSUP(747)			!BAD IDEA.
	RETURN
C
59100	IF(PRSA.NE.TAKEW) GO TO 10		!TAKE?
	CALL RSPEAK(748)			!JOKE.
	RETURN
C
C O129--	NUMERAL FIVE (FOR JOKE)
C
60000	IF(PRSA.NE.TAKEW) GO TO 10		!TAKE FIVE?
	CALL RSPEAK(419)			!TIME PASSES.
	DO 60100 I=1,3				!WAIT A WHILE.
	  IF(CLOCKD(X)) RETURN
60100	CONTINUE
	RETURN
C
C O130--	CRYPT FUNCTION
C
61000	IF(.NOT.ENDGMF) GO TO 45000		!IF NOT EG, DIE.
	IF(PRSA.NE.OPENW) GO TO 61100		!OPEN?
	I=793
	IF(QOPEN(TOMB)) I=794
	CALL RSPEAK(I)
	OFLAG2(TOMB)=OFLAG2(TOMB).OR.OPENBT	!NOW TOMB WITH VIEW.
	RETURN
C
61100	IF(PRSA.NE.CLOSEW) GO TO 45000		!CLOSE?
	I=795
	IF(QOPEN(TOMB)) I=796
	CALL RSPEAK(I)
	OFLAG2(TOMB)=OFLAG2(TOMB).AND..NOT.OPENBT
	IF(HERE.EQ.CRYPT) CTICK(CEVSTE)=3	!IF IN CRYPT, START EG.
	RETURN
C
	END
  C SVERBS-	SIMPLE VERBS PROCESSOR
C	ALL VERBS IN THIS ROUTINE MUST BE INDEPENDANT
C	OF OBJECT ACTIONS
C
C DECLARATIONS
C
	LOGICAL FUNCTION SVERBS(RI)
	IMPLICIT INTEGER (A-Z)
	LOGICAL MOVETO,YESNO
	LOGICAL RMINFO
	LOGICAL QOPEN
	LOGICAL FINDXT,QHERE,F
	INTEGER JOKES(20)
	LOGICAL ANSSTR(78)
	LOGICAL P1(6),P2(6),CH(6)
	INTEGER ANSWER(28)
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	common /spare/ccflg
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C SCREEN OF LIGHT
C
	COMMON /SCREEN/ FROMDR,SCOLRM,SCOLAC
	COMMON /SCREEN/ SCOLDR(8),SCOLWL(12)
C
C MISCELLANEOUS VARIABLES
C
	LOGICAL INBUF
	COMMON /INPUT/ INLNT,INBUF(78)
	COMMON /VERS/ VMAJ,VMIN,VEDIT
	COMMON /CHAN/ INPCH,OUTCH,DBCH
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C EXITS
C
	COMMON /EXITS/ XLNT,TRAVEL(870)
C
	COMMON /CURXT/ XTYPE,XROOM1,XSTRNG,XACTIO,XOBJ
	EQUIVALENCE (XFLAG,XOBJ)
C
	COMMON /XPARS/ XRMASK,XDMASK,XFMASK,XFSHFT,XASHFT,
&		XELNT(4),XNORM,XNO,XCOND,XDOOR,XLFLAG
C
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL

C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL flags(50)
	EQUIVALENCE (FLAGS(1),TROLLF)
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	QOPEN(R)=(OFLAG2(R).AND.OPENBT).NE.0
	DATA MXNOP/49/,MXJOKE/69/
	DATA JOKES/4,5,3,304,305,306,307,308,309,310,
&		311,312,313,5314,5319,324,325,0,0,0/
	DATA ANSWER/0,6,1,6,2,5,3,5,4,3,4,6,4,6,4,5,
&		5,5,5,4,5,6,6,10,7,4,7,6/
	DATA ANSSTR/'T','E','M','P','L','E',
&		'F','O','R','E','S','T',
&		'3','0','0','0','3',
&			'F','L','A','S','K',
&		'R','U','B',
&		'F','O','N','D','L','E',
&		'C','A','R','R','E','S',
&		'T','O','U','C','H',
&		'B','O','N','E','S',
&		'B','O','D','Y',
&		'S','K','E','L','E','T',
&		'R','U','S','T','Y','K','N','I','F','E',
&			'N','O','N','E',
&		'N','O','W','H','E','R',0/
C SVERBS, PAGE 2
C
	SVERBS=.TRUE.				!ASSUME WINS.
	IF(PRSO.NE.0) ODO2=ODESC2(PRSO)		!SET UP DESCRIPTORS.
	IF(PRSI.NE.0) ODI2=ODESC2(PRSI)
C
	IF(RI.EQ.0) CALL BUG(7,RI)		!ZERO IS VERBOTEN.
	IF(RI.LE.MXNOP) RETURN			!NOP?
	IF(RI.LE.MXJOKE) GO TO 100		!JOKE?
	GO TO (1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,
&		11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,
&		 21000,22000,23000,24000,25000,26000,27000,28000),
&		(RI-MXJOKE)
	CALL BUG(7,RI)
C
C ALL VERB PROCESSORS RETURN HERE TO DECLARE FAILURE.
C
10	SVERBS=.FALSE.				!LOSE.
	RETURN
C
C JOKE PROCESSOR.
C FIND PROPER ENTRY IN JOKES, USE IT TO SELECT STRING TO PRINT.
C
100	I=JOKES(RI-MXNOP)			!GET TABLE ENTRY.
	J=I/1000				!ISOLATE # STRINGS.
	IF(J.NE.0) I=MOD(I,1000)+RND(J)		!IF RANDOM, CHOOSE.
	CALL RSPEAK(I)				!PRINT JOKE.
	RETURN
C SVERBS, PAGE 3
C
C V70--	BRIEF.  SET FLAG.
C
1000	BRIEFF=.TRUE.				!BRIEF DESCRIPTIONS.
	SUPERF=.FALSE.
	CALL RSPEAK(326)
	RETURN
C
C V71--	VERBOSE.  CLEAR FLAGS.
C
2000	BRIEFF=.FALSE.				!LONG DESCRIPTIONS.
	SUPERF=.FALSE.
	CALL RSPEAK(327)
	RETURN
C
C V72--	SUPERBRIEF.  SET FLAG.
C
3000	SUPERF=.TRUE.
	CALL RSPEAK(328)
	RETURN
C
C V73-- STAY (USED IN ENDGAME).
C
4000	IF(WINNER.NE.AMASTR) GO TO 4100		!TELL MASTER, STAY.
	CALL RSPEAK(781)			!HE DOES.
	CTICK(CEVFOL)=0				!NOT FOLLOWING.
	RETURN
C
4100	IF(WINNER.EQ.PLAYER) CALL RSPEAK(664)	!JOKE.
	RETURN
C
C V74--	VERSION.  PRINT INFO.
C
5000	WRITE(OUTCH,5010) VMAJ,VMIN,VEDIT
5010	FORMAT(' V',I1,'.',I2,A1)
	ccflg=.false.
	TELFLG=.TRUE.
	RETURN
C
C V75--	SWIM.  ALWAYS A JOKE.
C
6000	I=330					!ASSUME WATER.
	IF((RFLAG(HERE).AND.(RWATER+RFILL)).EQ.0)
&		I=331+RND(3)			!IF NO WATER, JOKE.
	CALL RSPEAK(I)
	RETURN
C
C V76--	GERONIMO.  IF IN BARREL, FATAL, ELSE JOKE.
C
7000	IF(HERE.EQ.MBARR) GO TO 7100		!IN BARREL?
	CALL RSPEAK(334)			!NO, JOKE.
	RETURN
C
7100	CALL JIGSUP(335)			!OVER FALLS.
	RETURN
C
C V77--	SINBAD ET AL.  CHASE CYCLOPS, ELSE JOKE.
C
8000	IF((HERE.EQ.MCYCL).AND.QHERE(CYCLO,HERE)) GO TO 8100
	CALL RSPEAK(336)			!NOT HERE, JOKE.
	RETURN
C
8100	CALL NEWSTA(CYCLO,337,0,0,0)		!CYCLOPS FLEES.
	CYCLOF=.TRUE.				!SET ALL FLAGS.
	MAGICF=.TRUE.
	OFLAG2(CYCLO)=OFLAG2(CYCLO).AND. .NOT.FITEBT
	RETURN
C
C V78--	WELL.  OPEN DOOR, ELSE JOKE.
C
9000	IF(RIDDLF.OR.(HERE.NE.RIDDL)) GO TO 9100 !IN RIDDLE ROOM?
	RIDDLF=.TRUE.				!YES, SOLVED IT.
	CALL RSPEAK(338)
	RETURN
C
9100	CALL RSPEAK(339)			!WELL, WHAT?
	RETURN
C
C V79--	PRAY.  IF IN TEMP2, POOF!
C
10000	IF(HERE.NE.TEMP2) GO TO 10050		!IN TEMPLE?
	IF(MOVETO(FORE1,WINNER)) GO TO 10100	!FORE1 STILL THERE?
10050	CALL RSPEAK(340)			!JOKE.
	RETURN
C
10100	F=RMINFO(.TRUE.)			!MOVED, DESCRIBE.
	RETURN
C
C V80--	TREASURE.  IF IN TEMP1, POOF!
C
11000	IF(HERE.NE.TEMP1) GO TO 11050	!IN TEMPLE?
	IF(MOVETO(TREAS,WINNER)) GO TO 10100	!TREASURE ROOM THERE?
11050	CALL RSPEAK(341)			!NOTHING HAPPENS.
	RETURN
C
C V81--	TEMPLE.  IF IN TREAS, POOF!
C
12000	IF(HERE.NE.TREAS) GO TO 12050		!IN TREASURE?
	IF(MOVETO(TEMP1,WINNER)) GO TO 10100	!TEMP1 STILL THERE?
12050	CALL RSPEAK(341)			!NOTHING HAPPENS.
	RETURN
C
C V82--	BLAST.  USUALLY A JOKE.
C
13000	I=342					!DONT UNDERSTAND.
	IF(PRSO.EQ.SAFE) I=252			!JOKE FOR SAFE.
	CALL RSPEAK(I)
	RETURN
C
C V83--	SCORE.  PRINT SCORE.
C
14000	CALL SCORE(.FALSE.)
	RETURN
C
C V84--	QUIT.  FINISH OUT THE GAME.
C
15000	CALL SCORE(.TRUE.)			!TELLL SCORE.
	IF(.NOT.YESNO(343,0,0)) RETURN		!ASK FOR Y/N DECISION.
	CLOSE (UNIT=DBCH,DISPOSE='SAVE')	!CLEAN UP.
	CALL EXIT				!BYE.
C SVERBS, PAGE 4
C
C V85--	FOLLOW (USED IN ENDGAME)
C
16000	IF(WINNER.NE.AMASTR) RETURN		!TELL MASTER, FOLLOW.
	CALL RSPEAK(782)
	CTICK(CEVFOL)=-1			!STARTS FOLLOWING.
	RETURN
C
C V86--	WALK THROUGH
C
17000	IF((SCOLRM.EQ.0).OR.((PRSO.NE.SCOL).AND.
&		((PRSO.NE.WNORT).OR.(HERE.NE.BKBOX)))) GO TO 17100
	SCOLAC=SCOLRM				!WALKED THRU SCOL.
	PRSO=0					!FAKE OUT FROMDR.
	CTICK(CEVSCL)=6				!START ALARM.
	CALL RSPEAK(668)			!DISORIENT HIM.
	F=MOVETO(SCOLRM,WINNER)			!INTO ROOM.
	F=RMINFO(.TRUE.)			!DESCRIBE.
	RETURN
C
17100	IF(HERE.NE.SCOLAC) GO TO 17300		!ON OTHER SIDE OF SCOL?
	DO 17200 I=1,12,3			!WALK THRU PROPER WALL?
	  IF((SCOLWL(I).EQ.HERE).AND.(SCOLWL(I+1).EQ.PRSO))
&		GO TO 17500			!IN SPECIFIED ROOM?
17200	CONTINUE
C
17300	IF((OFLAG1(PRSO).AND.TAKEBT).NE.0) GO TO 17400	!TKBLE?
	I=669					!NO, JOKE.
	IF(PRSO.EQ.SCOL) I=670			!SPECIAL JOKE FOR SCOL.
	CALL RSPSUB(I,ODO2)
	RETURN
C
17400	I=671					!JOKE.
	IF(OROOM(PRSO).NE.0) I=552+RND(5)	!SPECIAL JOKES IF CARRY.
	CALL RSPEAK(I)
	RETURN
C
17500	PRSO=SCOLWL(I+2)			!THRU SCOL WALL...
	DO 17600 I=1,8,2			!FIND MATCHING ROOM.
	  IF(PRSO.EQ.SCOLDR(I)) SCOLRM=SCOLDR(I+1)
17600	CONTINUE				!DECLARE NEW SCOLRM.
	CTICK(CEVSCL)=0				!CANCEL ALARM.
	CALL RSPEAK(668)			!DISORIENT HIM.
	F=MOVETO(BKBOX,WINNER)			!BACK IN BOX ROOM.
	F=RMINFO(.TRUE.)
	RETURN
C
C V87--	RING.  A JOKE.
C
18000	I=359					!CANT RING.
	IF(PRSO.EQ.BELL) I=360			!DING, DONG.
	CALL RSPEAK(I)				!JOKE.
	RETURN
C
C V88--	BRUSH.  JOKE WITH OBSCURE TRAP.
C
19000	IF(PRSO.EQ.TEETH) GO TO 19100		!BRUSH TEETH?
	CALL RSPEAK(362)			!NO, JOKE.
	RETURN
C
19100	IF(PRSI.NE.0) GO TO 19200		!WITH SOMETHING?
	CALL RSPEAK(363)			!NO, JOKE.
	RETURN
C
19200	IF((PRSI.EQ.PUTTY).AND.(OADV(PUTTY).EQ.WINNER))
&		GO TO 19300			!WITH PUTTY?
	CALL RSPSUB(364,ODI2)			!NO, JOKE.
	RETURN
C
19300	CALL JIGSUP(365)			!YES, DEAD!!!!!
	RETURN
C SVERBS, PAGE 5
C
C V89--	DIG.  UNLESS SHOVEL, A JOKE.
C
20000	IF(PRSO.EQ.SHOVE) RETURN		!SHOVEL?
	I=392					!ASSUME TOOL.
	IF((OFLAG1(PRSO).AND.TOOLBT).EQ.0) I=393
	CALL RSPSUB(I,ODO2)
	RETURN
C
C V90--	TIME.  PRINT OUT DURATION OF GAME.
C
21000	CALL GTTIME(K)			!GET PLAY TIME.
	I=K/60
	J=MOD(K,60)
	WRITE(OUTCH,21010)
	IF(I.NE.0) WRITE(OUTCH,21011) I
	IF(I.GE.2) WRITE(OUTCH,21012)
	IF(I.EQ.1) WRITE(OUTCH,21013)
	IF(J.EQ.1) WRITE(OUTCH,21014) J
	IF(J.NE.1) WRITE(OUTCH,21015) J
	ccflg=.false.
	TELFLG=.TRUE.
	RETURN
C
21010	FORMAT(' You have been playing Dungeon for ',$)
21011	FORMAT('+',I3,' hour',$)
21012	FORMAT('+s and ',$)
21013	FORMAT('+ and ',$)
21014	FORMAT('+',I2,' minute.')
21015	FORMAT('+',I2,' minutes.')
C
C V91--	LEAP.  USUALLY A JOKE, WITH A CATCH.
C
22000	IF(PRSO.EQ.0) GO TO 22200		!OVER SOMETHING?
	IF(QHERE(PRSO,HERE)) GO TO 22100	!HERE?
	CALL RSPEAK(447)			!NO, JOKE.
	RETURN
C
22100	IF((OFLAG2(PRSO).AND.VILLBT).EQ.0) GO TO 22300
	CALL RSPSUB(448,ODO2)			!CANT JUMP VILLAIN.
	RETURN
C
22200	IF(.NOT.FINDXT(XDOWN,HERE)) GO TO 22300	!DOWN EXIT?
	IF((XTYPE.EQ.XNO).OR.((XTYPE.EQ.XCOND).AND.
&		.NOT.FLAGS(XFLAG))) GO TO 22400	!BLOCKED OFF?
22300	CALL RSPEAK(314+RND(5))			!WHEEEE!
	RETURN
C
22400	CALL JIGSUP(449+RND(4))			!FATAL LEAP.
	RETURN
C SVERBS, PAGE 6
C
C V92--	LOCK.
C
23000	IF((PRSO.EQ.GRATE).AND.(HERE.EQ.MGRAT))
&		GO TO 23200
23100	CALL RSPEAK(464)			!NOT LOCK GRATE.
	RETURN
C
23200	GRUNLF=.FALSE.				!GRATE NOW LOCKED.
	CALL RSPEAK(214)
	TRAVEL(REXIT(HERE)+1)=214		!CHANGE EXIT STATUS.
	RETURN
C
C V93--	UNLOCK
C
24000	IF((PRSO.NE.GRATE).OR.(HERE.NE.MGRAT))
&		GO TO 23100			!NOT UNLOCK GRATE.
	IF(PRSI.EQ.KEYS) GO TO 24200		!GOT KEYS?
	CALL RSPSUB(465,ODI2)			!NO, JOKE.
	RETURN
C
24200	GRUNLF=.TRUE.				!UNLOCK GRATE.
	CALL RSPEAK(217)
	TRAVEL(REXIT(HERE)+1)=217		!CHANGE EXIT STATUS.
	RETURN
C
C V94--	DIAGNOSE.
C
25000	I=FIGHTS(WINNER,.FALSE.)		!GET FIGHTS STRENGTH.
	J=ASTREN(WINNER)			!GET HEALTH.
	K=MIN0(I+J,4)				!GET STATE.
	IF(.NOT.CFLAG(CEVCUR)) J=0		!IF NO WOUNDS.
	L=MIN0(4,IABS(J))			!SCALE.
	CALL RSPEAK(473+L)			!DESCRIBE HEALTH.
	I=(30*(-J-1))+CTICK(CEVCUR)		!COMPUTE WAIT.
	IF(J.NE.0) WRITE(OUTCH,25100) I
25100	FORMAT(' You will be cured after ',I3,' moves.')
	ccflg=.false.
	CALL RSPEAK(478+K)			!HOW MUCH MORE?
	IF(DEATHS.NE.0) CALL RSPEAK(482+DEATHS)	!HOW MANY DEATHS?
	RETURN
C SVERBS, PAGE 7
C
C V95--	INCANT
C
26000	DO 26100 I=1,6				!SET UP PARSE.
	  P1(I)=' '
	  P2(I)=' '
26100	CONTINUE
	WP=1					!WORD POINTER.
	CP=1					!CHAR POINTER.
	IF((PRSCON.LE.1).OR.(PRSCON.GT.INLNT)) GO TO 26300
	DO 26200 I=PRSCON,INLNT			!PARSE INPUT
	  IF(INBUF(I).EQ.',') GO TO 26300	!END OF PHRASE?
	  IF(INBUF(I).NE.' ') GO TO 26150	!SPACE?
	  IF(CP.NE.1) WP=WP+1
	  CP=1
	  GO TO 26200
26150	  IF(WP.EQ.1) P1(CP)=INBUF(I)		!STUFF INTO HOLDER.
	  IF(WP.EQ.2) P2(CP)=INBUF(I)
	  CP=MIN0(CP+1,6)
26200	CONTINUE
C
26300	PRSCON=1				!KILL REST OF LINE.
	IF(P1(1).NE.' ') GO TO 26400		!ANY INPUT?
	CALL RSPEAK(856)			!NO, HO HUM.
	RETURN
C
26400	CALL ENCRYP(P1,CH)			!COMPUTE RESPONSE.
	IF(P2(1).NE.' ') GO TO 26600	!TWO PHRASES?
C
	IF(SPELLF) GO TO 26550			!HE'S TRYING TO LEARN.
	IF((RFLAG(MRANT).AND.RSEEN).NE.0) GO TO 26575
	SPELLF=.TRUE.				!TELL HIM.
	TELFLG=.TRUE.
	WRITE(OUTCH,26510) P1,CH
26510	FORMAT(' A hollow voice replies:  "',6A1,1X,6A1,'".')
	ccflg=.false.
	RETURN
C
26550	CALL RSPEAK(857)			!HE'S GOT ONE ALREADY.
	RETURN
C
26575	CALL RSPEAK(858)			!HE'S NOT IN ENDGAME.
	RETURN
C
26600	IF((RFLAG(TSTRS).AND.RSEEN).NE.0) GO TO 26800
	DO 26700 I=1,6
	  IF(P2(I).NE.CH(I)) GO TO 26575	!WRONG.
26700	CONTINUE
	SPELLF=.TRUE.				!IT WORKS.
	CALL RSPEAK(859)
	CTICK(CEVSTE)=1				!FORCE START.
	RETURN
C
26800	CALL RSPEAK(855)			!TOO LATE.
	RETURN
C SVERBS, PAGE 8
C
C V96--	ANSWER
C
27000	IF((PRSCON.GT.1).AND.(PRSCON.LE.INLNT).AND.
&		(HERE.EQ.FDOOR).AND.INQSTF)
&		GO TO 27100
	CALL RSPEAK(799)			!NO ONE LISTENS.
	PRSCON=1
	RETURN
C
27100	K=1					!POINTER INTO ANSSTR.
	DO 27300 J=1,28,2			!CHECK ANSWERS.
	  NEWK=K+ANSWER(J+1)			!COMPUTE NEXT K.
	  IF(QUESNO.NE.ANSWER(J)) GO TO 27300	!ONLY CHECK PROPER ANS.
	  I=PRSCON-1				!SCAN ANSWER.
	  DO 27200 L=K,NEWK-1
27150	    I=I+1				!SKIP INPUT BLANKS.
	    IF(I.GT.INLNT) GO TO 27300		!END OF INPUT? LOSE.
	    IF(INBUF(I).EQ.' ') GO TO 27150
	    IF(INBUF(I).NE.ANSSTR(L)) GO TO 27300
27200	  CONTINUE
	  GO TO 27500				!RIGHT ANSWER.
27300	K=NEWK
C
	PRSCON=1				!KILL REST OF LINE.
	NQATT=NQATT+1				!WRONG, CRETIN.
	IF(NQATT.GE.5) GO TO 27400		!TOO MANY WRONG?
	CALL RSPEAK(800+NQATT)			!NO, TRY AGAIN.
	RETURN
C
27400	CALL RSPEAK(826)			!ALL OVER.
	CFLAG(CEVINQ)=.FALSE.			!LOSE.
	RETURN
C
27500	PRSCON=1				!KILL REST OF LINE.
	CORRCT=CORRCT+1				!GOT IT RIGHT.
	CALL RSPEAK(800)			!HOORAY.
	IF(CORRCT.GE.3) GO TO 27600		!WON TOTALLY?
	CTICK(CEVINQ)=2				!NO, START AGAIN.
	QUESNO=MOD(QUESNO+3,8)
	NQATT=0
	CALL RSPEAK(769)			!ASK NEXT QUESTION.
	CALL RSPEAK(770+QUESNO)
	RETURN
C
27600	CALL RSPEAK(827)			!QUIZ OVER,
	CFLAG(CEVINQ)=.FALSE.
	OFLAG2(QDOOR)=OFLAG2(QDOOR).OR.OPENBT	!OPEN DOOR.
	RETURN
C
c v97 - rname : give the current room name
c
28000	call rspeak((rdesc2-here))
	return
		END
    C TAKE-- BASIC TAKE SEQUENCE
C
C TAKE AN OBJECT (FOR VERBS TAKE, PUT, DROP, READ, ETC.)
C
	LOGICAL FUNCTION TAKE(FLG)
C
C DECLARATIONS
C
	IMPLICIT INTEGER (A-Z)
	LOGICAL FLG,OBJACT,OAPPLI,QOPEN,QHERE
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
	COMMON /STAR/ MBASE,STRBIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C FUNCTIONS AND DATA
C
	QOPEN(O)=(OFLAG2(O).AND.OPENBT).NE.0
C TAKE, PAGE 2
C
	TAKE=.FALSE.				!ASSUME LOSES.
	OA=OACTIO(PRSO)				!GET OBJECT ACTION.
	IF(PRSO.LE.STRBIT) GO TO 100	!STAR?
	TAKE=OBJACT(X)			!YES, LET IT HANDLE.
	RETURN
C
100	X=OCAN(PRSO)				!INSIDE?
	IF(PRSO.NE.AVEHIC(WINNER)) GO TO 400	!HIS VEHICLE?
	CALL RSPEAK(672)			!DUMMY.
	RETURN
C
400	IF((OFLAG1(PRSO).AND.TAKEBT).NE.0) GO TO 500 !TAKEABLE?
	IF(.NOT.OAPPLI(OA,0)) CALL RSPEAK(552+RND(5))
	RETURN
C
C OBJECT IS TAKEABLE AND IN POSITION TO BE TAKEN.
C
500	IF((X.NE.0).OR. QHERE(PRSO,HERE)) GO TO 600
	IF(OADV(PRSO).EQ.WINNER) CALL RSPEAK(557)	!ALREADY GOT IT?
	RETURN
C
600	MXLOAD=MXLOAD				!ADJUST MXLOAD (HOW???)
	IF(((X.NE.0).AND.(OADV(X).EQ.WINNER)).OR.
&		((WEIGHT(0,PRSO,WINNER)+OSIZE(PRSO)).LE.MXLOAD))
&		GO TO 700
	CALL RSPEAK(558)			!TOO MUCH WEIGHT.
	RETURN
C
700	TAKE=.TRUE.				!AT LAST.
	IF(OAPPLI(OA,0)) RETURN			!DID IT HANDLE?
	CALL NEWSTA(PRSO,0,0,0,WINNER)		!TAKE OBJECT FOR WINNER.
	OFLAG2(PRSO)=OFLAG2(PRSO).OR.TCHBT	!HAS BEEN TOUCHED.
	CALL SCRUPD(OFVAL(PRSO))		!UPDATE SCORE.
	OFVAL(PRSO)=0				!CANT BE SCORED AGAIN.
	IF(FLG) CALL RSPEAK(559)		!TELL TAKEN.
	RETURN
C
	END
C DROP- DROP VERB PROCESSOR
C
C DECLARATIONS
C
	LOGICAL FUNCTION DROP(Z)
	IMPLICIT INTEGER (A-Z)
	LOGICAL F,PUT,OBJACT
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C ROOMS
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C DROP, PAGE 2
C
	DROP=.TRUE.				!ASSUME WINS.
	X=OCAN(PRSO)				!GET CONTAINER.
	IF(X.EQ.0) GO TO 200			!IS IT INSIDE?
	IF(OADV(X).NE.WINNER) GO TO 1000	!IS HE CARRYING CON?
	IF((OFLAG2(X).AND.OPENBT).NE.0) GO TO 300 !IS IT OPEN?
	CALL RSPSUB(525,ODESC2(X))		!CANT REACH.
	RETURN
C
200	IF(OADV(PRSO).NE.WINNER) GO TO 1000	!IS HE CARRYING OBJ?
300	IF(AVEHIC(WINNER).EQ.0) GO TO 400	!IS HE IN VEHICLE?
	PRSI=AVEHIC(WINNER)			!YES,
	F=PUT(.TRUE.)				!DROP INTO VEHICLE.
	RETURN					!DONE.
C
400	CALL NEWSTA(PRSO,0,HERE,0,0)		!DROP INTO ROOM.
	IF(HERE.EQ.MTREE) CALL NEWSTA(PRSO,0,FORE3,0,0)
500	IF(OBJACT(X)) RETURN			!DID IT HANDLE?
	I=0					!ASSUME NOTHING TO SAY.
	IF(PRSA.EQ.DROPW) I=528
	IF(PRSA.EQ.THROWW) I=529
	IF((I.NE.0).AND.(HERE.EQ.MTREE)) I=659
	CALL RSPSUB(I,ODESC2(PRSO))
	RETURN
C
1000	CALL RSPEAK(527)			!DONT HAVE IT.
	RETURN
C
	END
C PUT- PUT VERB PROCESSOR
C
C DECLARATIONS
C
	LOGICAL FUNCTION PUT(FLG)
	IMPLICIT INTEGER (A-Z)
	LOGICAL QOPEN,QHERE,OBJACT,FLG
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C MISCELLANEOUS VARIABLES
C
	COMMON /STAR/ MBASE,STRBIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FUNCTIONS AND DATA
C
	QOPEN(R)=(OFLAG2(R).AND.OPENBT).NE.0
C PUT, PAGE 2
C
	PUT=.FALSE.
	IF((PRSO.LE.STRBIT).AND.(PRSI.LE.STRBIT)) GO TO 200
	IF(.NOT.OBJACT(X)) CALL RSPEAK(560)		!STAR
	PUT=.TRUE.
	RETURN
C
200	IF(QOPEN(PRSI).OR.((OFLAG1(PRSI).AND.(DOORBT+CONTBT)).NE.0)
&		.OR.((OFLAG2(PRSI).AND.VEHBT).NE.0)) GO TO 300
	CALL RSPEAK(561)			!CANT PUT IN THAT.
	RETURN
C
300	IF(QOPEN(PRSI)) GO TO 400		!IS IT OPEN?
	CALL RSPEAK(562)			!NO, JOKE
	RETURN
C
400	IF(PRSO.NE.PRSI) GO TO 500		!INTO ITSELF?
	CALL RSPEAK(563)			!YES, JOKE.
	RETURN
C
500	IF(OCAN(PRSO).NE.PRSI) GO TO 600	!ALREADY INSIDE.
	CALL RSPSB2(564,ODESC2(PRSO),ODESC2(PRSI))
	PUT=.TRUE.
	RETURN
C
600	IF((WEIGHT(0,PRSO,0)+WEIGHT(0,PRSI,0)+OSIZE(PRSO))
&		.LE.OCAPAC(PRSI)) GO TO 700	!NOT TOO FULL?
	CALL RSPEAK(565)			!THEN CANT DO IT.
	RETURN
C
C NOW SEE IF OBJECT (OR ITS CONTAINER) IS IN ROOM
C
700	J=PRSO					!START SEARCH.
725	IF(QHERE(J,HERE)) GO TO 750		!IS IT HERE?
	J=OCAN(J)
	IF(J.NE.0) GO TO 725			!MORE TO DO?
	GO TO 800				!NO, SCH FAILS.
C
750	SVO=PRSO				!SAVE PARSER.
	SVI=PRSI
	PRSA=TAKEW
	PRSI=0
	IF(.NOT.TAKE(.FALSE.)) RETURN		!TAKE OBJECT.
	PRSA=PUTW
	PRSO=SVO
	PRSI=SVI
	GO TO 1000
C
C NOW SEE IF OBJECT IS ON PERSON.
C
800	IF(OCAN(PRSO).EQ.0) GO TO 1000		!INSIDE?
	IF(QOPEN(OCAN(PRSO))) GO TO 900		!OPEN?
	CALL RSPSUB(566,ODESC2(PRSO))		!LOSE.
	RETURN
C
900	CALL SCRUPD(OFVAL(PRSO))		!SCORE OBJECT.
	OFVAL(PRSO)=0
	CALL NEWSTA(PRSO,0,0,0,WINNER)		!TEMPORARILY ON WINNER.
C
1000	IF(OBJACT(X)) RETURN			!NO, GIVE OBJECT A SHOT.
	CALL NEWSTA(PRSO,2,0,PRSI,0)		!CONTAINED INSIDE.
	PUT=.TRUE.
	RETURN
C
	END
C VALUAC- HANDLES VALUABLES/EVERYTHING
C
C DECLARATIONS
C
	SUBROUTINE VALUAC(V)
	IMPLICIT INTEGER (A-Z)
	common /chan/inpch,outch
	common /spare/ccflg
	LOGICAL LIT,F,F1,TAKE,PUT,DROP,NOTVAL,QHERE
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FUNCTIONS AND DATA
C
	NOTVAL(R)=(SAVEP.EQ.V).AND.(OTVAL(R).LE.0)
C VALUAC, PAGE 2
C
	F=.TRUE.				!ASSUME NO ACTIONS.
	I=579					!ASSUME NOT LIT.
	IF(.NOT.LIT(HERE)) GO TO 4000		!IF NOT LIT, PUNT.
	I=677					!ASSUME WRONG VERB.
	SAVEP=PRSO				!SAVE PRSO.
	SAVEH=HERE				!SAVE HERE.
C
100	IF(PRSA.NE.TAKEW) GO TO 1000		!TAKE EVERY/VALUA?
	DO 500 PRSO=1,OLNT			!LOOP THRU OBJECTS.
	  IF(.NOT.QHERE(PRSO,HERE).OR.
&		((OFLAG1(PRSO).AND.VISIBT).EQ.0).OR.
&		((OFLAG2(PRSO).AND.ACTRBT).NE.0).OR.
&			NOTVAL(PRSO)) GO TO 500
	  IF(((OFLAG1(PRSO).AND.TAKEBT).EQ.0).AND.
&		((OFLAG2(PRSO).AND.TRYBT).EQ.0)) GO TO 500
	  F=.FALSE.
	  CALL RSPSUB(580,ODESC2(PRSO))
	  write(outch,400)
	  ccflg=.true.
	  F1=TAKE(.TRUE.)
	  IF(SAVEH.NE.HERE) RETURN
400	format('   ',$)
500	CONTINUE
	GO TO 3000
C
1000	IF(PRSA.NE.DROPW) GO TO 2000		!DROP EVERY/VALUA?
	DO 1500 PRSO=1,OLNT
	  IF((OADV(PRSO).NE.WINNER).OR.NOTVAL(PRSO))
&		GO TO 1500
	  F=.FALSE.
	  CALL RSPSUB(580,ODESC2(PRSO))
	  write(outch,400)
	  ccflg=.true.
	  F1=DROP(.TRUE.)
	  IF(SAVEH.NE.HERE) RETURN
1500	CONTINUE
	GO TO 3000
C
2000	IF(PRSA.NE.PUTW) GO TO 3000		!PUT EVERY/VALUA?
	DO 2500 PRSO=1,OLNT			!LOOP THRU OBJECTS.
	  IF((OADV(PRSO).NE.WINNER)
&		.OR.(PRSO.EQ.PRSI).OR.NOTVAL(PRSO).OR.
&		((OFLAG1(PRSO).AND.VISIBT).EQ.0)) GO TO 2500
	  F=.FALSE.
	  CALL RSPSUB(580,ODESC2(PRSO))
	  write(outch,400)
 	  ccflg=.true.
	  F1=PUT(.TRUE.)
	  IF(SAVEH.NE.HERE) RETURN
2500	CONTINUE
C
3000	I=581
	IF(SAVEP.EQ.V) I=582			!CHOOSE MESSAGE.
4000	IF(F) CALL RSPEAK(I)			!IF NOTHING, REPORT.
	RETURN
	END
C SAVE- SAVE GAME STATE
C
C DECLARATIONS
C
	SUBROUTINE SAVEGM
	IMPLICIT INTEGER (A-Z)
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C SCREEN OF LIGHT
C
	COMMON /SCREEN/ FROMDR,SCOLRM,SCOLAC
C
C MISCELLANEOUS VARIABLES
C
	COMMON /VERS/ VMAJ,VMIN,VEDIT
	COMMON /TIME/ PLTIME,SHOUR,SMIN,SSEC
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
C EXITS
C
	COMMON /EXITS/ XLNT,travel(870)
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
	COMMON /VILL/ VLNT,VILLNS(4),VPROB(4),VOPPS(4),VBEST(4),VMELEE(4)
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
C FLAGS
C
	LOGICAL FLAGS(50)
	INTEGER SWITCH(27)
	COMMON /FINDEX/ FLAGS,SWITCH
C
	PRSWON=.FALSE.				!DISABLE GAME.
	OPEN (UNIT=1,FILE='DSAVE.DAT',
&		ACCESS='SEQOUT',MODE='IMAGE',ERR=100)
C
	CALL GTTIME(I)				!GET TIME.
	WRITE(1) VMAJ,VMIN,VEDIT
	WRITE(1) WINNER,HERE,THFPOS,TELFLG,THFFLG,THFACT,
&		SWDACT,SWDSTA
	WRITE(1) I,MOVES,DEATHS,RWSCOR,EGSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,FROMDR,SCOLRM,SCOLAC
	WRITE(1) ODESC1,ODESC2,OFLAG1,OFLAG2,OFVAL,OTVAL,
&		OSIZE,OCAPAC,OROOM,OADV,OCAN
	WRITE(1) RVAL,RFLAG
	WRITE(1) AROOM,ASCORE,AVEHIC,ASTREN,AFLAG
	WRITE(1) FLAGS,SWITCH,VPROB,CFLAG,CTICK
C
	CLOSE(UNIT=1,DISPOSE='SAVE')
	CALL RSPEAK(597)
	RETURN
C
100	CALL RSPEAK(598)			!CANT DO IT.
	RETURN
	END
C RESTORE- RESTORE GAME STATE
C
C DECLARATIONS
C
	SUBROUTINE RSTRGM
	IMPLICIT INTEGER (A-Z)
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C SCREEN OF LIGHT
C
	COMMON /SCREEN/ FROMDR,SCOLRM,SCOLAC
C
C MISCELLANEOUS VARIABLES
C
	COMMON /VERS/ VMAJ,VMIN,VEDIT
	COMMON /TIME/ PLTIME,SHOUR,SMIN,SSEC
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
C EXITS
C
	COMMON /EXITS/ XLNT,TRAVEL(870)
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
	COMMON /VILL/ VLNT,VILLNS(4),VPROB(4),VOPPS(4),VBEST(4),VMELEE(4)
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
C FLAGS
C
	LOGICAL flags(50)
	INTEGER switch(27)
	COMMON /FINDEX/ FLAGS,SWITCH
C
	PRSWON=.FALSE.			!DISABLE GAME.
	OPEN (UNIT=1,FILE='DSAVE.DAT',
&		ACCESS='SEQIN',MODE='IMAGE',ERR=100)
C
	READ(1) I,J,K
	IF((I.NE.VMAJ).OR.(J.NE.VMIN)) GO TO 200
C
	READ(1) WINNER,HERE,THFPOS,TELFLG,THFFLG,THFACT,
&		SWDACT,SWDSTA
	READ(1) PLTIME,MOVES,DEATHS,RWSCOR,EGSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,FROMDR,SCOLRM,SCOLAC
	READ(1) ODESC1,ODESC2,OFLAG1,OFLAG2,OFVAL,OTVAL,
&		OSIZE,OCAPAC,OROOM,OADV,OCAN
	READ(1) RVAL,RFLAG
	READ(1) AROOM,ASCORE,AVEHIC,ASTREN,AFLAG
	READ(1) FLAGS,SWITCH,VPROB,CFLAG,CTICK
C
	CLOSE(UNIT=1,DISPOSE='SAVE')
	CALL RSPEAK(599)
	RETURN
C
100	CALL RSPEAK(598)			!CANT DO IT.
	RETURN
C
200	CALL RSPEAK(600)			!OBSOLETE VERSION
	CLOSE (UNIT=1,DISPOSE='SAVE')
	RETURN
	END
C WALK- MOVE IN SPECIFIED DIRECTION
C
C DECLARATIONS
C
	LOGICAL FUNCTION WALK(X)
	IMPLICIT INTEGER(A-Z)
	LOGICAL FINDXT,QOPEN,LIT,PROB,MOVETO,RMINFO
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
C EXITS
C
	COMMON /CURXT/ XTYPE,XROOM1,XSTRNG,XACTIO,XOBJ
	EQUIVALENCE (XFLAG,XOBJ)
C
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL

C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT
	COMMON /VILL/ VLNT,VILLNS(4),VPROB(4),VOPPS(4),VBEST(4),VMELEE(4)
C
C ADVENTURERS
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C FLAGS
C
	LOGICAL flags(50)
	EQUIVALENCE (FLAGS(1),TROLLF)
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	QOPEN(O)=(OFLAG2(O).AND.OPENBT).NE.0
C WALK, PAGE 2
C
	WALK=.TRUE.				!ASSUME WINS.
	IF((WINNER.NE.PLAYER).OR.LIT(HERE).OR.PROB(25,25))
&		GO TO 500
	IF(.NOT.FINDXT(PRSO,HERE)) GO TO 450	!INVALID EXIT? GRUE!
	GO TO (400,200,100,300),XTYPE		!DECODE EXIT TYPE.
	CALL BUG(9,XTYPE)
C
100	IF(CXAPPL(XACTIO).NE.0) GO TO 400	!CEXIT... RETURNED ROOM?
	IF(FLAGS(XFLAG)) GO TO 400		!NO, FLAG ON?
200	CALL JIGSUP(523)			!BAD EXIT, GRUE!
	RETURN
C
300	IF(CXAPPL(XACTIO).NE.0) GO TO 400	!DOOR... RETURNED ROOM?
	IF(QOPEN(XOBJ)) GO TO 400		!NO, DOOR OPEN?
	CALL JIGSUP(523)			!BAD EXIT, GRUE!
	RETURN
C
400	IF(LIT(XROOM1)) GO TO 900		!VALID ROOM, IS IT LIT?
450	CALL JIGSUP(522)			!NO, GRUE!
	RETURN
C
C ROOM IS LIT, OR WINNER IS NOT PLAYER (NO GRUE).
C
500	IF(FINDXT(PRSO,HERE)) GO TO 550		!EXIT EXIST?
525	XSTRNG=524				!ASSUME WALL.
	IF(PRSO.EQ.XUP) XSTRNG=679		!IF UP, CANT.
	IF(PRSO.EQ.XDOWN) XSTRNG=680		!IF DOWN, CANT.
	IF((RFLAG(HERE).AND.RNWALL).EQ.0) XSTRNG=678
	CALL RSPEAK(XSTRNG)
	RETURN
C
550	GO TO (900,600,700,800),XTYPE	!BRANCH ON EXIT TYPE.
	CALL BUG(9,XTYPE)
C
600	CALL RSPEAK(XSTRNG)			!NO EXIT... TELL WHY.
	RETURN
C
700	IF(CXAPPL(XACTIO).NE.0) GO TO 900	!CEXIT... RETURNED ROOM?
	IF(FLAGS(XFLAG)) GO TO 900		!NO, FLAG ON?
	IF(XSTRNG.EQ.0) GO TO 525		!IF NO REASON, USE STD.
	CALL RSPEAK(XSTRNG)			!DENY EXIT.
	RETURN
C
800	IF(CXAPPL(XACTIO).NE.0) GO TO 900	!DOOR... RETURNED ROOM?
	IF(QOPEN(XOBJ)) GO TO 900		!NO, DOOR OPEN?
	IF(XSTRNG.EQ.0) XSTRNG=525		!IF NO REASON, USE STD.
	CALL RSPSUB(XSTRNG,ODESC2(XOBJ))
	RETURN
C
900	WALK=MOVETO(XROOM1,WINNER)		!MOVE TO ROOM.
	IF(WALK) WALK=RMINFO(.FALSE.)		!DESCRIBE ROOM.
	RETURN
	END
C CXAPPL- CONDITIONAL EXIT PROCESSORS
C
C DECLARATIONS
C
	INTEGER FUNCTION CXAPPL(RI)
	IMPLICIT INTEGER (A-Z)
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C EXITS
C
	COMMON /EXITS/ XLNT,travel(870)
C
	COMMON /CURXT/ XTYPE,XROOM1,XSTRNG,XACTIO,XOBJ
	EQUIVALENCE (XFLAG,XOBJ)
C
	COMMON /XPARS/ XRMASK,XDMASK,XFMASK,XFSHFT,XASHFT,
&		XELNT(4),XNORM,XNO,XCOND,XDOOR,XLFLAG
C
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C CXAPPL, PAGE 2
C
	CXAPPL=0				!NO RETURN.
	IF(RI.EQ.0) RETURN			!IF NO ACTION, DONE.
	GO TO (1000,2000,3000,4000,5000,6000,7000,
&		8000,9000,10000,11000),RI	 !BRANCH ON APP.
	CALL BUG(5,RI)
C
C C1- COFFIN-CURE
C
1000	EGYPTF=OADV(COFFI).NE.WINNER		!T IF NO COFFIN.
	RETURN
C
C C2- CAROUSEL EXIT
C C5- CAROUSEL OUT
C
2000	IF(CAROFF) RETURN			!IF FLIPPED, NOTHING.
2500	CALL RSPEAK(121)			!SPIN THE COMPASS.
5000	I=XELNT(XCOND)*RND(8)			!CHOOSE RANDOM EXIT.
	XROOM1=(TRAVEL(REXIT(HERE)+I)).AND.XRMASK
	CXAPPL=XROOM1				!RETURN EXIT.
	RETURN
C
C C3- CHIMNEY FUNCTION
C
3000	LITLDF=.FALSE.			!ASSUME HEAVY LOAD.
	J=0
	DO 3100 I=1,OLNT			!COUNT OBJECTS.
	  IF(OADV(I).EQ.WINNER) J=J+1
3100	CONTINUE
C
	IF(J.GT.2) RETURN			!CARRYING TOO MUCH?
	XSTRNG=446				!ASSUME NO LAMP.
	IF(OADV(LAMP).NE.WINNER) RETURN		!NO LAMP?
	LITLDF=.TRUE.				!HE CAN DO IT.
	IF((OFLAG2(DOOR).AND.OPENBT).EQ.0)
&		OFLAG2(DOOR)=OFLAG2(DOOR).AND. .NOT.TCHBT
	RETURN
C
C C4-	FROBOZZ FLAG (MAGNET ROOM, FAKE EXIT)
C C6-	FROBOZZ FLAG (MAGNET ROOM, REAL EXIT)
C
4000	IF(CAROFF) GO TO 2500			!IF FLIPPED, GO SPIN.
	FROBZF=.FALSE.				!OTHERWISE, NOT AN EXIT.
	RETURN
C
6000	IF(CAROFF) GO TO 2500			!IF FLIPPED, GO SPIN.
	FROBZF=.TRUE.				!OTHERWISE, AN EXIT.
	RETURN
C
C C7-	FROBOZZ FLAG (BANK ALARM)
C
7000	FROBZF=(OROOM(BILLS).NE.0).AND.(OROOM(PORTR).NE.0)
	RETURN
C CXAPPL, PAGE 3
C
C C8-	FROBOZZ FLAG (MRGO)
C
8000	FROBZF=.FALSE.				!ASSUME CANT MOVE.
	IF(MLOC.NE.XROOM1) GO TO 8100		!MIRROR IN WAY?
	IF((PRSO.EQ.XNORTH).OR.(PRSO.EQ.XSOUTH)) GO TO 8200
	IF(MOD(MDIR,180).NE.0) GO TO 8300	!MIRROR MUST BE N-S.
	XROOM1=((XROOM1-MRA)*2)+MRAE		!CALC EAST ROOM.
	IF(PRSO.GT.XSOUTH) XROOM1=XROOM1+1	!IF SW/NW, CALC WEST.
8100	CXAPPL=XROOM1
	RETURN
C
8200	XSTRNG=814				!ASSUME STRUC BLOCKS.
	IF(MOD(MDIR,180).EQ.0) RETURN		!IF MIRROR N-S, DONE.
8300	LDIR=MDIR				!SEE WHICH MIRROR.
	IF(PRSO.EQ.XSOUTH) LDIR=180
	XSTRNG=815				!MIRROR BLOCKS.
	IF(((LDIR.GT.180).AND..NOT.MR1F).OR.
&		((LDIR.LT.180).AND..NOT.MR2F)) XSTRNG=816 !MIRROR BROKEN.
	RETURN
C
C C9-	FROBOZZ FLAG (MIRIN)
C
9000	IF(MRHERE(HERE).NE.1) GO TO 9100	!MIRROR 1 HERE?
	IF(MR1F) XSTRNG=805			!SEE IF BROKEN.
	FROBZF=MROPNF				!ENTER IF OPEN.
	RETURN
C
9100	FROBZF=.FALSE.				!NOT HERE,
	XSTRNG=817				!LOSE.
	RETURN
C CXAPPL, PAGE 4
C
C C10-	FROBOZZ FLAG (MIRROR EXIT)
C
10000	FROBZF=.FALSE.				!ASSUME CANT.
	LDIR=((PRSO-XNORTH)/XNORTH)*45		!XLATE DIR TO DEGREES.
	IF(.NOT.MROPNF .OR.
&		((MOD(MDIR+270,360).NE.LDIR).AND.(PRSO.NE.XEXIT)))
&		GO TO 10200			!EXIT VIA MIRROR?
	XROOM1=((MLOC-MRA)*2)+MRAE+1-(MDIR/180)	!ASSUME E-W EXIT.
	IF(MOD(MDIR,180).EQ.0) GO TO 10100	!IF N-S, OK.
	XROOM1=MLOC+1				!ASSUME N EXIT.
	IF(MDIR.GT.180) XROOM1=MLOC-1		!IF SOUTH.
10100	CXAPPL=XROOM1
	RETURN
C
10200	IF(.NOT.WDOPNF .OR.
&		((MOD(MDIR+180,360).NE.LDIR).AND.(PRSO.NE.XEXIT)))
&		RETURN				!EXIT VIA OPEN DOOR?
	XROOM1=MLOC+1				!ASSUME N.
	IF(MDIR.EQ.0) XROOM1=MLOC-1		!IF S.
	CALL RSPEAK(818)			!CLOSE DOOR.
	WDOPNF=.FALSE.
	CXAPPL=XROOM1
	RETURN
C
C C11-	MAYBE DOOR.  NORMAL MESSAGE IS THAT DOOR IS CLOSED.
C	BUT IF LCELL.NE.4, DOOR ISNT THERE.
C
11000	IF(LCELL.NE.4) XSTRNG=678		!SET UP MSG.
	RETURN
C
	END
C AAPPLI- APPLICABLES FOR ADVENTURERS
C
C DECLARATIONS
C
	LOGICAL FUNCTION AAPPLI(RI)
	IMPLICIT INTEGER (A-Z)
	LOGICAL F,MOVETO
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C EXITS
C
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL

C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C AAPPLI, PAGE 2
C
	IF(RI.EQ.0) GO TO 10			!IF ZERO, NO APP.
	AAPPLI=.TRUE.				!ASSUME WINS.
	GO TO (1000,2000),RI			!BRANCH ON ADV.
	CALL BUG(11,RI)
C
C COMMON FALSE RETURN.
C
10	AAPPLI=.FALSE.
	RETURN
C
C A1--	ROBOT.  PROCESS MOST COMMANDS GIVEN TO ROBOT.
C
1000	IF((PRSA.NE.RAISEW).OR.(PRSO.NE.RCAGE)) GO TO 1200
	CFLAG(CEVSPH)=.FALSE.			!ROBOT RAISED CAGE.
	WINNER=PLAYER				!RESET FOR PLAYER.
	F=MOVETO(CAGER,WINNER)			!MOVE TO NEW ROOM.
	CALL NEWSTA(CAGE,567,CAGER,0,0)		!INSTALL CAGE IN ROOM.
	CALL NEWSTA(ROBOT,0,CAGER,0,0)		!INSTALL ROBOT IN ROOM.
	AROOM(AROBOT)=CAGER			!ALSO MOVE ROBOT/ADV.
	CAGESF=.TRUE.				!CAGE SOLVED.
	OFLAG1(ROBOT)=OFLAG1(ROBOT).AND..NOT.NDSCBT
	OFLAG1(SPHER)=OFLAG1(SPHER).OR.TAKEBT	!RESET FLAGS.
	RETURN
C
1200	IF((PRSA.NE.DRINKW).AND.(PRSA.NE.EATW)) GO TO 1300
	CALL RSPEAK(568)			!EAT OR DRINK, JOKE.
	RETURN
C
1300	IF(PRSA.NE.READW) GO TO 1400		!READ,
	CALL RSPEAK(569)			!JOKE.
	RETURN
C
1400	IF((PRSA.EQ.WALKW).OR.(PRSA.EQ.TAKEW).OR.(PRSA.EQ.DROPW)
&		.OR.(PRSA.EQ.PUTW).OR.(PRSA.EQ.PUSHW).OR.(PRSA.EQ.THROWW)
&		.OR.(PRSA.EQ.TURNW).OR.(PRSA.EQ.LEAPW)) GO TO 10
	CALL RSPEAK(570)			!JOKE.
	RETURN
C AAPLI, PAGE 3
C
C A2--	MASTER.  PROCESS MOST COMMANDS GIVEN TO MASTER.
C
2000	IF((OFLAG2(QDOOR).AND.OPENBT).NE.0) GO TO 2100
	CALL RSPEAK(783)			!NO MASTER YET.
	RETURN
C
2100	IF(PRSA.NE.WALKW) GO TO 2200		!WALK?
	I=784					!ASSUME WONT.
	IF(((HERE.EQ.SCORR).AND.
&		((PRSO.EQ.XNORTH).OR.(PRSO.EQ.XENTER))).OR.
&		((HERE.EQ.NCORR).AND.
&			((PRSO.EQ.XSOUTH).OR.(PRSO.EQ.XENTER))))
&		I=785				!IF PRISON, CANT.
	CALL RSPEAK(I)
	RETURN
C
2200	IF((PRSA.EQ.TAKEW).OR.(PRSA.EQ.DROPW).OR.(PRSA.EQ.PUTW).OR.
&		(PRSA.EQ.THROWW).OR.(PRSA.EQ.PUSHW).OR.(PRSA.EQ.TURNW).OR.
&		(PRSA.EQ.SPINW).OR.(PRSA.EQ.TRNTOW).OR.(PRSA.EQ.FOLLOW).OR.
&		  (PRSA.EQ.STAYW).OR.(PRSA.EQ.OPENW).OR.(PRSA.EQ.CLOSEW).OR.
&		 (PRSA.EQ.KILLW)) GO TO 10		!MASTER CAN DO.
	CALL RSPEAK(786)			!MASTER CANT DO IT.
	RETURN
C
	END
C THIEFD-	INTERMOVE THIEF DEMON
C
C DECLARATIONS
C
	SUBROUTINE THIEFD
	IMPLICIT INTEGER (A-Z)
	LOGICAL DFLAG,ONCE,PROB,QHERE,QSTILL,LIT,WINNIN
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
	COMMON /DEBUG/ DBGFLG,PRSFLG
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	QSTILL(R)=(QHERE(STILL,R).OR.(OADV(STILL).EQ.-THIEF))
C THIEFD, PAGE 2
C
D	DFLAG=(PRSFLG.AND."100000).NE.0		!SET UP DETAIL FLAG.
	ONCE=.FALSE.				!INIT FLAG.
1025	RHERE=OROOM(THIEF)			!VISIBLE POS.
	IF(RHERE.NE.0) THFPOS=RHERE
C
	IF(THFPOS.EQ.HERE) GO TO 1100		!THIEF IN WIN RM?
	IF(THFPOS.NE.TREAS) GO TO 1400		!THIEF NOT IN TREAS?
C
C THIEF IS IN TREASURE ROOM, AND WINNER IS NOT.
C
D	IF(DFLAG) TYPE 10
D10	FORMAT(' THIEFD-- IN TREASURE ROOM')
	IF(RHERE.EQ.0) GO TO 1050		!VISIBLE?
	CALL NEWSTA(THIEF,0,0,0,0)		!YES, VANISH.
	RHERE=0
	IF(QSTILL(TREAS)) CALL NEWSTA(STILL,0,0,THIEF,0)
1050	I=ROBADV(-THIEF,THFPOS,0,0)			!DROP VALUABLES.
	IF(QHERE(EGG,THFPOS)) OFLAG2(EGG)=OFLAG2(EGG).OR.OPENBT
	GO TO 1700
C
C THIEF AND WINNER IN SAME ROOM.
C
1100	IF(THFPOS.EQ.TREAS) GO TO 1700		!IF TREAS ROOM, NOTHING.
	IF((RFLAG(THFPOS).AND.RLIGHT).NE.0) GO TO 1400 !NOT IF LIGHT.
D	IF(DFLAG) TYPE 20
D20	FORMAT(' THIEFD-- IN ADV ROOM')
	IF(THFFLG) GO TO 1300			!THIEF ANNOUNCED?
	IF((RHERE.NE.0).OR.PROB(70,70)) GO TO 1150 !IF INVIS AND 30%.
	IF(OCAN(STILL).NE.THIEF) GO TO 1700	!ABORT IF NO STILLETTO.
	CALL NEWSTA(THIEF,583,THFPOS,0,0)	!INSERT THIEF INTO ROOM.
	THFFLG=.TRUE.				!THIEF IS ANNOUNCED.
	RETURN
C
1150	IF((RHERE.EQ.0).OR.((OFLAG2(THIEF).AND.FITEBT).EQ.0))
&		GO TO 1200			!IF VISIBLE AND FIGHT.
	IF(WINNIN(THIEF,WINNER)) GO TO 1175	!WINNING?
	CALL NEWSTA(THIEF,584,0,0,0)		!NO, VANISH THIEF.
	OFLAG2(THIEF)=OFLAG2(THIEF).AND. .NOT.FITEBT
	IF(QSTILL(THFPOS)) CALL NEWSTA(STILL,0,0,THIEF,0)
	RETURN
C
1175	IF(PROB(90,90)) GO TO 1700		!90% CHANCE TO STAY.
C
1200	IF((RHERE.EQ.0).OR.PROB(70,70)) GO TO 1250 !IF VISIBLE AND 30%
	CALL NEWSTA(THIEF,585,0,0,0)		!VANISH THIEF.
	IF(QSTILL(THFPOS)) CALL NEWSTA(STILL,0,0,THIEF,0)
	RETURN
C
1300	IF(RHERE.EQ.0) GO TO 1700		!ANNOUNCED.  VISIBLE?
1250	IF(PROB(70,70)) RETURN			!70% CHANCE TO DO NOTHING.
	THFFLG=.TRUE.
	NR=ROBRM(THFPOS,100,0,0,-THIEF)+ROBADV(WINNER,0,0,-THIEF)
	I=586					!ROBBED EM.
	IF(RHERE.NE.0) I=588			!WAS HE VISIBLE?
	IF(NR.NE.0) I=I+1			!DID HE GET ANYTHING?
	CALL NEWSTA(THIEF,I,0,0,0)		!VANISH THIEF.
	IF(QSTILL(THFPOS))
&		CALL NEWSTA(STILL,0,0,THIEF,0)	!RECLAIM STILLETTO.
	IF((NR.NE.0).AND..NOT.LIT(THFPOS)) CALL RSPEAK(406)
	RHERE=0
	GO TO 1700				!ONWARD.
C
C NOT IN ADVENTURERS ROOM.
C
1400	CALL NEWSTA(THIEF,0,0,0,0)		!VANISH.
	RHERE=0
D	IF(DFLAG) TYPE 30,THFPOS
D30	FORMAT(' THIEFD-- IN ROOM ',I4)
	IF(QSTILL(THFPOS))
&		CALL NEWSTA(STILL,0,0,THIEF,0)
	IF((RFLAG(THFPOS).AND.RSEEN).EQ.0) GO TO 1700	!CANT ROB UNSEEN.
	I=ROBRM(THFPOS,75,0,0,-THIEF)		!ROB ROOM 75%.
	IF((THFPOS.LT.MAZE1).OR.(THFPOS.GT.MAZ15).OR.
&		(HERE.LT.MAZE1).OR.(HERE.GT.MAZ15)) GO TO 1500
	DO 1450 I=1,OLNT			!BOTH IN MAZE.
	  IF(.NOT.QHERE(I,THFPOS).OR.PROB(60,60).OR.
&		((OFLAG1(I).AND.(VISIBT+TAKEBT)).NE.(VISIBT+TAKEBT)))
&		GO TO 1450
	  CALL RSPSUB(590,ODESC2(I))		!TAKE OBJECT.
	  IF(PROB(40,20)) GO TO 1700
	  CALL NEWSTA(I,0,0,0,-THIEF)		!MOST OF THE TIME.
	  OFLAG2(I)=OFLAG2(I).OR.TCHBT
	  GO TO 1700
1450	CONTINUE
	GO TO 1700
C
1500	DO 1550 I=1,OLNT			!NOT IN MAZE.
	  IF(.NOT.QHERE(I,THFPOS).OR.(OTVAL(I).NE.0).OR.PROB(80,60).OR.
&		((OFLAG1(I).AND.(VISIBT+TAKEBT)).NE.(VISIBT+TAKEBT)))
&		GO TO 1550
	  CALL NEWSTA(I,0,0,0,-THIEF)
	  OFLAG2(I)=OFLAG2(I).OR.TCHBT
	  GO TO 1700
1550	CONTINUE
C
C NOW MOVE TO NEW ROOM.
C
1700	IF(OADV(ROPE).EQ.-THIEF) DOMEF=.FALSE.
	IF(ONCE) GO TO 1800
	ONCE=.NOT.ONCE
1750	THFPOS=THFPOS-1			!NEXT ROOM.
	IF(THFPOS.LE.0) THFPOS=RLNT
	IF((RFLAG(THFPOS).AND.(RLAND+RSACRD+REND)).NE.RLAND)
&		GO TO 1750			!MUST BE LAND, PROFANE.
	THFFLG=.FALSE.				!NOT ANNOUNCED.
	GO TO 1025				!ONCE MORE.
C
C ALL DONE.
C
1800	IF(THFPOS.EQ.TREAS) RETURN			!IN TREASURE ROOM?
	J=591					!NO, DROP STUFF.
	IF(THFPOS.NE.HERE) J=0
	DO 1850 I=1,OLNT
	  IF((OADV(I).NE.-THIEF).OR.PROB(70,70).OR.
&		(OTVAL(I).GT.0)) GO TO 1850
	  CALL NEWSTA(I,J,THFPOS,0,0)
	  J=0
1850	CONTINUE
	RETURN
C
	END
C FIGHTD- INTERMOVE FIGHT DEMON
C
C DECLARATIONS
C
	SUBROUTINE FIGHTD
	IMPLICIT INTEGER (A-Z)
	LOGICAL PROB,OAPPLI
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C VILLAINS AND DEMONS
C
	COMMON /VILL/ VLNT,VILLNS(4),VPROB(4),VOPPS(4),VBEST(4),VMELEE(4)
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AFLAGS/ ASTAG
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	DATA ROUT/1/
C FIGHTD, PAGE 2
C
	DO 2400 I=1,VLNT			!LOOP THRU VILLAINS.
	  VOPPS(I)=0				!CLEAR OPPONENT SLOT.
	  OBJ=VILLNS(I)				!GET OBJECT NO.
	  RA=OACTIO(OBJ)			!GET HIS ACTION.
	  IF(HERE.NE.OROOM(OBJ)) GO TO 2200	!ADVENTURER STILL HERE?
	  IF((OBJ.EQ.THIEF).AND.THFENF) GO TO 2400 !THIEF ENGROSSED?
	  IF(OCAPAC(OBJ).GE.0) GO TO 2050	!YES, VILL AWAKE?
	  IF((VPROB(I).EQ.0).OR..NOT.PROB(VPROB(I),VPROB(I)))
&		GO TO 2025			!NO, SEE IF WAKES UP.
	  OCAPAC(OBJ)=IABS(OCAPAC(OBJ))
	  VPROB(I)=0
	  IF(RA.EQ.0) GO TO 2400		!ANYTHING TO DO?
	  PRSA=INXW				!YES, WAKE HIM UP.
	  F=OAPPLI(RA,0)
	  GO TO 2400				!NOTHING ELSE HAPPENS.
C
2025	  VPROB(I)=VPROB(I)+10			!INCREASE WAKEUP PROB.
	  GO TO 2400				!NOTHING ELSE.
C
2050	  IF((OFLAG2(OBJ).AND.FITEBT).EQ.0) GO TO 2100
	  VOPPS(I)=OBJ				!FIGHTING, SET UP OPP.
	  GO TO 2400
C
2100	  IF(RA.EQ.0) GO TO 2400		!NOT FIGHTING,
	  PRSA=FRSTQW				!SET UP PROBABILITY
	  IF(.NOT.OAPPLI(RA,0)) GO TO 2400	!OF FIGHTING.
	  OFLAG2(OBJ)=OFLAG2(OBJ).OR.FITEBT
	  VOPPS(I)=OBJ				!SET UP OPP.
	  GO TO 2400
C
2200	  IF(((OFLAG2(OBJ).AND.FITEBT).EQ.0).OR.(RA.EQ.0))
&		GO TO 2300			!NOTHING TO DO.
	  PRSA=FIGHTW				!HAVE A FIGHT.
	  F=OAPPLI(RA,0)
2300	  IF(OBJ.EQ.THIEF) THFENF=.FALSE.	!TURN OFF ENGROSSED.
	  AFLAG(PLAYER)=AFLAG(PLAYER).AND. .NOT.ASTAG
	  OFLAG2(OBJ)=OFLAG2(OBJ).AND. .NOT.(STAGBT+FITEBT)
	  IF((OCAPAC(OBJ).GE.0).OR.(RA.EQ.0))
&		GO TO 2400
	  PRSA=INXW				!WAKE HIM UP.
	  F=OAPPLI(RA,0)
	  OCAPAC(OBJ)=IABS(OCAPAC(OBJ))
2400	CONTINUE
C FIGHTD, PAGE 3
C
C NOW DO ACTUAL COUNTERBLOWS.
C
	OUT=0					!ASSUME HERO OK.
2600	DO 2700 I=1,VLNT			!LOOP THRU OPPS.
	  J=VOPPS(I)
	  IF(J.EQ.0) GO TO 2700			!SLOT EMPTY?
	  RA=OACTIO(J)
	  IF(RA.EQ.0) GO TO 2650		!VILLAIN ACTION?
	  PRSA=FIGHTW				!SEE IF
	  IF(OAPPLI(RA,0)) GO TO 2700		!SPECIAL ACTION.
2650	  RES=BLOW(PLAYER,J,VMELEE(I),.FALSE.,OUT) !STRIKE BLOW.
	  IF(RES.LT.0) RETURN			!IF HERO DEAD, EXIT.
	  IF(RES.EQ.ROUT) OUT=2+RND(3)		!IF HERO OUT, SET FLG.
2700	CONTINUE
	OUT=OUT-1				!DECREMENT OUT COUNT.
	IF(OUT.GT.0) GO TO 2600			!IF STILL OUT, GO AGAIN.
	RETURN
C
	END
C BLOW- STRIKE BLOW
C
C DECLARATIONS
C
	INTEGER FUNCTION BLOW(H,V,RMK,HFLG,OUT)
	IMPLICIT INTEGER (A-Z)
	LOGICAL HFLG,OAPPLI,PROB
	INTEGER DEF1R(3),DEF2R(4),DEF3R(5)
	INTEGER RVECTR(66),RSTATE(45)
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C PARSE VECTOR
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C MISCELLANEOUS VARIABLES
C
	COMMON /STAR/ MBASE,STRBIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL

C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AFLAGS/ ASTAG
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
C
C FUNCTIONS AND DATA
C
	DATA RMISS/0/,ROUT/1/,RKILL/2/,RLIGHT/3/
	DATA RSER/4/,RSTAG/5/,RLOSE/6/,RHES/7/,RSIT/8/
	DATA DEF1R/1,2,3/
	DATA DEF2R/13,23,24,25/
	DATA DEF3R/35,36,46,47,57/
C
	DATA RVECTR/0,0,0,0,5,5,1,1,2,2,2,2,
&		0,0,0,0,0,5,5,3,3,1,
&		0,0,0,5,5,3,3,3,1,2,2,2,
&			0,0,0,0,0,5,5,3,3,4,4,
&		0,0,0,5,5,3,3,3,4,4,4,
&		0,5,5,3,3,3,3,4,4,4/
	DATA RSTATE/5000,3005,3008,4011,3015,3018,1021,0,0,
&		5022,3027,3030,4033,3037,3040,1043,0,0,
&		4044,2048,4050,4054,5058,4063,4067,3071,1074,
&			4075,1079,4080,4084,4088,4092,4096,4100,1104,
&		4105,2109,4111,4115,4119,4123,4127,3131,3134/
C BLOW, PAGE 3
C
	RA=OACTIO(V)				!GET VILLAIN ACTION,
	DV=ODESC2(V)				!DESCRIPTION.
	BLOW=RMISS				!ASSUME NO RESULT.
D	TYPE 10,H,V,RMK,HFLG,OUT
D10	FORMAT(' BLOW 10-- ',3I7,L7,I7)
	IF(.NOT.HFLG) GO TO 1000		!HERO STRIKING BLOW?
C
C HERO IS ATTACKER, VILLAIN IS DEFENDER.
C
	PBLOSE=10				!BAD LK PROB.
	OFLAG2(V)=OFLAG2(V).OR.FITEBT		!YES, VILLAIN GETS MAD.
	IF((AFLAG(H).AND.ASTAG).EQ.0) GO TO 100	!HERO STAG?
	CALL RSPEAK(591)			!YES, CANT FIGHT.
	AFLAG(H)=AFLAG(H).AND. .NOT.ASTAG
	RETURN
C
100	ATT=FIGHTS(H,.TRUE.)			!GET HIS STRENGTH.
	OA=ATT
	DEF=VILSTR(V)				!GET VILL STRENGTH.
	OD=DEF
	DWEAP=0					!ASSUME NO WEAPON.
	DO 200 I=1,OLNT				!SEARCH VILLAIN.
	  IF((OCAN(I).EQ.V).AND.((OFLAG2(I).AND.WEAPBT).NE.0))
&		DWEAP=I
200	CONTINUE
	IF(V.EQ.AOBJ(PLAYER)) GO TO 300		!KILLING SELF?
	IF(DEF.NE.0) GO TO 2000			!DEFENDER ALIVE?
	CALL RSPSUB(592,DV)			!VILLAIN DEAD.
	RETURN
C
300	CALL JIGSUP(593)			!KILLING SELF.
	RETURN
C
C VILLAIN IS ATTACKER, HERO IS DEFENDER.
C
1000	PBLOSE=50				!BAD LK PROB.
	AFLAG(H)=AFLAG(H).AND..NOT.ASTAG	!VILL STRIKING.
	IF((OFLAG2(V).AND.STAGBT).EQ.0) GO TO 1200 !VILL STAGGERED?
	OFLAG2(V)=OFLAG2(V).AND. .NOT.STAGBT	!MAKE HIM OK.
	CALL RSPSUB(594,DV)			!DESCRIBE.
	RETURN
C
1200	ATT=VILSTR(V)				!SET UP ATT, DEF.
	OA=ATT
	DEF=FIGHTS(H,.TRUE.)
	IF(DEF.LE.0) RETURN			!DONT ALLOW DEAD DEF.
	OD=FIGHTS(H,.FALSE.)
	DWEAP=IABS(FWIM(0,WEAPBT,0,0,H,.TRUE.))	!FIND A WEAPON.
C BLOW, PAGE 4
C
C PARTIES ARE NOW EQUIPPED.  DEF CANNOT BE ZERO.
C ATT MUST BE > 0.
C
2000	CONTINUE
D	TYPE 2050,ATT,OA,DEF,OD,DWEAP
D2050	FORMAT(' BLOW 2050-- ',5I7)
	IF(DEF.GT.0) GO TO 2100			!DEF ALIVE?
	RES=RKILL
	IF(HFLG) CALL RSPSUB(595,DV)		!DEADER.
	GO TO 3000
C
2100	IF(DEF-2) 2200,2300,2400		!DEF <2,=2,>2
2200	ATT=MIN0(ATT,3)				!SCALE ATT.
	TBL=DEF1R(ATT)				!CHOOSE TABLE.
	GO TO 2500
C
2300	ATT=MIN0(ATT,4)				!SCALE ATT.
	TBL=DEF2R(ATT)				!CHOOSE TABLE.
	GO TO 2500
C
2400	ATT=ATT-DEF				!SCALE ATT.
	ATT=MIN0(2,MAX0(-2,ATT))+3
	TBL=DEF3R(ATT)
C
2500	RES=RVECTR(TBL+RND(10))			!GET RESULT.
	IF(OUT.EQ.0) GO TO 2600			!WAS HE OUT?
	IF(RES.EQ.RSTAG) GO TO 2550		!YES, STAG--> HES.
	RES=RSIT				!OTHERWISE, SITTING.
	GO TO 2600
2550	RES=RHES
2600	IF((RES.EQ.RSTAG).AND.(DWEAP.NE.0).AND.PROB(25,PBLOSE))
&		RES=RLOSE			!LOSE WEAPON.
C
	MI=RSTATE(((RMK-1)*9)+RES+1)		!CHOOSE TABLE ENTRY.
	IF(MI.EQ.0) GO TO 3000
	I=(MOD(MI,1000)+RND(MI/1000))+MBASE+1
	J=DV
	IF(.NOT.HFLG .AND.(DWEAP.NE.0)) J=ODESC2(DWEAP)
D	TYPE 2650,RES,MI,I,J,MBASE
D2650	FORMAT(' BLOW 2650-- ',5I7)
	CALL RSPSUB(I,J)			!PRESENT RESULT.
C BLOW, PAGE 5
C
C NOW APPLY RESULT
C
3000	GO TO (4000,3100,3200,3300,3400,3500,3600,4000,3200),RES+1
C
3100	IF(HFLG) DEF=-DEF			!UNCONSCIOUS.
	GO TO 4000
C
3200	DEF=0					!KILLED OR SITTING DUCK.
	GO TO 4000
C
3300	DEF=MAX0(0,DEF-1)			!LIGHT WOUND.
	GO TO 4000
C
3400	DEF=MAX0(0,DEF-2)			!SERIOUS WOUND.
	GO TO 4000
C
3500	IF(HFLG) GO TO 3550			!STAGGERED.
	AFLAG(H)=AFLAG(H).OR.ASTAG
	GO TO 4000
C
3550	OFLAG2(V)=OFLAG2(V).OR.STAGBT
	GO TO 4000
C
3600	CALL NEWSTA(DWEAP,0,HERE,0,0)		!LOSE WEAPON.
	DWEAP=0
	IF(HFLG) GO TO 4000			!IF HERO, DONE.
	DWEAP=IABS(FWIM(0,WEAPBT,0,0,H,.TRUE.)) !GET NEW.
	IF(DWEAP.NE.0) CALL RSPSUB(605,ODESC2(DWEAP))
C BLOW, PAGE 6
C
4000	BLOW=RES				!RETURN RESULT.
	IF(.NOT.HFLG) GO TO 4500		!HERO?
	OCAPAC(V)=DEF				!STORE NEW CAPACITY.
	IF(DEF.NE.0) GO TO 4100			!DEAD?
	OFLAG2(V)=OFLAG2(V).AND. .NOT.FITEBT	!YES, NOT FIGHTING.
	CALL RSPSUB(572,DV)			!HE DIES.
	CALL NEWSTA(V,0,0,0,0)			!MAKE HIM DISAPPEAR.
	IF(RA.EQ.0) RETURN			!IF NX TO DO, EXIT.
	PRSA=DEADXW				!LET HIM KNOW.
	F=OAPPLI(RA,0)
	RETURN
C
4100	IF((RES.NE.ROUT).OR.(RA.EQ.0)) RETURN
	PRSA=OUTXW				!LET HIM BE OUT.
	F=OAPPLI(RA,0)
	RETURN
C
4500	ASTREN(H)=-10000			!ASSUME DEAD.
	IF(DEF.NE.0) ASTREN(H)=DEF-OD
	IF(DEF.GE.OD) GO TO 4600
	CTICK(CEVCUR)=30
	CFLAG(CEVCUR)=.TRUE.
4600	IF(FIGHTS(H,.TRUE.).GT.0) RETURN
	ASTREN(H)=1-FIGHTS(H,.FALSE.)		!HE'S DEAD.
	CALL JIGSUP(596)
	BLOW=-1
	RETURN
C
	END
C SWORDD- SWORD INTERMOVE DEMON
C
C DECLARATIONS
C
	SUBROUTINE SWORDD
	IMPLICIT INTEGER(A-Z)
	LOGICAL INFEST,FINDXT
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C EXITS
C
	COMMON /CURXT/ XTYPE,XROOM1,XSTRNG,XACTIO,XOBJ
	EQUIVALENCE (XFLAG,XOBJ)
C
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
C
C ADVENTURERS
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C SWORDD, PAGE 2
C
	IF(OADV(SWORD).NE.PLAYER) GO TO 500	!HOLDING SWORD?
	NG=2					!ASSUME VILL CLOSE.
	IF(INFEST(HERE)) GO TO 300		!VILL HERE?
	NG=1
	DO 200 I=XMIN,XMAX,XMIN			!NO, SEARCH ROOMS.
	  IF(.NOT.FINDXT(I,HERE)) GO TO 200	!ROOM THAT WAY?
	  GO TO (50,200,50,50),XTYPE		!SEE IF ROOM AT ALL.
50	  IF(INFEST(XROOM1)) GO TO 300		!CHECK ROOM.
200	CONTINUE
	NG=0					!NO GLOW.
C
300	IF(NG.EQ.SWDSTA) RETURN			!ANY STATE CHANGE?
	CALL RSPEAK(NG+495)			!YES, TELL NEW STATE.
	SWDSTA=NG
	RETURN
C
500	SWDACT=.FALSE.				!DROPPED SWORD,
	RETURN					!DISABLE DEMON.
	END
C INFEST-	SUBROUTINE TO TEST FOR INFESTED ROOM
C
C DECLARATIONS
C
	LOGICAL FUNCTION INFEST(R)
	IMPLICIT INTEGER(A-Z)
C
C ROOMS
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
	IF(.NOT.ENDGMF) INFEST=(OROOM(CYCLO).EQ.R).OR.
&		(OROOM(TROLL).EQ.R).OR.
&		((OROOM(THIEF).EQ.R).AND.THFACT)
	IF(ENDGMF) INFEST=(R.EQ.MRG).OR.(R.EQ.MRGE).OR.
&		(R.EQ.MRGW).OR.
&		((R.EQ.INMIR).AND.(MLOC.EQ.MRG))
	RETURN
	END
    C CEVAPP- CLOCK EVENT APPLICABLES
C
C DECLARATIONS
C
	SUBROUTINE CEVAPP(RI)
	IMPLICIT INTEGER (A-Z)
	INTEGER CNDTCK(10),LMPTCK(12)
	LOGICAL FINDXT,LIT,RMINFO,QOPEN,MOVETO
	LOGICAL F,QLEDGE,QVAIR,QHERE,PROB
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL
C
C EXITS
C
	COMMON /CURXT/ XTYPE,XROOM1,XSTRNG,XACTIO,XOBJ
	EQUIVALENCE (XFLAG,XOBJ)
C
	COMMON /XSRCH/ XMIN,XMAX,XDOWN,XUP,
&		XNORTH,XSOUTH,XENTER,XEXIT
C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	QOPEN(R)=(OFLAG2(R).AND.OPENBT).NE.0
	QLEDGE(R)=(R.EQ.LEDG2).OR.(R.EQ.LEDG3).OR.(R.EQ.LEDG4).OR.
&		(R.EQ.VLBOT)
	QVAIR(R)=(R.EQ.VAIR1).OR.(R.EQ.VAIR2).OR.(R.EQ.VAIR3).OR.
&		 (R.EQ.VAIR4)
	DATA CNDTCK/50,20,10,5,0,156,156,156,157,0/
	DATA LMPTCK/50,30,20,10,4,0,154,154,154,154,155,0/
C CEVAPP, PAGE 2
C
	IF(RI.EQ.0) RETURN			!IGNORE DISABLED.
	GO TO (1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,
&		11000,12000,13000,14000,15000,16000,17000,18000,19000,
&		20000,21000,22000,23000,24000),RI
	CALL BUG(3,RI)
C
C CEV1--	CURE CLOCK.  LET PLAYER SLOWLY RECOVER.
C
1000	ASTREN(PLAYER)=MIN0(0,ASTREN(PLAYER)+1)		!RECOVER.
	IF(ASTREN(PLAYER).GE.0) RETURN		!FULLY RECOVERED?
	CTICK(CEVCUR)=30			!NO, WAIT SOME MORE.
	RETURN
C
C CEV2--	MAINT-ROOM WITH LEAK.  RAISE THE WATER LEVEL.
C
2000	IF(HERE.EQ.MAINT) CALL RSPEAK(71+(RVMNT/2)) !DESCRIBE.
	RVMNT=RVMNT+1				!RAISE WATER LEVEL.
	IF(RVMNT.LE.16) RETURN			!IF NOT FULL, EXIT.
	CTICK(CEVMNT)=0				!FULL, DISABLE CLOCK.
	RFLAG(MAINT)=RFLAG(MAINT).OR.RMUNG	!MUNG ROOM.
	RRAND(MAINT)=80				!SAY IT IS FULL OF WATER.
	IF(HERE.EQ.MAINT) CALL JIGSUP(81)	!DROWN HIM IF PRESENT.
	RETURN
C
C CEV3--	LANTERN.  DESCRIBE GROWING DIMNESS.
C
3000	CALL LITINT(LAMP,ORLAMP,CEVLNT,LMPTCK,12) !DO LIGHT INTERRUPT.
	RETURN
C
C CEV4--	MATCH.  OUT IT GOES.
C
4000	CALL RSPEAK(153)			!MATCH IS OUT.
	OFLAG1(MATCH)=OFLAG1(MATCH).AND. .NOT.ONBT
	RETURN
C
C CEV5--	CANDLE.  DESCRIBE GROWING DIMNESS.
C
5000	CALL LITINT(CANDL,ORCAND,CEVCND,CNDTCK,10) !DO CANDLE INTERRUPT.
	RETURN
C CEVAPP, PAGE 3
C
C CEV6--	BALLOON
C
6000	CTICK(CEVBAL)=3				!RESCHEDULE INTERRUPT.
	F=AVEHIC(WINNER).EQ.BALLO		!SEE IF IN BALLOON.
	IF(BLOC.EQ.VLBOT) GO TO 6800		!AT BOTTOM?
	IF(QLEDGE(BLOC)) GO TO 6700		!ON LEDGE?
	IF(QOPEN(RECEP).AND.(BINFF.NE.0))
&		GO TO 6500			!INFLATED AND RECEP OPEN?.
C
C BALLOON IS IN MIDAIR AND IS DEFLATED (OR HAS RECEPTACLE CLOSED).
C FALL TO NEXT ROOM.
C
	IF(BLOC.NE.VAIR1) GO TO 6300		!IN VAIR1?
	BLOC=VLBOT				!YES, NOW AT VLBOT.
	CALL NEWSTA(BALLO,0,BLOC,0,0)
	IF(F) GO TO 6200			!IN BALLOON?
	IF(QLEDGE(HERE)) CALL RSPEAK(530)	!ON LEDGE, DESCRIBE.
	RETURN
C
6200	F=MOVETO(BLOC,WINNER)			!MOVE HIM.
	IF(BINFF.EQ.0) GO TO 6250		!IN BALLOON.  INFLATED?
	CALL RSPEAK(531)			!YES, LANDED.
	F=RMINFO(.FALSE.)			!DESCRIBE.
	RETURN
C
6250	CALL NEWSTA(BALLO,532,0,0,0)		!NO, BALLOON DIES.
	CALL NEWSTA(DBALL,0,BLOC,0,0)		!INSERT DEAD BALLOON.
	AVEHIC(WINNER)=0			!NOT IN VEHICLE.
	CFLAG(CEVBAL)=.FALSE.			!DISABLE INTERRUPTS.
	CFLAG(CEVBRN)=.FALSE.
	BINFF=0
	BTIEF=0
	RETURN
C
6300	BLOC=BLOC-1				!NOT IN VAIR1, DESCEND.
	CALL NEWSTA(BALLO,0,BLOC,0,0)
	IF(F) GO TO 6400			!IS HE IN BALLOON?
	IF(QLEDGE(HERE)) CALL RSPEAK(533)	!IF ON LEDGE, DESCRIBE.
	RETURN
C
6400	F=MOVETO(BLOC,WINNER)			!IN BALLOON, MOVE HIM.
	CALL RSPEAK(534)			!DESCRIBE.
	F=RMINFO(.FALSE.)
	RETURN
C
C BALLOON IS IN MIDAIR AND IS INFLATED, UP-UP-AND-AWAY!
C
6500	IF(BLOC.NE.VAIR4) GO TO 6600		!AT VAIR4?
	CTICK(CEVBRN)=.FALSE.			!DISABLE INTERRUPTS.
	CTICK(CEVBAL)=.FALSE.
	BINFF=0
	BTIEF=0
	BLOC=VLBOT				!FALL TO BOTTOM.
	CALL NEWSTA(BALLO,0,0,0,0)		!GET RID OF BALLOON.
	CALL NEWSTA(DBALL,0,BLOC,0,0)		!SUBSTITUTE DEAD BALLOON.
	IF(F) GO TO 6550			!WAS HE IN IT?
	IF(QLEDGE(HERE)) CALL RSPEAK(535)	!IF HE CAN SEE, DESCRIBE.
	RETURN
C
6550	CALL JIGSUP(536)			!IN BALLOON AT CRASH, DIE.
	RETURN
C
6600	BLOC=BLOC+1				!NOT AT VAIR4, GO UP.
	CALL NEWSTA(BALLO,0,BLOC,0,0)
	IF(F) GO TO 6650			!IN BALLOON?
	IF(QLEDGE(HERE)) CALL RSPEAK(537)	!CAN HE SEE IT?
	RETURN
C
6650	F=MOVETO(BLOC,WINNER)			!MOVE PLAYER.
	CALL RSPEAK(538)			!DESCRIBE.
	F=RMINFO(.FALSE.)
	RETURN
C
C ON LEDGE, GOES TO MIDAIR ROOM WHETHER INFLATED OR NOT.
C
6700	BLOC=BLOC+(VAIR2-LEDG2)			!MOVE TO MIDAIR.
	CALL NEWSTA(BALLO,0,BLOC,0,0)
	IF(F) GO TO 6750			!IN BALLOON?
	IF(QLEDGE(HERE)) CALL RSPEAK(539)	!NO, STRANDED.
	CTICK(CEVVLG)=10			!MATERIALIZE GNOME.
	RETURN
C
6750	F=MOVETO(BLOC,WINNER)			!MOVE TO NEW ROOM.
	CALL RSPEAK(540)			!DESCRIBE.
	F=RMINFO(.FALSE.)
	RETURN
C
C AT BOTTOM, GO UP IF INFLATED, DO NOTHING IF DEFLATED.
C
6800	IF((BINFF.EQ.0).OR..NOT.QOPEN(RECEP)) RETURN
	BLOC=VAIR1				!INFLATED AND OPEN,
	CALL NEWSTA(BALLO,0,BLOC,0,0)		!GO UP TO VAIR1.
	IF(F) GO TO 6850			!IN BALLOON?
	IF(QLEDGE(HERE)) CALL RSPEAK(541)	!IF CAN SEE, DESCRIBE.
	RETURN
C
6850	F=MOVETO(BLOC,WINNER)			!MOVE PLAYER.
	CALL RSPEAK(542)
	F=RMINFO(.FALSE.)
	RETURN
C CEVAPP, PAGE 4
C
C CEV7--	BALLOON BURNUP
C
7000	DO 7100 I=1,OLNT			!FIND BURNING OBJECT
	  IF((RECEP.EQ.OCAN(I)).AND.((OFLAG1(I).AND.FLAMBT).NE.0))
&		GO TO 7200			!IN RECEPTACLE.
7100	CONTINUE
	CALL BUG(4,0)
C
7200	CALL NEWSTA(I,0,0,0,0)		!VANISH OBJECT.
	BINFF=0					!UNINFLATED.
	IF(HERE.EQ.BLOC) CALL RSPSUB(292,ODESC2(I))	!DESCRIBE.
	RETURN
C
C CEV8--	FUSE FUNCTION
C
8000	IF(OCAN(FUSE).NE.BRICK) GO TO 8500	!IGNITED BRICK?
	BR=OROOM(BRICK)				!GET BRICK ROOM.
	BC=OCAN(BRICK)				!GET CONTAINER.
	IF((BR.EQ.0).AND.(BC.NE.0)) BR=OROOM(BC)
	CALL NEWSTA(FUSE,0,0,0,0)		!KILL FUSE.
	CALL NEWSTA(BRICK,0,0,0,0)		!KILL BRICK.
	IF((BR.NE.0).AND.(BR.NE.HERE)) GO TO 8100 !BRICK ELSEWHERE?
C
	RFLAG(HERE)=RFLAG(HERE).OR.RMUNG	!BLEW SELF.
	RRAND(HERE)=114				!MUNG ROOM.
	CALL JIGSUP(150)			!DEAD.
	RETURN
C
8100	CALL RSPEAK(151)			!BOOM.
	MUNGRM=BR				!SAVE ROOM THAT BLEW.
	CTICK(CEVSAF)=5				!SET SAFE INTERRUPT.
	IF(BR.NE.MSAFE) GO TO 8200		!BLEW SAFE ROOM?
	IF(BC.NE.SSLOT) RETURN			!WAS BRICK IN SAFE?
	CALL NEWSTA(SSLOT,0,0,0,0)		!KILL SLOT.
	OFLAG2(SAFE)=OFLAG2(SAFE).OR.OPENBT	!OPEN SAFE.
	SAFEF=.TRUE.				!INDICATE SAFE BLOWN.
	RETURN
C
8200	DO 8250 I=1,OLNT			!BLEW WRONG ROOM.
	  IF(QHERE(I,BR) .AND. ((OFLAG1(I).AND.TAKEBT).NE.0))
&		CALL NEWSTA(I,0,0,0,0)		!VANISH CONTENTS.
8250	CONTINUE
	IF(BR.NE.LROOM) RETURN			!BLEW LIVING ROOM?
	DO 8300 I=1,OLNT
	  IF(OCAN(I).EQ.TCASE) CALL NEWSTA(I,0,0,0,0) !KILL TROPHY CASE.
8300	CONTINUE
	RETURN
C
8500	IF(QHERE(FUSE,HERE).OR.(OADV(FUSE).EQ.WINNER))
&		CALL RSPEAK(152)
	CALL NEWSTA(FUSE,0,0,0,0)		!KILL FUSE.
	RETURN
C CEVAPP, PAGE 5
C
C CEV9--	LEDGE MUNGE.
C
9000	RFLAG(LEDG4)=RFLAG(LEDG4).OR.RMUNG	!LEDGE COLLAPSES.
	RRAND(LEDG4)=109
	IF(HERE.EQ.LEDG4) GO TO 9100		!WAS HE THERE?
	CALL RSPEAK(110)			!NO, NARROW ESCAPE.
	RETURN
C
9100	IF(AVEHIC(WINNER).NE.0) GO TO 9200	!IN VEHICLE?
	CALL JIGSUP(111)			!NO, DEAD.
	RETURN
C
9200	IF(BTIEF.NE.0) GO TO 9300		!TIED TO LEDGE?
	CALL RSPEAK(112)			!NO, NO PLACE TO LAND.
	RETURN
C
9300	BLOC=VLBOT				!YES, CRASH BALLOON.
	CALL NEWSTA(BALLO,0,0,0,0)
	CALL NEWSTA(DBALL,0,BLOC,0,0)
	BTIEF=0
	BINFF=0
	CFLAG(CEVBAL)=.FALSE.
	CFLAG(CEVBRN)=.FALSE.
	CALL JIGSUP(113)			!DEAD
	RETURN
C
C CEV10--	SAFE MUNG.
C
10000	RFLAG(MUNGRM)=RFLAG(MUNGRM).OR.RMUNG	!MUNG TARGET.
	RRAND(MUNGRM)=114
	IF(HERE.EQ.MUNGRM) GO TO 10100		!IS HE PRESENT?
	CALL RSPEAK(115)			!LET HIM KNOW.
	IF(MUNGRM.EQ.MSAFE) CTICK(CEVLED)=8	!START LEDGE CLOCK.
	RETURN
C
10100	I=116					!HE'S DEAD,
	IF((RFLAG(HERE).AND.RHOUSE).NE.0) I=117	!ONE WAY OR ANOTHER.
	CALL JIGSUP(I)				!LET HIM KNOW.
	RETURN
C CEVAPP, PAGE 6
C
C CEV11--	VOLCANO GNOME
C
11000	IF(QLEDGE(HERE)) GO TO 11100		!IS HE ON LEDGE?
	CTICK(CEVVLG)=1				!NO, WAIT A WHILE.
	RETURN
C
11100	CALL NEWSTA(GNOME,118,HERE,0,0)		!YES, MATERIALIZE GNOME.
	RETURN
C
C CEV12--	VOLCANO GNOME DISAPPEARS
C
12000	CALL NEWSTA(GNOME,149,0,0,0)		!DISAPPEAR THE GNOME.
	RETURN
C
C CEV13--	BUCKET.
C
13000	IF(OCAN(WATER).EQ.BUCKE)
&		CALL NEWSTA(WATER,0,0,0,0)	!WATER LEAKS OUT.
	RETURN
C
C CEV14--	SPHERE.  IF EXPIRES, HE'S TRAPPED.
C
14000	RFLAG(CAGER)=RFLAG(CAGER).OR.RMUNG	!MUNG ROOM.
	RRAND(CAGER)=147
	CALL JIGSUP(148)			!MUNG PLAYER.
	RETURN
C
C CEV15--	END GAME HERALD.
C
15000	ENDGMF=.TRUE.				!WE'RE IN ENDGAME.
	CALL RSPEAK(119)			!INFORM OF ENDGAME.
	RETURN
C CEVAPP, PAGE 7
C
C CEV16--	FOREST MURMURS
C
16000	CFLAG(CEVFOR)=(HERE.EQ.MTREE).OR.
&		((HERE.GE.FORE1).AND.(HERE.LT.CLEAR))
	IF(CFLAG(CEVFOR).AND.PROB(10,10)) CALL RSPEAK(635)
	RETURN
C
C CEV17--	SCOL ALARM
C
17000	IF(HERE.EQ.BKTWI) CFLAG(CEVZGI)=.TRUE.	!IF IN TWI, GNOME.
	IF(HERE.EQ.BKVAU) CALL JIGSUP(636)	!IF IN VAU, DEAD.
	RETURN
C
C CEV18--	ENTER GNOME OF ZURICH
C
18000	CFLAG(CEVZGO)=.TRUE.			!EXITS, TOO.
	CALL NEWSTA(ZGNOM,0,BKTWI,0,0)		!PLACE IN TWI.
	IF(HERE.EQ.BKTWI) CALL RSPEAK(637)	!ANNOUNCE.
	RETURN
C
C CEV19--	EXIT GNOME
C
19000	CALL NEWSTA(ZGNOM,0,0,0,0)		!VANISH.
	IF(HERE.EQ.BKTWI) CALL RSPEAK(638)	!ANNOUNCE.
	RETURN
C CEVAPP, PAGE 8
C
C CEV20--	START OF ENDGAME
C
20000	IF(SPELLF) GO TO 20200			!SPELL HIS WAY IN?
	IF(HERE.NE.CRYPT) RETURN		!NO, STILL IN TOMB?
	IF(.NOT.LIT(HERE)) GO TO 20100		!LIGHTS OFF?
	CTICK(CEVSTE)=3				!RESCHEDULE.
	RETURN
C
20100	CALL RSPEAK(727)			!ANNOUNCE.
20200	DO 20300 I=1,OLNT			!STRIP HIM OF OBJS.
	  CALL NEWSTA(I,0,OROOM(I),OCAN(I),0)
20300	CONTINUE
	CALL NEWSTA(LAMP,0,0,0,PLAYER)		!GIVE HIM LAMP.
	CALL NEWSTA(SWORD,0,0,0,PLAYER)		!GIVE HIM SWORD.
C
	OFLAG1(LAMP)=(OFLAG1(LAMP).OR.LITEBT).AND. .NOT.ONBT
	OFLAG2(LAMP)=OFLAG2(LAMP).OR.TCHBT
	CFLAG(CEVLNT)=.FALSE.			!LAMP IS GOOD AS NEW.
	CTICK(CEVLNT)=350
	ORLAMP=0
	OFLAG2(SWORD)=OFLAG2(SWORD).OR.TCHBT	!RECREATE SWORD.
	SWDACT=.TRUE.
	SWDSTA=0
C
	THFACT=.FALSE.				!THIEF GONE.
	ENDGMF=.TRUE.				!ENDGAME RUNNING.
	CFLAG(CEVMAT)=.FALSE.			!MATCHES GONE,
	CFLAG(CEVCND)=.FALSE.			!CANDLES GONE.
C
	CALL SCRUPD(RVAL(CRYPT))		!SCORE CRYPT,
	RVAL(CRYPT)=0				!BUT ONLY ONCE.
	F=MOVETO(TSTRS,WINNER)			!TO TOP OF STAIRS,
	F=RMINFO(.TRUE.)			!AND DESCRIBE.
	RETURN					!BAM!
C
C CEV21--	MIRROR CLOSES.
C
21000	MRPSHF=.FALSE.			!BUTTON IS OUT.
	MROPNF=.FALSE.				!MIRROR IS CLOSED.
	IF(HERE.EQ.MRANT) CALL RSPEAK(728)	!DESCRIBE BUTTON.
	IF((HERE.EQ.INMIR).OR.(MRHERE(HERE).EQ.1))
&		CALL RSPEAK(729)		!DESCRIBE MIRROR.
	RETURN
C CEVAPP, PAGE 9
C
C CEV22--	DOOR CLOSES.
C
22000	IF(WDOPNF) CALL RSPEAK(730)		!DESCRIBE.
	WDOPNF=.FALSE.				!CLOSED.
	RETURN
C
C CEV23--	INQUISITOR'S QUESTION
C
23000	IF(AROOM(PLAYER).NE.FDOOR) RETURN	!IF PLAYER LEFT, DIE.
	CALL RSPEAK(769)
	CALL RSPEAK(770+QUESNO)
	CTICK(CEVINQ)=2
	RETURN
C
C CEV24--	MASTER FOLLOWS
C
24000	IF(AROOM(AMASTR).EQ.HERE) RETURN	!NO MOVEMENT, DONE.
	IF((HERE.NE.CELL).AND.(HERE.NE.PCELL)) GO TO 24100
	IF(FOLLWF) CALL RSPEAK(811)		!WONT GO TO CELLS.
	FOLLWF=.FALSE.
	RETURN
C
24100	FOLLWF=.TRUE.				!FOLLOWING.
	I=812					!ASSUME CATCHES UP.
	DO 24200 J=XMIN,XMAX,XMIN
	  IF(FINDXT(J,AROOM(AMASTR)).AND.(XROOM1.EQ.HERE))
&		I=813				!ASSUME FOLLOWS.
24200	CONTINUE
	CALL RSPEAK(I)
	CALL NEWSTA(MASTER,0,HERE,0,0)		!MOVE MASTER OBJECT.
	AROOM(AMASTR)=HERE		!MOVE MASTER PLAYER.
	RETURN
C
	END
C LITINT-	LIGHT INTERRUPT PROCESSOR
C
C DECLARATIONS
C
	SUBROUTINE LITINT(OBJ,CTR,CEV,TICKS,TICKLN)
	IMPLICIT INTEGER (A-Z)
	INTEGER TICKS(TICKLN)
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	CTR=CTR+1				!ADVANCE STATE CNTR.
	CTICK(CEV)=TICKS(CTR)		!RESET INTERRUPT.
	IF(CTICK(CEV).NE.0) GO TO 100		!EXPIRED?
	OFLAG1(OBJ)=OFLAG1(OBJ).AND. .NOT.(LITEBT+FLAMBT+ONBT)
	IF((OROOM(OBJ).EQ.HERE).OR.(OADV(OBJ).EQ.WINNER))
&		CALL RSPSUB(293,ODESC2(OBJ))
	RETURN
C
100	IF((OROOM(OBJ).EQ.HERE).OR.(OADV(OBJ).EQ.WINNER))
&		CALL RSPEAK(TICKS(CTR+(TICKLN/2)))
	RETURN
C
	END
 C RAPPL1- SPECIAL PURPOSE ROOM ROUTINES, PART 1
C
C DECLARATIONS
C
	LOGICAL FUNCTION RAPPL1(RI)
	IMPLICIT INTEGER (A-Z)
	LOGICAL QOPEN,QON,QHERE,PROB,F
	LOGICAL MOVETO,LIT
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C SCREEN OF LIGHT
C
	COMMON /SCREEN/ FROMDR,SCOLRM,SCOLAC
	COMMON /SCREEN/ SCOLDR(8),SCOLWL(12)
C
C MISCELLANEOUS VARIABLES
C
	COMMON /BATS/ BATDRP(9)
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL

C
	LOGICAL THFFLG,THFACT,SWDACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	QOPEN(R)=(OFLAG2(R).AND.OPENBT).NE.0
	QON(R)=(OFLAG1(R).AND.ONBT).NE.0
C RAPPL1, PAGE 2
C
	RAPPL1=.TRUE.				!USUALLY IGNORED.
	IF(RI.EQ.0) RETURN			!RETURN IF NAUGHT.
C						!SET TO FALSE FOR
C						!NEW DESC NEEDED.
	GO TO (1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,
&		11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,
&		21000,22000,23000,24000,25000,26000,27000,28000,29000,30000,
&		 31000,32000,33000,34000,35000,36000,37000),RI
	CALL BUG(1,RI)
C
C R1--	EAST OF HOUSE.  DESCRIPTION DEPENDS ON STATE OF WINDOW
C
1000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	I=13					!ASSUME CLOSED.
	IF(QOPEN(WINDO)) I=12			!IF OPEN, AJAR.
	CALL RSPSUB(11,I)			!DESCRIBE.
	RETURN
C
C R2--	KITCHEN.  SAME VIEW FROM INSIDE.
C
2000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	I=13					!ASSUME CLOSED.
	IF(QOPEN(WINDO)) I=12			!IF OPEN, AJAR.
	CALL RSPSUB(14,I)			!DESCRIBE.
	RETURN
C
C R3--	LIVING ROOM.  DESCRIPTION DEPENDS ON MAGICF (STATE OF
C	DOOR TO CYCLOPS ROOM), RUG (MOVED OR NOT), DOOR (OPEN OR CLOSED)
C
3000	IF(PRSA.NE.LOOKW) GO TO 3500		!LOOK?
	I=15					!ASSUME NO HOLE.
	IF(MAGICF) I=16				!IF MAGICF, CYCLOPS HOLE.
	CALL RSPEAK(I)				!DESCRIBE.
	I=17+ORRUG				!ASSUME INITIAL STATE.
	IF(QOPEN(DOOR)) I=I+2			!DOOR OPEN?
	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
C	NOT A LOOK WORD.  REEVALUATE TROPHY CASE.
C
3500	IF((PRSA.NE.TAKEW).AND.((PRSA.NE.PUTW).OR.(PRSI.NE.TCASE)))
&		RETURN				!IF NOT TAKE OR PUT.
	ASCORE(WINNER)=RWSCOR			!SCORE TROPHY CASE.
	DO 3600 I=1,OLNT			!RETAIN RAW SCORE AS WELL.
	  J=I					!FIND OUT IF IN CASE.
3550	  J=OCAN(J)				!TRACE OWNERSHIP.
	  IF(J.EQ.0) GO TO 3600
	  IF(J.NE.TCASE) GO TO 3550		!DO ALL LEVELS.
	  ASCORE(WINNER)=ASCORE(WINNER)+OTVAL(I)
3600	CONTINUE
	CALL SCRUPD(0)				!SEE IF ENDGAME TRIG.
	RETURN
C RAPPL1, PAGE 3
C
C R4--	CELLAR.  SHUT DOOR AND BAR IT IF HE JUST WALKED IN.
C
4000	IF(PRSA.NE.LOOKW) GO TO 4500		!LOOK?
	CALL RSPEAK(21)				!DESCRIBE CELLAR.
	RETURN
C
4500	IF(PRSA.NE.WALKIW) RETURN		!WALKIN?
	IF((OFLAG2(DOOR).AND.(OPENBT+TCHBT)).NE.OPENBT) RETURN
	OFLAG2(DOOR)=(OFLAG2(DOOR).OR.TCHBT).AND. .NOT.OPENBT
	CALL RSPEAK(22)				!SLAM AND BOLT DOOR.
	RETURN
C
C R5--	MAZE11.  DESCRIBE STATE OF GRATING.
C
5000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(23)				!DESCRIBE.
	I=24					!ASSUME LOCKED.
	IF(GRUNLF) I=26				!UNLOCKED?
	IF(QOPEN(GRATE)) I=25			!OPEN?
	CALL RSPEAK(I)				!DESCRIBE GRATE.
	RETURN
C
C R6--	CLEARING.  DESCRIBE CLEARING, MOVE LEAVES.
C
6000	IF(PRSA.NE.LOOKW) GO TO 6500		!LOOK?
	CALL RSPEAK(27)				!DESCRIBE.
	IF(RVCLR.EQ.0) RETURN			!LEAVES MOVED?
	I=28					!YES, ASSUME GRATE CLOSED.
	IF(QOPEN(GRATE)) I=29			!OPEN?
	CALL RSPEAK(I)				!DESCRIBE GRATE.
	RETURN
C
6500	IF((RVCLR.NE.0).OR.(QHERE(LEAVE,CLEAR).AND.
&		((PRSA.NE.MOVEW).OR.(PRSO.NE.LEAVE)))) RETURN
	CALL RSPEAK(30)				!MOVE LEAVES, REVEAL GRATE.
	RVCLR=1					!INDICATE LEAVES MOVED.
	RETURN
C RAPPL1, PAGE 4
C
C R7--	RESERVOIR SOUTH.  DESCRIPTION DEPENDS ON LOW TIDE FLAG.
C
7000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	I=31					!ASSUME FULL.
	IF(LWTIDF) I=32				!IF LOW TIDE, EMPTY.
	CALL RSPEAK(I)				!DESCRIBE.
	CALL RSPEAK(33)				!DESCRIBE EXITS.
	RETURN
C
C R8--	RESERVOIR.  STATE DEPENDS ON LOW TIDE FLAG.
C
8000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	I=34					!ASSUME FULL.
	IF(LWTIDF) I=35				!IF LOW TIDE, EMTPY.
	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
C R9--	RESERVOIR NORTH.  ALSO DEPENDS ON LOW TIDE FLAG.
C
9000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	I=36					!YOU GET THE IDEA.
	IF(LWTIDF) I=37
	CALL RSPEAK(I)
	CALL RSPEAK(38)
	RETURN
C
C R10--	GLACIER ROOM.  STATE DEPENDS ON MELTED, VANISHED FLAGS.
C
10000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(39)				!BASIC DESCRIPTION.
	I=0					!ASSUME NO CHANGES.
	IF(GLACMF) I=40				!PARTIAL MELT?
	IF(GLACRF) I=41				!COMPLETE MELT?
	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
C R11--	FOREST ROOM
C
11000	IF(PRSA.EQ.WALKIW) CFLAG(CEVFOR)=.TRUE.	!IF WALK IN, BIRDIE.
	RETURN
C
C R12--	MIRROR ROOM.  STATE DEPENDS ON MIRROR INTACT.
C
12000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(42)				!DESCRIBE.
	IF(MIRRMF) CALL RSPEAK(43)		!IF BROKEN, NASTY REMARK.
	RETURN
C RAPPL1, PAGE 5
C
C R13--	CAVE2 ROOM.  BLOW OUT CANDLES WITH 50% PROBABILITY.
C
13000	IF(PRSA.NE.WALKIW) RETURN		!WALKIN?
	IF(PROB(50,50).OR.(OADV(CANDL).NE.WINNER).OR.
&		.NOT.QON(CANDL)) RETURN		!BLOW EM OUT?
	OFLAG1(CANDL)=OFLAG1(CANDL).AND. .NOT. ONBT	!YES.
	CALL RSPEAK(47)				!TELL OF WINDS.
	CFLAG(CEVCND)=.FALSE.			!HALT CANDLE COUNTDOWN.
	RETURN
C
C R14--	BOOM ROOM.  BLOW HIM UP IF CARRYING FLAMING OBJECT.
C
14000	J=ODESC2(CANDL)				!ASSUME CANDLE.
	IF((OADV(CANDL).EQ.WINNER).AND.QON(CANDL)) GO TO 14100
	J=ODESC2(TORCH)				!ASSUME TORCH.
	IF((OADV(TORCH).EQ.WINNER).AND.QON(TORCH)) GO TO 14100
	J=ODESC2(MATCH)
	IF((OADV(MATCH).EQ.WINNER).AND.QON(MATCH)) GO TO 14100
	RETURN					!SAFE
C
14100	IF(PRSA.NE.TRNONW) GO TO 14200		!TURN ON?
	CALL RSPSUB(294,J)			!BOOM!
	CALL JIGSUP(44)
	RETURN
C
14200	IF(PRSA.NE.WALKIW) RETURN		!WALKIN?
	CALL RSPSUB(295,J)			!BOOM!
	CALL JIGSUP(44)
	RETURN
C
C R15--	NO-OBJS.  SEE IF EMPTY HANDED, SCORE LIGHT SHAFT.
C
15000	EMPTHF=.TRUE.				!ASSUME TRUE.
	DO 15100 I=1,OLNT			!SEE IF CARRYING.
	  IF(OADV(I).EQ.WINNER) EMPTHF=.FALSE.
15100	CONTINUE
C
	IF((HERE.NE.BSHAF).OR.(.NOT.LIT(HERE))) RETURN
	CALL SCRUPD(LTSHFT)			!SCORE LIGHT SHAFT.
	LTSHFT=0				!NEVER AGAIN.
	RETURN
C RAPPL1, PAGE 6
C
C R16--	MACHINE ROOM.  DESCRIBE MACHINE.
C
16000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	I=46					!ASSUME LID CLOSED.
	IF(QOPEN(MACHI)) I=12			!IF OPEN, OPEN.
	CALL RSPSUB(45,I)			!DESCRIBE.
	RETURN
C
C R17--	BAT ROOM.  UNLESS CARRYING GARLIC, FLY AWAY WITH ME...
C
17000	IF(PRSA.NE.LOOKW) GO TO 17500		!LOOK?
	CALL RSPEAK(48)				!DESCRIBE ROOM.
	IF(OADV(GARLI).EQ.WINNER) CALL RSPEAK(49) !BAT HOLDS NOSE.
	RETURN
C
17500	IF((PRSA.NE.WALKIW).OR.(OADV(GARLI).EQ.WINNER)) RETURN
	CALL RSPEAK(50)				!TIME TO FLY, JACK.
	F=MOVETO(BATDRP(RND(9)+1),WINNER)	!SELECT RANDOM DEST.
	RAPPL1=.FALSE.				!INDICATE NEW DESC NEEDED.
	RETURN
C
C R18--	DOME ROOM.  STATE DEPENDS ON WHETHER ROPE TIED TO RAILING.
C
18000	IF(PRSA.NE.LOOKW) GO TO 18500		!LOOK?
	CALL RSPEAK(51)				!DESCRIBE.
	IF(DOMEF) CALL RSPEAK(52)		!IF ROPE, DESCRIBE.
	RETURN
C
18500	IF(PRSA.EQ.LEAPW) CALL JIGSUP(53)	!DID HE JUMP???
	RETURN
C
C R19--	TORCH ROOM.  ALSO DEPENDS ON WHETHER ROPE TIED TO RAILING.
C
19000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(54)				!DESCRIBE.
	IF(DOMEF) CALL RSPEAK(55)		!IF ROPE, DESCRIBE.
	RETURN
C
C R20--	CAROUSEL ROOM.  SPIN HIM OR KILL HIM.
C
20000	IF(PRSA.NE.LOOKW) GO TO 20500		!LOOK?
	CALL RSPEAK(56)				!DESCRIBE.
	IF(.NOT.CAROFF) CALL RSPEAK(57)		!IF NOT FLIPPED, SPIN.
	RETURN
C
20500	IF((PRSA.EQ.WALKIW).AND.CAROZF) CALL JIGSUP(58)	!WALKED IN.
	RETURN
C RAPPL1, PAGE 7
C
C R21--	LLD ROOM.  HANDLE EXORCISE, DESCRIPTIONS.
C
21000	IF(PRSA.NE.LOOKW) GO TO 21500		!LOOK?
	CALL RSPEAK(59)				!DESCRIBE.
	IF(.NOT.LLDF) CALL RSPEAK(60)		!IF NOT VANISHED, GHOSTS.
	RETURN
C
21500	IF(PRSA.NE.EXORCW) RETURN		!EXORCISE?
	IF((OADV(BELL).EQ.WINNER).AND.(OADV(BOOK).EQ.WINNER).AND.
&		(OADV(CANDL).EQ.WINNER).AND.QON(CANDL)) GO TO 21600
	CALL RSPEAK(62)				!NOT EQUIPPED.
	RETURN
C
21600	IF(QHERE(GHOST,HERE)) GO TO 21700	!GHOST HERE?
	CALL JIGSUP(61)				!NOPE, EXORCISE YOU.
	RETURN
C
21700	CALL NEWSTA(GHOST,63,0,0,0)		!VANISH GHOST.
	LLDF=.TRUE.				!OPEN GATE.
	RETURN
C
C R22--	LLD2-ROOM.  IS HIS HEAD ON A POLE?
C
22000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(64)				!DESCRIBE.
	IF(ONPOLF) CALL RSPEAK(65)		!ON POLE?
	RETURN
C
C R23--	DAM ROOM.  DESCRIBE RESERVOIR, PANEL.
C
23000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(66)				!DESCRIBE.
	I=67
	IF(LWTIDF) I=68
	CALL RSPEAK(I)				!DESCRIBE RESERVOIR.
	CALL RSPEAK(69)				!DESCRIBE PANEL.
	IF(GATEF) CALL RSPEAK(70)		!BUBBLE IS GLOWING.
	RETURN
C
C R24--	TREE ROOM
C
24000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(660)			!DESCRIBE.
	I=661					!SET FLAG FOR BELOW.
	DO 24200 J=1,OLNT			!DESCRIBE OBJ IN FORE3.
	  IF(.NOT.QHERE(J,FORE3).OR.(J.EQ.FTREE)) GO TO 24200
	  CALL RSPEAK(I)			!SET STAGE,
	  I=0
	  CALL RSPSUB(502,ODESC2(J))		!DESCRIBE.
24200	CONTINUE
	RETURN
C RAPPL1, PAGE 8
C
C R25--	CYCLOPS-ROOM.  DEPENDS ON CYCLOPS STATE, ASLEEP FLAG, MAGIC FLAG.
C
25000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(606)			!DESCRIBE.
	I=607					!ASSUME BASIC STATE.
	IF(RVCYC.GT.0) I=608			!>0?  HUNGRY.
	IF(RVCYC.LT.0) I=609			!<0?  THIRSTY.
	IF(CYCLOF) I=610			!ASLEEP?
	IF(MAGICF) I=611			!GONE?
	CALL RSPEAK(I)				!DESCRIBE.
	IF(.NOT.CYCLOF .AND.(RVCYC.NE.0))
&		CALL RSPEAK(193+IABS(RVCYC))	!CYCLOPS IS ANNOYED.
	RETURN
C
C R26--	BANK BOX ROOM.
C
26000	IF(PRSA.NE.WALKIW) RETURN		!SURPRISE HIM.
	DO 26100 I=1,8,2			!SCOLRM DEPENDS ON
	  IF(FROMDR.EQ.SCOLDR(I)) SCOLRM=SCOLDR(I+1)
26100	CONTINUE				!ENTRY DIRECTION.
	RETURN
C
C R27--	TREASURE ROOM.
C
27000	IF((PRSA.NE.WALKIW).OR. .NOT.THFACT)
&		RETURN				!WALKIN, THIEF ACTIVE?
	IF(OROOM(THIEF).NE.HERE)
&		CALL NEWSTA(THIEF,82,HERE,0,0)	!NO, MATERIALIZE HIM.
	THFPOS=HERE				!RESET SEARCH PATTERN.
	OFLAG2(THIEF)=OFLAG2(THIEF).OR.FITEBT	!HE'S ANGRY.
	IF(OROOM(CHALI).EQ.HERE)
&		OFLAG1(CHALI)=OFLAG1(CHALI).AND..NOT.TAKEBT
C
C	VANISH EVERYTHING IN ROOM
C
	J=0					!ASSUME NOTHING TO VANISH.
	DO 27200 I=1,OLNT
	  IF((I.EQ.CHALI).OR.(I.EQ.THIEF).OR..NOT.QHERE(I,HERE))
&		GO TO 27200			!HERE?
	  J=83					!FLAG BYEBYE.
	  OFLAG1(I)=OFLAG1(I).AND..NOT.VISIBT	!AWAY IT GOES.
27200	CONTINUE
	CALL RSPEAK(J)				!DESCRIBE.
	RETURN
C
C R28--	CLIFF FUNCTION.  SEE IF CARRYING INFLATED BOAT.
C
28000	DEFLAF=OADV(RBOAT).NE.WINNER		!TRUE IF NOT CARRYING.
	RETURN
C RAPPL1, PAGE 9
C
C R29--	RIVR4 ROOM.  PLAY WITH BUOY.
C
29000	IF(.NOT.BUOYF.OR.(OADV(BUOY).NE.WINNER)) RETURN
	CALL RSPEAK(84)				!GIVE HINT,
	BUOYF=.FALSE.				!THEN DISABLE.
	RETURN
C
C R30--	OVERFALLS.  DOOM.
C
30000	IF(PRSA.NE.LOOKW) CALL JIGSUP(85)	!OVER YOU GO.
	RETURN
C
C R31--	BEACH ROOM.  DIG A HOLE.
C
31000	IF((PRSA.NE.DIGW).OR.(PRSO.NE.SHOVE)) RETURN
	RVSND=RVSND+1				!INCREMENT DIG STATE.
	GO TO (31100,31100,31100,31400,31500),RVSND !PROCESS STATE.
	CALL BUG(2,RVSND)
C
31100	CALL RSPEAK(85+RVSND)			!1-3... DISCOURAGE HIM.
	RETURN
C
31400	I=89					!ASSUME DISCOVERY.
	IF((OFLAG1(STATU).AND.VISIBT).NE.0) I=88 !ALREADY DONE.
	CALL RSPEAK(I)
	OFLAG1(STATU)=OFLAG1(STATU).OR.VISIBT	!MATERIALIZE STATUE.
	RETURN
C
31500	RVSND=0					!5... SAND COLLAPSES
	CALL JIGSUP(90)				!AND SO DOES HE.
	RETURN
C
C R32--	TCAVE ROOM.  DIG A HOLE IN GUANO.
C
32000	IF((PRSA.NE.DIGW).OR.(PRSO.NE.SHOVE)) RETURN
	I=91					!ASSUME NO GUANO.
	IF(.NOT. QHERE(GUANO,HERE)) GO TO 32100	!IS IT HERE?
	RVGUA=MIN0(4,RVGUA+1)		!YES, SET NEW STATE.
	I=91+RVGUA				!GET NASTY REMARK.
32100	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
C R33--	FALLS ROOM
C
33000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(96)				!DESCRIBE.
	I=97					!ASSUME NO RAINBOW.
	IF(RAINBF) I=98				!GOT ONE?
	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C RAPPL1, PAGE 10
C
C R34--	LEDGE FUNCTION.  LEDGE CAN COLLAPSE.
C
34000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(100)			!DESCRIBE.
	I=102					!ASSUME SAFE ROOM OK.
	IF((RFLAG(MSAFE).AND.RMUNG).NE.0) I=101	!IF MUNGED, ROOM GONE.
	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
C R35--	SAFE ROOM.  STATE DEPENDS ON WHETHER SAFE BLOWN.
C
35000	IF(PRSA.NE.LOOKW) RETURN		!LOOK?
	CALL RSPEAK(104)			!DESCRIBE.
	I=105					!ASSUME OK.
	IF(SAFEF) I=106				!BLOWN?
	CALL RSPEAK(I)				!DESCRIBE.
	RETURN
C
C R36--	MAGNET ROOM.  DESCRIBE, CHECK FOR SPINDIZZY DOOM.
C
36000	IF(PRSA.NE.LOOKW) GO TO 36500		!LOOK?
	CALL RSPEAK(107)			!DESCRIBE.
	RETURN
C
36500	IF((PRSA.NE.WALKIW).OR. .NOT.CAROFF) RETURN	!WALKIN ON FLIPPED?
	IF(CAROZF) GO TO 36600			!ZOOM?
	CALL RSPEAK(108)			!NO, SPIN HIS COMPASS.
	RETURN
C
36600	I=58					!SPIN HIS INSIDES.
	IF(WINNER.NE.PLAYER) I=99		!SPIN ROBOT.
	CALL JIGSUP(I)				!DEAD.
	RETURN
C
C R37--	CAGE ROOM.  IF SOLVED CAGE, MOVE TO OTHER CAGE ROOM.
C
37000	IF(CAGESF) F=MOVETO(CAGER,WINNER)	!IF SOLVED, MOVE.
	RETURN
C
	END
    C SOBJS-	SIMPLE OBJECTS PROCESSOR
C	OBJECTS IN THIS MODULE CANNOT CALL RMINFO, JIGSUP,
C	MAJOR VERBS, OR OTHER NON-RESIDENT SUBROUTINES
C
C DECLARATIONS
C
	LOGICAL FUNCTION SOBJS(RI,ARG)
	IMPLICIT INTEGER (A-Z)
	LOGICAL QOPEN
	LOGICAL MOVETO,OPNCLS,LIT
	LOGICAL QHERE,F
C
C PARSER OUTPUT
C
	LOGICAL PRSWON
	COMMON /PRSVEC/ PRSA,PRSI,PRSO,PRSWON,PRSCON
C
C GAME STATE
C
	LOGICAL TELFLG
	COMMON /PLAY/ WINNER,HERE,TELFLG
	COMMON /STATE/ MOVES,DEATHS,RWSCOR,MXSCOR,MXLOAD,
&		LTSHFT,BLOC,MUNGRM,HS,EGSCOR,EGMXSC
C
C ROOMS
C
	COMMON /ROOMS/ RLNT,RDESC2,RDESC1(215),REXIT(215),
&		RACTIO(215),RVAL(215),RFLAG(215)
	INTEGER RRAND(215)
	EQUIVALENCE (RVAL,RRAND)
C
	COMMON /RFLAG/ RSEEN,RLIGHT,RLAND,RWATER,RAIR,
&		RSACRD,RFILL,RMUNG,RBUCK,RHOUSE,RNWALL,REND
C
	COMMON /RINDEX/ WHOUS,LROOM,CELLA
	COMMON /RINDEX/ MTROL,MAZE1	
	COMMON /RINDEX/ MGRAT,MAZ15	
	COMMON /RINDEX/ FORE1,FORE3,CLEAR,RESER
	COMMON /RINDEX/ STREA,EGYPT,ECHOR
	COMMON /RINDEX/ TSHAF	
	COMMON /RINDEX/ BSHAF,MMACH,DOME,MTORC
	COMMON /RINDEX/ CAROU	
	COMMON /RINDEX/ RIDDL,LLD2,TEMP1,TEMP2,MAINT
	COMMON /RINDEX/ BLROO,TREAS,RIVR1,RIVR2,RIVR3,MCYCL
	COMMON /RINDEX/ RIVR4,RIVR5,FCHMP,FALLS,MBARR
	COMMON /RINDEX/ MRAIN,POG,VLBOT,VAIR1,VAIR2,VAIR3,VAIR4
	COMMON /RINDEX/ LEDG2,LEDG3,LEDG4,MSAFE,CAGER
	COMMON /RINDEX/ CAGED,TWELL,BWELL,ALICE,ALISM,ALITR
	COMMON /RINDEX/ MTREE,BKENT,BKVW,BKTWI,BKVAU,BKBOX
	COMMON /RINDEX/ CRYPT,TSTRS,MRANT,MREYE
	COMMON /RINDEX/ MRA,MRB,MRC,MRG,MRD,FDOOR
	COMMON /RINDEX/ MRAE,MRCE,MRCW,MRGE,MRGW,MRDW,INMIR
	COMMON /RINDEX/ SCORR,NCORR,PARAP,CELL,PCELL,NCELL
C
C OBJECTS
C
	COMMON /OBJCTS/ OLNT,ODESC1(250),ODESC2(250),ODESCO(250),
&		OACTIO(250),OFLAG1(250),OFLAG2(250),OFVAL(250),
&		OTVAL(250),OSIZE(250),OCAPAC(250),OROOM(250),
&			OADV(250),OCAN(250),OREAD(250)
C
	COMMON /OFLAGS/ VISIBT,READBT,TAKEBT,DOORBT,TRANBT,FOODBT,
&		NDSCBT,DRNKBT,CONTBT,LITEBT,VICTBT,BURNBT,FLAMBT,
&		TOOLBT,TURNBT,ONBT
	COMMON /OFLAGS/ FINDBT,SLEPBT,SCRDBT,TIEBT,CLMBBT,ACTRBT,
&		WEAPBT,FITEBT,VILLBT,STAGBT,TRYBT,NOCHBT,OPENBT,
&		TCHBT,VEHBT,SCHBT
C
	COMMON /OINDEX/ GARLI,FOOD,GUNK,COAL,MACHI,DIAMO,TCASE,BOTTL
	COMMON /OINDEX/ WATER,ROPE,KNIFE,SWORD,LAMP,BLAMP,RUG
	COMMON /OINDEX/	LEAVE,TROLL,AXE
	COMMON /OINDEX/ RKNIF,KEYS,ICE,BAR
	COMMON /OINDEX/ COFFI,TORCH,TBASK,FBASK,IRBOX
	COMMON /OINDEX/ GHOST,TRUNK,BELL,BOOK,CANDL
	COMMON /OINDEX/ MATCH,TUBE,PUTTY,WRENC,SCREW,CYCLO,CHALI
	COMMON /OINDEX/ THIEF,STILL,WINDO,GRATE,DOOR
	COMMON /OINDEX/ HPOLE,LEAK,RBUTT,RAILI
	COMMON /OINDEX/ POT,STATU,IBOAT,DBOAT,PUMP,RBOAT
	COMMON /OINDEX/ STICK,BUOY,SHOVE,BALLO,RECEP,GUANO
	COMMON /OINDEX/ BROPE,HOOK1,HOOK2,SAFE,SSLOT,BRICK,FUSE
	COMMON /OINDEX/ GNOME,BLABE,DBALL,TOMB
	COMMON /OINDEX/ LCASE,CAGE,RCAGE,SPHER,SQBUT
	COMMON /OINDEX/ FLASK,POOL,SAFFR,BUCKE,ECAKE,ORICE,RDICE,BLICE
	COMMON /OINDEX/ ROBOT,FTREE,BILLS,PORTR,SCOL,ZGNOM
	COMMON /OINDEX/ EGG,BEGG,BAUBL,CANAR,BCANA
	COMMON /OINDEX/ YLWAL,RDWAL,PINDR,RBEAM
	COMMON /OINDEX/ ODOOR,QDOOR,CDOOR,NUM1,NUM8
	COMMON /OINDEX/ HANDS,WALL,LUNGS,SAILO,AVIAT,TEETH
	COMMON /OINDEX/ ITOBJ,EVERY,VALUA,OPLAY,WNORT,GWATE,MASTER
C
C CLOCK INTERRUPTS
C
	LOGICAL CFLAG
	COMMON /CEVENT/ CLNT,CTICK(25),CACTIO(25),CFLAG(25)
C
	COMMON /CINDEX/ CEVCUR,CEVMNT,CEVLNT,CEVMAT,CEVCND,
&		CEVBAL,CEVBRN,CEVFUS,CEVLED,CEVSAF,CEVVLG,
&		CEVGNO,CEVBUC,CEVSPH,CEVEGH,
&			CEVFOR,CEVSCL,CEVZGI,CEVZGO,CEVSTE,
&		CEVMRS,CEVPIN,CEVINQ,CEVFOL

C
C VILLAINS AND DEMONS
C
	LOGICAL THFFLG,SWDACT,THFACT
	COMMON /HACK/ THFPOS,THFFLG,THFACT,SWDACT,SWDSTA
C
C ADVENTURERS
C
	COMMON /ADVS/ ALNT,AROOM(4),ASCORE(4),AVEHIC(4),
&		AOBJ(4),AACTIO(4),ASTREN(4),AFLAG(4)
C
	COMMON /AINDEX/ PLAYER,AROBOT,AMASTR
C
C VERBS
C
	COMMON /VINDEX/ CINTW,DEADXW,FRSTQW,INXW,OUTXW
	COMMON /VINDEX/ WALKIW,FIGHTW,FOOW
	COMMON /VINDEX/ MELTW,READW,INFLAW,DEFLAW,ALARMW,EXORCW
	COMMON /VINDEX/ PLUGW,KICKW,WAVEW,RAISEW,LOWERW,RUBW
	COMMON /VINDEX/ PUSHW,UNTIEW,TIEW,TIEUPW,TURNW,BREATW
	COMMON /VINDEX/ KNOCKW,LOOKW,EXAMIW,SHAKEW,MOVEW,TRNONW,TRNOFW
	COMMON /VINDEX/ OPENW,CLOSEW,FINDW,WAITW,SPINW,BOARDW,UNBOAW,TAKEW
	COMMON /VINDEX/ INVENW,FILLW,EATW,DRINKW,BURNW
	COMMON /VINDEX/ MUNGW,KILLW,ATTACW,SWINGW
	COMMON /VINDEX/ WALKW,TELLW,PUTW,DROPW,GIVEW,POURW,THROWW
	COMMON /VINDEX/ DIGW,LEAPW,STAYW,FOLLOW
	COMMON /VINDEX/ HELLOW,LOOKIW,LOOKUW,PUMPW,WINDW
	COMMON /VINDEX/ CLMBW,CLMBUW,CLMBDW,TRNTOW
C
C FLAGS
C
	LOGICAL TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF
	LOGICAL DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF
	LOGICAL MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF
	LOGICAL EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF
	LOGICAL GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF
	LOGICAL GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF
	LOGICAL MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF
	LOGICAL FOLLWF,SPELLF,sprf
	COMMON /FINDEX/ TROLLF,CAGESF,BUCKTF,CAROFF,CAROZF,LWTIDF,
&		DOMEF,GLACRF,ECHOF,RIDDLF,LLDF,CYCLOF,
&		MAGICF,LITLDF,SAFEF,GNOMEF,GNODRF,MIRRMF,
&			EGYPTF,ONPOLF,BLABF,BRIEFF,SUPERF,BUOYF,
&		GRUNLF,GATEF,RAINBF,CAGETF,EMPTHF,DEFLAF,
&		GLACMF,FROBZF,ENDGMF,BADLKF,THFENF,SINGSF,
&		MRPSHF,MROPNF,WDOPNF,MR1F,MR2F,INQSTF,
&		follwf,spellf,sprf(6)
	COMMON /FINDEX/ BTIEF,BINFF
	COMMON /FINDEX/ RVMNT,RVCLR,RVCYC,RVSND,RVGUA
	COMMON /FINDEX/ ORRUG,ORCAND,ORMTCH,ORLAMP
	COMMON /FINDEX/ MDIR,MLOC,POLEUF
	COMMON /FINDEX/ QUESNO,NQATT,CORRCT
	COMMON /FINDEX/ LCELL,PNUMB,ACELL,DCELL
C
C FUNCTIONS AND DATA
C
	QOPEN(R)=(OFLAG2(R).AND.OPENBT).NE.0
C SOBJS, PAGE 2
C
	IF(PRSO.NE.0) ODO2=ODESC2(PRSO)
	IF(PRSI.NE.0) ODI2=ODESC2(PRSI)
	AV=AVEHIC(WINNER)
	SOBJS=.TRUE.
C
	GO TO (1000,3000,4000,6000,7000,8000,9000,
&		13000,14000,16000,17000,
&		21000,23000,24000,27000,28000,29000,30000,
&		31000,33000,34000,36000,37000,38000,
&		41000,42000,43000,44000,46000,
&		53000,56000)RI
	CALL BUG(6,RI)
C
C RETURN HERE TO DECLARE FALSE RESULT
C
10	SOBJS=.FALSE.
	RETURN
C SOBJS, PAGE 3
C
C O1--	GUNK FUNCTION
C
1000	IF(OCAN(GUNK).EQ.0) GO TO 10		!NOT INSIDE? F
	CALL NEWSTA(GUNK,122,0,0,0)		!FALLS APART.
	RETURN
C
C O2--	TROPHY CASE
C
3000	IF(PRSA.NE.TAKEW) GO TO 10		!TAKE?
	CALL RSPEAK(128)			!CANT.
	RETURN
C
C O3--	BOTTLE FUNCTION
C
4000	IF(PRSA.NE.THROWW) GO TO 4100		!THROW?
	CALL NEWSTA(PRSO,129,0,0,0)		!BREAKS.
	RETURN
C
4100	IF(PRSA.NE.MUNGW) GO TO 10		!MUNG?
	CALL NEWSTA(PRSO,131,0,0,0)		!BREAKS.
	RETURN
C SOBJS, PAGE 4
C
C O4--	ROPE FUNCTION
C
6000	IF(HERE.EQ.DOME) GO TO 6100		!IN DOME?
	DOMEF=.FALSE.				!NO,
	IF(PRSA.NE.UNTIEW) GO TO 6050		!UNTIE?
	CALL RSPEAK(134)			!CANT
	RETURN
C
6050	IF(PRSA.NE.TIEW) GO TO 10		!TIE?
	CALL RSPEAK(135)			!CANT TIE
	RETURN
C
6100	IF((PRSA.NE.TIEW).OR.(PRSI.NE.RAILI)) GO TO 6200
	IF(DOMEF) GO TO 6150			!ALREADY TIED?
	DOMEF=.TRUE.				!NO, TIE IT.
	OFLAG1(ROPE)=OFLAG1(ROPE).OR.NDSCBT
	OFLAG2(ROPE)=OFLAG2(ROPE).OR.CLMBBT
	CALL NEWSTA(ROPE,137,DOME,0,0)
	RETURN
C
6150	CALL RSPEAK(136)			!DUMMY.
	RETURN
C
6200	IF(PRSA.NE.UNTIEW) GO TO 6300		!UNTIE?
	IF(DOMEF) GO TO 6250			!TIED?
	CALL RSPEAK(138)			!NO, DUMMY.
	RETURN
C
6250	DOMEF=.FALSE.				!YES, UNTIE IT.
	OFLAG1(ROPE)=OFLAG1(ROPE).AND. .NOT.NDSCBT
	OFLAG2(ROPE)=OFLAG2(ROPE).AND. .NOT.CLMBBT
	CALL RSPEAK(139)
	RETURN
C
6300	IF(DOMEF.OR.(PRSA.NE.DROPW)) GO TO 6400	!DROP & UNTIED?
	CALL NEWSTA(ROPE,140,MTORC,0,0)		!YES, DROP.
	RETURN
C
6400	IF((PRSA.NE.TAKEW).OR. .NOT.DOMEF) GO TO 10
	CALL RSPEAK(141)			!TAKE & TIED.
	RETURN
C
C O5--	SWORD FUNCTION
C
7000	IF((PRSA.EQ.TAKEW).AND.(WINNER.EQ.PLAYER))
&		SWDACT=.TRUE.			!TURN ON DEMON.
	GO TO 10
C
C O6--	LANTERN
C
8000	IF(PRSA.NE.THROWW) GO TO 8100		!THROW?
	CALL NEWSTA(LAMP,142,0,0,0)		!BREAKS,
	CALL NEWSTA(BLAMP,0,HERE,0,0)		!REPLACED.
	RETURN
C
8100	IF(PRSA.EQ.TRNONW) CFLAG(CEVLNT)=.TRUE.
	IF(PRSA.EQ.TRNOFW) CFLAG(CEVLNT)=.FALSE.
	GO TO 10
C
C O7--	RUG FUNCTION
C
9000	IF(PRSA.NE.RAISEW) GO TO 9100		!RAISE?
	CALL RSPEAK(143)			!CANT
	RETURN
C
9100	IF(PRSA.NE.TAKEW) GO TO 9200		!TAKE?
	CALL RSPEAK(144)			!CANT
	RETURN
C
9200	IF(PRSA.NE.MOVEW) GO TO 9300		!MOVE?
	CALL RSPEAK(145+ORRUG)
	ORRUG=1
	OFLAG1(DOOR)=OFLAG1(DOOR).OR.VISIBT	!REVEAL DOOR.
	RETURN
C
9300	IF((PRSA.NE.LOOKUW).OR.(ORRUG.NE.0).OR.
&		QOPEN(DOOR)) GO TO 10		!LOOK UNDER RUG?
	CALL RSPEAK(345)
	RETURN
C SOBJS, PAGE 5
C
C O8--	SKELETON
C
13000	I=ROBRM(HERE,100,LLD2,0,0)+ROBADV(WINNER,LLD2,0,0)
	IF(I.NE.0) CALL RSPEAK(162)		!IF ROBBED, SAY SO.
	RETURN
C
C O9--	MIRROR
C
14000	IF(MIRRMF.OR.(PRSA.NE.RUBW)) GO TO 14500
	MROOM=HERE.XOR.1			!CALCULATE NEW RM.
	DO 14100 I=1,OLNT			!INTERCHANGE OBJS.
	  IF(OROOM(I).EQ.HERE) OROOM(I)=-1
	  IF(OROOM(I).EQ.MROOM) OROOM(I)=HERE
	  IF(OROOM(I).EQ.-1) OROOM(I)=MROOM
14100	CONTINUE
	F=MOVETO(MROOM,WINNER)
	CALL RSPEAK(163)			!SHAKE WORLD.
	RETURN
C
14500	IF((PRSA.NE.LOOKW).AND.(PRSA.NE.LOOKIW).AND.
&		(PRSA.NE.EXAMIW)) GO TO 14600
	I=164					!MIRROR OK.
	IF(MIRRMF) I=165			!MIRROR DEAD.
	CALL RSPEAK(I)
	RETURN
C
14600	IF(PRSA.NE.TAKEW) GO TO 14700		!TAKE?
	CALL RSPEAK(166)			!JOKE.
	RETURN
C
14700	IF((PRSA.NE.MUNGW).AND.(PRSA.NE.THROWW)) GO TO 10
	I=167					!MIRROR BREAKS.
	IF(MIRRMF) I=168			!MIRROR ALREADY BROKEN.
	MIRRMF=.TRUE.
	BADLKF=.TRUE.
	CALL RSPEAK(I)
	RETURN
C SOBJS, PAGE 6
C
C O10--	DUMBWAITER
C
16000	IF(PRSA.NE.RAISEW) GO TO 16100		!RAISE?
	IF(CAGETF) GO TO 16400			!ALREADY AT TOP?
	CALL NEWSTA(TBASK,175,TSHAF,0,0)	!NO, RAISE BASKET.
	CALL NEWSTA(FBASK,0,BSHAF,0,0)
	CAGETF=.TRUE.			!AT TOP.
	RETURN
C
16100	IF(PRSA.NE.LOWERW) GO TO 16200		!LOWER?
	IF(.NOT.CAGETF) GO TO 16400		!ALREADY AT BOTTOM?
	CALL NEWSTA(TBASK,176,BSHAF,0,0)	!NO, LOWER BASKET.
	CALL NEWSTA(FBASK,0,TSHAF,0,0)
	CAGETF=.FALSE.
	IF(.NOT.LIT(HERE)) CALL RSPEAK(406)	!IF DARK, DIE.
	RETURN
C
16200	IF((PRSO.NE.FBASK).AND.(PRSI.NE.FBASK)) GO TO 16300
	CALL RSPEAK(130)			!WRONG BASKET.
	RETURN
C
16300	IF(PRSA.NE.TAKEW) GO TO 10		!TAKE?
	CALL RSPEAK(177)			!JOKE.
	RETURN
C
16400	CALL RSPEAK(125+RND(3))			!DUMMY.
	RETURN
C
C O11--	GHOST FUNCTION
C
17000	I=178					!ASSUME DIRECT.
	IF(PRSO.NE.GHOST) I=179			!IF NOT, INDIRECT.
	CALL RSPEAK(I)
	RETURN					!SPEAK AND EXIT.
C SOBJS, PAGE 7
C
C O12--	TUBE
C
21000	IF((PRSA.NE.PUTW).OR.(PRSI.NE.TUBE)) GO TO 10
	CALL RSPEAK(186)			!CANT PUT BACK IN.
	RETURN
C
C O13--	CHALICE
C
23000	IF((PRSA.NE.TAKEW).OR.(OCAN(PRSO).NE.0).OR.
&		(OROOM(PRSO).NE.TREAS).OR.(OROOM(THIEF).NE.TREAS).OR.
&		((OFLAG2(THIEF).AND.FITEBT).EQ.0).OR.
&			.NOT. THFACT) GO TO 10
	CALL RSPEAK(204)			!CANT TAKE.
	RETURN
C
C O14--	PAINTING
C
24000	IF(PRSA.NE.MUNGW) GO TO 10		!MUNG?
	CALL RSPEAK(205)			!DESTROY PAINTING.
	OFVAL(PRSO)=0
	OTVAL(PRSO)=0
	ODESC1(PRSO)=207
	ODESC2(PRSO)=206
	RETURN
C SOBJS, PAGE 8
C
C O15--	BOLT
C
27000	IF(PRSA.NE.TURNW) GO TO 10		!TURN BOLT?
	IF(PRSI.NE.WRENC) GO TO 27500		!WITH WRENCH?
	IF(GATEF) GO TO 27100			!PROPER BUTTON PUSHED?
	CALL RSPEAK(210)			!NO, LOSE.
	RETURN
C
27100	IF(LWTIDF) GO TO 27200			!LOW TIDE NOW?
	LWTIDF=.TRUE.				!NO, EMPTY DAM.
	CALL RSPEAK(211)
	OFLAG2(COFFI)=OFLAG2(COFFI).AND. .NOT.SCRDBT
	OFLAG1(TRUNK)=OFLAG1(TRUNK).OR.VISIBT	!MATERIALIZE TRUNK.
	RFLAG(RESER)=(RFLAG(RESER).OR.RLAND)
&		.AND..NOT.(RWATER+RSEEN)	!KEEP THIEF AWAY.
	RETURN
C
27200	LWTIDF=.FALSE.				!YES, FILL DAM.
	CALL RSPEAK(212)
	IF(QHERE(TRUNK,RESER)) OFLAG1(TRUNK)=OFLAG1(TRUNK)
&		.AND. .NOT.VISIBT
	RFLAG(RESER)=(RFLAG(RESER).OR.RWATER) .AND..NOT.RLAND
	RETURN
C
27500	CALL RSPSUB(299,ODI2)			!NOT WITH THAT.
	RETURN
C
C O16--	GRATING
C
28000	IF((PRSA.NE.OPENW).AND.(PRSA.NE.CLOSEW)) GO TO 10
	IF(GRUNLF) GO TO 28200			!UNLOCKED?
	CALL RSPEAK(214)			!NO, LOCKED.
	RETURN
C
28200	I=215					!UNLOCKED, VIEW FRM CLR.
	IF(HERE.NE.CLEAR) I=216			!VIEW FROM BELOW.
	SOBJS=OPNCLS(GRATE,I,217)		!OPEN/CLOSE.
	RETURN
C
C O17--	TRAP DOOR
C
29000	IF(HERE.NE.LROOM) GO TO 29100		!FROM LIVING ROOM?
	SOBJS=OPNCLS(DOOR,218,219)		!OPEN/CLOSE.
	RETURN
C
29100	IF(HERE.NE.CELLA) GO TO 10		!FROM CELLAR?
	IF((PRSA.NE.OPENW).OR.QOPEN(DOOR)) GO TO 29200
	CALL RSPEAK(220)			!CANT OPEN CLOSED DOOR.
	RETURN
C
29200	SOBJS=OPNCLS(D