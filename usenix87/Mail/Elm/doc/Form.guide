.PH ""
\"
\"  A guide to using the Elm Forms mode
\"  format with 'tbl Forms.guide | troff -mm > Forms.format'
\"  or something similar.
\"  (C) Copyright 1986 Dave Taylor
\"
\"  Last modification: October 9th, 1986
\"
.SA 1
.nr Hy 1
.nr Pt 1
.nr Pi 8
.lg
.HM 1 1
.rs
.ds HF 3  3  
.ds HP 12 12 10 10 10
.PF ""
.de eb
.sp -1	
.nf
\h'-.5n'\L'|\\nau-1'\l'\\n(.lu+1n\(ul'\L'-|\\nau+1'\l'|0u-.5n\(ul'
.fi
..
.ce 99
.sp 9
.ps 20
\fBElm Forms Mode Guide\fR
.sp 7
.ps 12
\fIWhat Forms Mode is, how to use it to create
custom forms, how to reply to forms, and how to
use it for AT&T Mail messages\fR
.sp 5
Dave Taylor
.sp
Hewlett-Packard Laboratories
1501 Page Mill Road
Palo Alto CA
94304
.sp 
email: taylor@hplabs.HP.COM or hplabs!taylor
.sp 10
.ps 18
\fB\(co\fR\s12 Copyright 1986, 1987 by Dave Taylor
.ps 10
.SK
.sp 5
.ps 14
\fBElm Forms Mode Guide\fR
.PH "'Forms Mode Guide''version 1.5'
.PF "''Page \\\\nP''"
.nr P 1
.sp
.ps 10
(version 1.5)
.sp 2
Dave Taylor
.sp
Hewlett-Packard Laboratories
1501 Page Mill Road
Palo Alto CA
94304
.sp 
email: taylor@hplabs.HP.COM or hplabs!taylor
.sp 2
\*(DT
.ce 0
.sp 3
.P
While there are a lot of mail systems that allow the transmission 
of text and primitive pictures, to send and reply to more complex
forms is simply not possible.  \fBElm\fR, however, took
the forms mode implemented as part of the AT&T Mail package and has
expanded on it to be a smoothly fit part of the overall mail system.
.sp
Forms mode gives you the ability to send 'template' files to people 
and receive the filled-in replies.  Let's look at an example right
off.
.sp 2
Say we were going to use computer mail as a way to file defects with
software.  There is a certain amount of information we want to be able
to collect when each report is made, and if it is in a specific format
we can use programs to file the defects upon receipt.
.sp
The form we'll try to emulate starts out looking like;
.DS CB
.mk a
.mk a
.sp
.tl ''Defect Reporting Form''
.sp
.tl 'Program:_________________________'Version:___________________''
.tl 'Operating System:________________'Version:___________________''
.sp
.tl 'Defect Type:_______________________''
.sp
.tl 'Date Found:_____________________''By Whom:_____________________'
.tl 'Date Reported:__________________''Phone:_______________________'
.sp
.tl 'Description:______________________________________________________________'
.tl '__________________________________________________________________________'
.tl '__________________________________________________________________________'
.tl '__________________________________________________________________________'
.tl '__________________________________________________________________________'
.sp
.eb
.DE
.sp
This form can actually be created almost exactly as listed above in 
the \fBElm\fR mail system by using your standard editor and can then
be mailed about as needed.
.sp
Let's say that we want a bit more information, however, especially with 
fields like ``Defect Type'', we want to list all the recommended answers.
To create the actual form, we need merely to replace the underlines in
the above form with spaces.  The multi-line comments can simply be 
indicated by a `:' by itself on a line;
.DS CB
.mk a
.sp
.tl ''Defect Reporting Form''
.sp
.tl 'Program:                         'Version:                   ''
.tl 'Operating System:                'Version:                   ''
.sp
.tl '(Valid Defect Types are: user-error, doc-error, fatal, other)'
.tl 'Defect Type:                       ''
.sp
.tl 'Date Found:                     ''By Whom:                     '
.tl 'Date Reported:                  ''Phone:                       '
.sp
.tl 'Description'
.tl ':'
.sp
Thank you for filling in this form.
.sp 4
.eb
.DE
.sp
As we can see, it is quite simple to create forms!!  
.sp 2
Now that we have an idea what we're talking about, let's actually officially
define the system...
.sp 2
.ne 7
.ps 12
\fBForms Mode Specification\fR
.ps 10
.sp
[Note that this is all taken from the document \fIStandard for Exchanging
Forms on AT&T Mail\fR, Version 1.9 of 6/7/86, from AT&T]
.sp
The forms mode is really quite simple.  Simple enough that it is amazing
that it hadn't been implemented before AT&T Mail came along!!
.sp
In a nutshell, each field is delimited by a `:' followed by a number of
blank spaces or tabs that represent the valid size for that field.  That
is, if we have a line in the form like;
.nf
	``Phone (area-code):     Number:          '' 
.fi
The area-code field will be limited to three characters and the number to nine.
(this is kind of hard to see with the proportionally spaced formatted copy,
alas).
The only exception to the rule is that a `:' by itself on a line represents
a field that is as large as the user entering the data desires.
.sp 2
The actual form that is transmitted, in AT&T Mail parlance, is a ``SIMPLE''
forms handler message (as opposed to the ``ADVANCED'' handler).  This means
that it contains three sections;
.nf

	The Message Header

	[OPTIONS-SECTION]
	***
	[FORMS-IMAGE]
	***
	[RULES-SECTION]

.fi
\fBElm\fR generates form messages with the ``options'' section filled out,
but ignores it when receiving mail.  The filled out section is;
.nf

	WIDTH=80
	TYPE=SIMPLE
	OUTPUT=TEXT

.fi
The FORMS-IMAGE section is that described above.  The RULES-SECTION can
contain explicit rules about the possible values of each field, but 
this is currently ignored by \fBElm\fR, being a ``SIMPLE'' forms mode
mail system.
.sp
Forms also have the header ``Content-Type: mailform'' to indicate to the
mail system (either \fBElm\fR or AT&T Mail) that a form is being sent.
.sp
\fBElm\fR further indicates that a form has been received by having an
``F'' as the status character in the header display section (instead of
``N'' for new, etc).
.sp 2
.ne 5
.ps 12
\fBComposing and Sending a Form\fR
.ps 10
.sp
The first step to enable sending forms is to change the setting of
the variable \fIforms\fR in your \fI.elmrc\fR file to ``ON''.  E.g.;
.nf

	forms = ON

.fi
The next step is to send the message to someone using the `m' (\fImail\fR)
command.  This then will drop you into an editor.  Type in the form as
indicated above, with appropriate colons and comments, and end the entry
by leaving the editor.
.sp
The prompt is now;
.nf

.tl ''Choose: E)dit msg, edit H)eaders, M)ake form, S)end or F)orget : @''

.fi
so we choose `m' - \fIMake form\fR.  The program then will either
rewrite the prompt without the M)ake form option, indicating that
the form has been accepted, or will indicate the problem and give you
a chance to correct it.
.sp
Once it has been accepted, simple use the `s' - \fIsend message\fR -
command and it's off!
.sp 
Note that you cannot reply to a message with a Form.
.sp 2
.ne 6
.ps 12
\fBReplying to a Form\fR
.ps 10
.sp
Let's reply to the form message we generated now.  The header page of the
\fBElm\fR mail system will indicate that the message is a form by having
an `F' next to it.  So we use `r' to reply and the screen is immediately
cleared and we're prompted, field by field, for the data requested.
Each field has underscores in the input area to indicate the size field that
is expected.
.sp
After answering all the questions we'll have a screen that looks like;
.DS CB
.mk a
.sp
.tl ''Defect Reporting Form''
.sp
Program: \fBThe Elm Mail System\fR____________
Version: \fB1.5\fR_____________________
Operating System: \fBHP-UX\fR_________________
Version: \fB5.141 C\fR__________________
.sp
(Valid Defect Types are: user-error, doc-error, fatal, other)
Defect Type: \fBfatal\fR____________________________________________________
.sp
Date Found: \fB10/9/86\fR_____________________
By Whom: \fBDave Taylor\fR_______________
Date Reported: \fB10/9/86\fR__________________
Phone: \fB(415) 857-6887\fR______________
.sp
Description
(Enter as many lines as needed, ending with a `.' by itself on a line)

  \fBWhen running it on a CPM system I cannot compile successfully.\fR
  \fB.\fR

Thank you for filling in this form.

.tl ''Choose: E)dit form, edit H)eaders, S)end or F)orget : @''
.sp 
.eb
.DE
.sp
Quite simple.  Notice, however, that the order of prompting is left to
right on each line, so the fields that on the form are placed in what
seems like a logical place, ``By Whom:'' and ``Phone:'' turn out to be
confusing when filling in the actual form since it isn't clear what
``Phone:'' is being asked for because of the intervention of the
``Date Reported:'' field.
.sp 
The message that will actually be sent out from this will have the
fields in a more acceptable format;
.DS
.mk a
.sp
WIDTH=80
TYPE=SIMPLE
OUTPUT=TEXT
***
.tl ''Defect Reporting Form''
.sp
.tl 'Program: The Elm Mail System     'Version: 1.5               ''
.tl 'Operating System: HP-UX          'Version: 5.141 C           ''
.sp
.tl '(Valid Defect Types are: user-error, doc-error, fatal, other)'
.tl 'Defect Type: fatal''
.sp
.tl 'Date Found: 10/9/86             ''By Whom: Dave Taylor         '
.tl 'Date Reported: 10/9/86          ''Phone: (415) 857-6887        '
.sp
.tl 'Description'
.sp
    When running it on a CPM system I cannot compile successfully.
.sp 2
Thank you for filling in this form.
.sp
***
.sp
.eb
.DE
.ne 5
.sp 2
.ps 12
\fBComments on Forms Mode\fR
.ps 10
.sp
As was said at the beginning, this way of sending about forms could
prove to be very helpful and useful in a variety of contexts.  On the
other hand, until a more sophisticated forms language is used for the
forms, this should be sufficient to embody the power of the idea.
.sp
I welcome any comments and thoughts on this system and also welcome
possible enhancements.
.sp
I also gratefully thank Dale DeJager of AT&T Information Systems 
for sending me more
information on AT&T Mail than I could possibly digest in any finite
amount of time.
