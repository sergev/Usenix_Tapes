Received: from  by plus5.com (UIUC-5.31/24Nov86-03:13:38) with UUCP
	id AA24922; Wed, 15 Jul 87 23:05:55 EDT
Received: from ICS.UCI.EDU by seismo.CSS.GOV (5.54/1.14) 
	id AA01682; Wed, 15 Jul 87 23:13:31 EDT
Received: by ICS.UCI.EDU id aa12264; 15 Jul 87 19:50 PDT
Received: from ics.uci.edu by ICS.UCI.EDU id aa12080; 15 Jul 87 19:21 PDT
Received: from hplabs.hp.com by ICS.UCI.EDU id aa12056; 15 Jul 87 19:16 PDT
Received: from hplms2 by hplabs.HP.COM with TCP ; Wed, 15 Jul 87 19:14:34 pdt
Received: from hplpm (hplpm) by hplms2; Wed, 15 Jul 87 19:14:13 pdt
Return-Path: <marvit@hplpm>
Received: from hplpm.hpl.hp.com by hplpm ; Wed, 15 Jul 87 19:13:55 pdt
Message-Id: <8707160213.AA01296@hplpm>
To: ics.uci.edu!bug-mh, ics.uci.edu!mh-workers
Subject: Yet another fix for repl
X-Mailer: mh6.5
Date: Wed, 15 Jul 87 19:13:46 PDT
From: Peter Marvit <hplabs.hp.com!marvit%hplpm>

<argh! not again...>

Index: .../mh/uip/replsbr.c

Description:
        The repl(1) command, part of MH-6.5, core dumps on the HP9000/840
	due to interactions of calloc(), malloc(), and free() with a priori
	assumptions which the original MH programmers used about how these
	called behaved and which have apparently not caused problems until
	now.

Repeat-By:
	Attempting to run repl on a stock HP 840.  The operating system, in
	my case, was 100% product bits HP-UX A.B1.14.

Fix: 
	Be sure that a null pointer exists in the components pointer stack,
	rather than assuming that calloc gives an extra one or more for free.

Sidebar:
	Another non-obvious and intensely frustrating bug.

-Peter Marvit
 HP Labs
 ARPA: marvit@hplabs.hp.com    uucp:{siesmo,ihnp4,decvax,...}!hplabs!marvit

<<<<<<<<----------------------CUT HERE--------------->>>>>>>>>>>>>

***************
*** 72,78
      cp = new_fs (form ? form : replcomps, NULLCP, NULLCP);
      format_len = strlen (cp);
      ncomps = fmt_compile (cp, &fmt) + 1;
!     nxtbuf = compbuffers = (char **)calloc((unsigned)ncomps+1,sizeof(char *));

      if (nxtbuf == NULL)
        adios (NULLCP, "unable to allocate component buffers");
      used_buf = (struct comp **)calloc((unsigned)(ncomps+1),sizeof(struct comp
*));

--- 71,77 -----
      cp = new_fs (form ? form : replcomps, NULLCP, NULLCP);
      format_len = strlen (cp);
      ncomps = fmt_compile (cp, &fmt) + 1;
!     nxtbuf = compbuffers = (char **)calloc((unsigned)ncomps,sizeof(char *));
      if (nxtbuf == NULL)
        adios (NULLCP, "unable to allocate component buffers");
      used_buf = (struct comp **)calloc((unsigned)(ncomps+1),sizeof(struct comp
*));

<<<<<<<<----------------------CUT HERE--------------->>>>>>>>>>>>>
