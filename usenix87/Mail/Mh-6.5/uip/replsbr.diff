*** replsbr.c-	Wed May 14 00:09:26 1986
--- replsbr.c	Wed May 14 00:49:40 1986
***************
*** 78,84
      if (used_buf == NULL)
  	adios (NULLCP, "unable to allocate component buffer stack");
      used_buf += ncomps+1; *--used_buf = 0;
!     for (i = ncomps; i--; )
  	if ((*nxtbuf++ = malloc( SBUFSIZ )) == NULL)
  	    adios (NULLCP, "unable to allocate component buffer");
  

--- 78,84 -----
      if (used_buf == NULL)
  	adios (NULLCP, "unable to allocate component buffer stack");
      used_buf += ncomps+1; *--used_buf = 0;
!     for (i = ncomps; i--; ) {
  	if ((*nxtbuf++ = malloc( SBUFSIZ )) == NULL)
  	    adios (NULLCP, "unable to allocate component buffer");
  printf("replout: got %#x\n", *(nxtbuf - 1));
***************
*** 81,86
      for (i = ncomps; i--; )
  	if ((*nxtbuf++ = malloc( SBUFSIZ )) == NULL)
  	    adios (NULLCP, "unable to allocate component buffer");
  
      nxtbuf = compbuffers;
      savecomp = used_buf;

--- 81,88 -----
      for (i = ncomps; i--; ) {
  	if ((*nxtbuf++ = malloc( SBUFSIZ )) == NULL)
  	    adios (NULLCP, "unable to allocate component buffer");
+ printf("replout: got %#x\n", *(nxtbuf - 1));
+ 	}
  
      nxtbuf = compbuffers;
      savecomp = used_buf;
***************
*** 201,206
      (void) fclose (out);
  
      /* return dynamically allocated buffers */
      free (scanl);
      while ( cptr = *savecomp++ )
  	free (cptr->c_text);

--- 203,210 -----
      (void) fclose (out);
  
      /* return dynamically allocated buffers */
+ printf("replout: free(scanl)\n");
+ fflush(stdout);
      free (scanl);
  printf("replout: free(cptr)\n");
  fflush(stdout);
***************
*** 202,207
  
      /* return dynamically allocated buffers */
      free (scanl);
      while ( cptr = *savecomp++ )
  	free (cptr->c_text);
      while ( cp = *nxtbuf++)

--- 206,213 -----
  printf("replout: free(scanl)\n");
  fflush(stdout);
      free (scanl);
+ printf("replout: free(cptr)\n");
+ fflush(stdout);
      while ( cptr = *savecomp++ )
  	free (cptr->c_text);
  printf("replout: free(nxtbuf)\n");
***************
*** 204,211
      free (scanl);
      while ( cptr = *savecomp++ )
  	free (cptr->c_text);
!     while ( cp = *nxtbuf++)
! 	free (cp);
      free (tmpbuf);
      free ((char *) compbuffers);
      free ((char *) used_buf);

--- 210,223 -----
  fflush(stdout);
      while ( cptr = *savecomp++ )
  	free (cptr->c_text);
! printf("replout: free(nxtbuf)\n");
! fflush(stdout);
!     while ( cp = *nxtbuf++) {
! printf("replout: free(nxtbuf): cp=%#x, nxtbuf=%#x, *nxtbuf=%#x\n", cp, nxtbuf, *nxtbuf);
! fflush(stdout);
! 	free (cp);}
! printf("replout: free(tmpbuf)\n");
! fflush(stdout);
      free (tmpbuf);
  printf("replout: free(compbuffers)\n");
  fflush(stdout);
***************
*** 207,212
      while ( cp = *nxtbuf++)
  	free (cp);
      free (tmpbuf);
      free ((char *) compbuffers);
      free ((char *) used_buf);
  }

--- 219,226 -----
  printf("replout: free(tmpbuf)\n");
  fflush(stdout);
      free (tmpbuf);
+ printf("replout: free(compbuffers)\n");
+ fflush(stdout);
      free ((char *) compbuffers);
  printf("replout: free(used_buf)\n");
  fflush(stdout);
***************
*** 208,213
  	free (cp);
      free (tmpbuf);
      free ((char *) compbuffers);
      free ((char *) used_buf);
  }
  

--- 222,229 -----
  printf("replout: free(compbuffers)\n");
  fflush(stdout);
      free ((char *) compbuffers);
+ printf("replout: free(used_buf)\n");
+ fflush(stdout);
      free ((char *) used_buf);
  }
  
