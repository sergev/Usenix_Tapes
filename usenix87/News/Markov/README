This is a cleaned-up reposting of the markov3 program.  The following
changes have been made:

The null pointer dereferencing bugs have been fixed (I hope).

The code that uses "rand" should now be portable (the patches posted
to the net to fix this problem were wrong, they break the code on
some machines in order to fix it on others.  I stole some code from
"hack" to do things right.  If hack works for you, this should).

markov3 now understands "notes" cruft (thanks to Rich Salz).

Because of the 50% rule in news 2.11, people often use some other
character than ">" for inclusions.  markov3 assumes that lines
beginning with any of 

	> < ) | # } ]

are inclusions (without this rule, funny-looking output results if
anyone uses non-standard "quoting").

The random number generator is initialized using the time, if neither
the -s flag nor the new -x flag is given.

This will be the last complete posting; a "patchlevel" file is included
and I will send out patches if there are further bugs or improvements.

Here's the original README.
---------------------------------------------------------------------------
I created a bit of a stir with this program in December 1986 when I
used an earlier version of it to simulate a certain well-known net
personality (Hi Laura!).  It digests Usenet articles and spits out
other articles with similar characteristics.  You need lex to run it,
but otherwise it should run on any Unix I know of.  

I had several requests for the program but didn't consider it
"ready".  It's as ready as it will ever be now.

The program uses getopt(3).  There are several public-domain versions
available for Berkeley systems from the mod.sources archives.  Since
it's small, I've included Henry Spencer's version, but you'll have
to change the Makefile to use it.

For best results, feed it at least ten articles by the same person
or on the same subject.  If there are fewer articles the output
resembles the original too much; if there is too much variety in
the articles the output is more incoherent than it otherwise is.

The program requires lots of memory if it is given lots of input;
the small-model people will have problems.

Please don't post the output to the net (though I'd be happy to
see some of the more interesting results).

Send comments, suggestions for improvement, fan mail, and flames
to me: {sun,hplabs,ames,ihnp4}!oliveb!epimass!jbuck.
