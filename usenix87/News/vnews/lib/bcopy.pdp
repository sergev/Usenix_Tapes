/ BCOPY(FROM, TO, N)  CHAR *FROM, *TO ;
/
/	Copy "n" bytes from "from" to "to".
/
.globl	_bcopy
.globl	csav, cret

.text
_bcopy:	jsr  r0, csav		/ save registers
	mov  r5, r4		/ get arguments...
	cmp  (r4)+, (r4)+	/
	mov  (r4)+, r0		/ from
	mov  (r4)+, r1		/ to
	mov  (r4), r2		/ byte count
	beq  ret		/ if zero then return
	bit  $1, r1		/ is "to" odd
	beq  1f			/ yes...
	  movb (r0)+, (r1)+	/   copy one byte to make it even
	  dec  r2		/   and adjust byte count
1:	mov  r2, r3		/ save (low bit of) count
	asr  r2			/ convert from bytes to words
	beq  3f			/ if any words to copy...
	  bit  $1, r0		/   is "from" even now?
	  beq  2f		/   if not ...
1:	    movb (r0)+, (r1)+	/     copy bytes...
	    movb (r0)+, (r1)+	/     ...
	    sob  r2, 1b		/     ...
	  br   3f		/   else ...
2:	    mov  (r0)+, (r1)+	/     copy words...
	    sob  r2, 2b		/     ...
3:	ror  r3			/ is byte count odd?
	bcc  ret		/ if so...
	   movb (r0)+, (r1)+	/   copy odd byte.
ret:	jmp  cret		/ return
