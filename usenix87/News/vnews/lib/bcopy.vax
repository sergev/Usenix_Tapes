# bcopy (from, to, count) char *from, *to; int count;
#
# Copy "count" bytes from "from" to "to"; not guaranteed to
# work if "from" and "to" overlap.

	.align	2
	.globl	_bcopy
_bcopy:
	.word	0
	movl	4(ap), r1		# r1 = from
	movl	8(ap), r3		# r3 = to
L1:
	movzwl	$65535, r0		# while more than 65535 bytes to move
	cmpl	12(ap), r0
	jleq	L2			# if <= 65535, break
	subl2	r0, 12(ap)		# count-=65535 (bytes moved this time)
	movc3	r0, (r1), (r3)		# r1, r3 magically point to next 65K
	brb	L1
L2:
	movc3	12(ap), (r1), (r3)	# move up to 65535 bytes
	ret
