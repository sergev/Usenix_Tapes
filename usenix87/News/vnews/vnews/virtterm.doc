.. Run this file through nroff (no macro packages required).
.ll 72
.na
.hy
The new virtterm.c uses termcap.  This makes it larger, but not excessively
so.
The cursor motion commands are longer for the HP and VT100 terminals
due to the inability of termcap to completely describe these terminals,
but this doesn't make a big difference.
Virtterm handles both insert/delete line and VT100 style scrolling regions.
It also handles terminals with sticky underlining (like some HP terminals).

The following is the list of the terminal capabilities virtterm uses:
.nf

	bc, bs		Cursor left
	do		Cursor down
	up		Cursor up
	ta, pt		Nondestructive tab
	bt		Backwards tab
	ho		Cursor home
	cr, nc		Carriage return
	cm		Cursor to specified location
	ch, cv		Cursor to specified column or row
	am, xn		Terminal wrap-around
	al, dl		Insert and delete line
	AL, DL		Insert and delete multiple lines
	cs, sr		Scrolling region (a al VT100)
	sf, ns		Scroll entire screen
	ce		Clear to end of line
	cl		Clear screen and move cursor home
	us, ue		Underscore mode
	ti, te		Turn visual mode on/off

.fi
In order to run with virtterm, the terminal *must* have:
.in 11
.ti -3
1)\ Clear screen.
.ti -3
2)\ Non-relative cursor motion (either cm or ho).
.ti -3
3)\ Cursor down (linefeed will be used if do is not specified).
.ti -3
4)\ Us and ue, otherwise no underlining will be done.
.ti -3
5)\ Tabstops set every 8 columns if terminal has tabs.
Virtterm doesn't bother to set the tabs; it assumes they are already set.
.in 0

The new virtterm can't do its job very well if capabilities are missing
from the termcap entry.
For example, in our version of /etc/termcap, us and ue entries
were not specified the HP-2621.
