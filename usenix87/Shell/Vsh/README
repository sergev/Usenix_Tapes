1/16/83:
	For 4.2BSD: It should suffice to edit hd.h to
		define V7TTY, NDIR, SYMLINK, VFORK
		undefine PWBTTY, USGTTY, V6
		Use Makefile.bsd
	For 3.0, 5.0: I'm less able to say, but edit hd.h to
		define USGTTY
		undefine PWBTTY, V7TTY, V6, NDIR, SYMLINK, VFORK
		also look in cmdini.c, classify.c
		For VT100 arrowkeys, you may wish to write an empty() routine.
	For 2.9BSD: Should define V7TTY, you may define SYMLINK if you
		have them. Define NDIR only if you have the 4.2BSD support
		routines as well (e.g. scandir()). 
		Use Makefile.bsd
	For VENIX-11: define VENIX, V7TTY
		Use Makefile.venix
	For PDP-11's:
		You may wish to define MBUFSTACK.

	Then look at the TERMCAP-relevant stuff.

Notes on this version of VSH.

	This version was most recently run on a PWB1.2 and a 4.2BSD system
system. It should not be difficult to retrofit it to other UNIX's.
The things to watch for are:

	- hd.h is the main file to configure.

	- special PWB1.2 subroutines logdir(), logtty(), logname(), which
	are fast ways to get at the HOME, controlling tty, and LOGNAME.
	It's a replacement for getenv("HOME") which doesn't work that
	well on V6 systems. Code like this is bracketed by
		#ifdef V6
	- You will need to pick code appropriate for your tty driver. See tty.c
	- NDIR, 4.2BSD directories and SYMLINK, 4.2BSD symbolic links
	- Check out stuff in the TERMCAP directory. If you can, add CS, CB,
	BO, and BE capabilities to /etc/termcap. A sample VT100 entry is given.
	Also read the discussion in CHANGES.
	- The makefiles reference a LOCALLIB. This is usually a system dependant
	library contain things that the system libraries are missing, like the
	str*() library.
	- VSH needed to know some magic numbers to type a.out's, archives,
	packed files, cpio archives, etc. These are found in classify.c.
	Check them out.
	- VSH will write out a (boring) log entry every time it exits in a file
	called /usr/adm/vsh.log, if it exists.
	- If you're missing the complete str*() string library, you may find
	what you need in strlib.tar
	- PDP-11's: VSH will work fine loaded nonI&D, but the largest
	directories will exhaust memory. Loading VSH nonshared will help. A
	number of data structures could also be moved to the stack segment.
	Sorry, VSH is larger now than before.

	The *help files found in DOC belong in /usr/lib/vsh

	The builtin parameters in cmdini.c must be correct before compiling.
First, the "argv" variables must reference the proper programs and files.
Then the parmtab must be modified to reference other appropriate programs and
files.

