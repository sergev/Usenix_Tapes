multivol.doc V1.00 01-Jun-85 Tony O'Hagan
	Documentation on developement of multi-volume backup utility "multivol".
	Global flags
1. rd_flag  -i Read each volume -> stdout
2. wr_flag  -o Write each volume stdin ->
3. dsp_vol  -t Attempt to read & print each volume header -> stderr
4. dsp_blks -v Indicate number of blocks read/written -> stderr
5. vfy_vol  -w Allow user to verify each volume mounted -> stderr /dev/tty ->  

When dsp_vol is set the following will be tested :-
Writing:-
	* Writing over a volume in the set being tested;
Reading:-
	* Reading a volume with a time stamp different from first volume read;
	* Reading volumes out of sequence
	* Check that label corresponds (if specified)

Queries:-
	a. What will happen if no blocks have ever been written to the volume
	and an attempt is made to read the volumes header ?
==============================================================================
	multivol V2.00 01-Jul-85 Tony O'Hagan & Tim Roper
Buffer data structure :-

	First volume block		Other volume blocks

 . 	 ---------------  <- buf_ptr ->	 ---------------
/|\	| block header	| (word aligned)|		|
 |	|---------------|		|		|
 |	|		|		|		|
 |	| volume header	|		|---------------|       .
 |	|		|		| block header	|      /|\
 |	 ---------------  <- dta_ptr ->	 ---------------	|
 |	|		| (word aligned)|		|	|
 |	|		|	     	|		|	|
blk_siz	|     data	|		|		|	|
 |	|		|		|     data	|    blk_siz
 |	|		|		|		|	|
\!/	|		|		|		|	|
 	|---------------|	       	|		|	|
	|		|		|		|	|
	|		|		|		|      \!/
	 ---------------		 --------------- 

	sizeof(vol_hdr) and sizeof(blk_hdr) must both be an integral number
	of word alignment units.
========================================================================
19-Jul-85  Tony O'Hagan
	Using /dev/rmt0, doesn't appear to read volume header unless
	the block size matches the written block size.  I/O failure.
========================================================================
 7-Aug-85  Tony O'Hagan
	Expected lint errors :-		(Perkin-Elmer V7 lint)
"rd.c", line 150: warning: possible pointer alignment problem
"rd.c", line 152: warning: possible pointer alignment problem
"wr.c", line 149: warning: possible pointer alignment problem
"vhdr.c", line 51: warning: possible pointer alignment problem
"vhdr.c", line 85: warning: blk_siz redefinition hides earlier one
askf returns value which is always ignored
close returns value which is always ignored
fgets returns value which is always ignored
mount_v returns value which is sometimes ignored
rd_put_ returns value which is always ignored
sprintf returns value which is always ignored
sscanf returns value which is sometimes ignored
strncpy returns value which is always ignored
write returns value which is sometimes ignored
========================================================================
Tony O'Hagan		Australia: (07) 3774125  International: +61 7 3774125
University of Queensland	CSNET:	tony@uqcspe.oz	ACSnet:	tony@uqcspe.oz
Dept. of Computer Science	UUCP:	...!seismo!munnari!uqcspe.oz!tony
St. Lucia, Brisbane, 		ARPA:	tony%uqcspe.oz@seismo.css.gov
AUSTRALIA  4067	 		JANET:	uqcspe.oz!tony@ukc
