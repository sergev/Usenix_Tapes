Path: plus5!wuphys!wucs!we53!ltuxa!cuae2!ihnp4!cbosgd!clyde!burl!ulysses!allegra!mit-eddie!think!harvard!seismo!mcvax!enea!erix!mike
From: mike@erix.UUCP (Mike Williams)
Newsgroups: net.sources
Subject: Program for reading tar tapes with bad block on the tape
Message-ID: <1111@erix.UUCP>
Date: 8 Apr 86 16:10:44 GMT
Organization: L M Ericsson, Stockholm, Sweden
Lines: 230
Posted: Tue Apr  8 10:10:44 1986

The following program can be used to extract files from a tar tape which
contains read errors. It is known to work for BSD systems.
It is used as a filter whose output should be piped into tar thus

badtar -f /dev/rmt16 -l log_file | tar xf -

This program is not perfect. It cannot read what cannot be read, but it
will continue over read errors, pad files to suitable lengths when blocks
are missing, ignore files whose header tar blocks are mangled etc etc.

There are other ways of doing this, for example by dumping the file to
disk with

dd if=/dev/rmt16 of=foo conv=noerror,sync

and then editing the subsequent output file (in this case foo) using
emacs or some such editor which allows editing of binary files. This is
difficult since one has to remove null blocks in critical positions
or tar thinks it has hit the end of the tar file. The undocumented
"i" flag in tar should be used here.

The log file (-l flag) gives a list of all files found, indicates which of 
them were padded, shows where blocks were deleted (ie files were lost)
and where bad blocks occured on the tape. You can get a good idea from this
list where files will have been mangled or lost. All error messages begin with
*** which makes life easier to find errors in a long list.

If the -l flag is not given stderr is defaulted. If the -f flag is not given
/dev/rmt8 is defaulted.

If you have your own way of doing this which you think is better, please send
me a mail. If a sufficient number of interesting responses turn up I will 
summarise to the net.

Mike Williams

...{seismo,decvax,philabs}!mcvax!enea!erix!mike (or mike@erix.UUCP)

