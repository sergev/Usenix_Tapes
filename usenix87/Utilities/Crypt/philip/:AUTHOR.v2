Article 4702 of net.sources:
Path: plus5!wucs1!cuae2!gatech!seismo!mcvax!inria!axis!philip
From: philip@axis.UUCP
Newsgroups: net.sources
Subject: Crypt - modified not to use crypt(3)
Keywords: No longer uses makekey/crypt
Message-ID: <183@axis.UUCP>
Date: 20 Feb 87 23:04:27 GMT
Organization: Axis Digital, Paris
Lines: 220
Posted: Fri Feb 20 23:04:27 1987


Since posting the original article, it has become apparent that many
UNIX systems (and DOS) lack the makekey program, and sometimes even
the crypt(3) functions.

This is not actually too important - I only used makekey/crypt because
it was there.

The crypt(3) function is complicated - based upon the DES algorithms.
It is used normally on UNIX to generate the encrypted passwords which
are stored in the password file. Since these are publicly available,
a good encryption routine is needed to stop people deriving the password
from its crypted form. In my crypt program, the result of this routine
is used simply to seed a pseudo-random number generator.

The 'string' used to do this is never stored anywhere outside the program,
thus it is not too important if it is possible to derive the input key
from this initialisation string. What this means is that you can replace
crypt(3) with just about anything. You can even use the password that the user
gives directly, although I would suggest using some method of generating
something a little longer to use as the intialisation string - like
replicating the users key (for example). Doing this should not do too much
damage to the security of the system (but then I am no expert in these
matters ...)

The following is a hacked version of the original, without any calls
to makekey or crypt(3) - it should be suitable for UNIX systems with
no encryption available, and even for DOS - if you can write your
own version of getpass(3). This version simply replicates the input key
until it is 13 characters long, and uses that to seed the random number
generator.

If it is important that data encrypted on one machine should be decryptable
on another, this is probably the version to use, since some vendors seem
to have replaced the DES based crypt(3) with their own version, and thus
systems using that will not be compatible.

Philip

