.TH DATE+ 1ug 
.UC 4
.SH NAME
date+ \- print date plus specified time
.SH SYNOPSIS
.B date+
[
.I number unit
]... [
.I format
]
.SH DESCRIPTION
The
.I date+
command increments the current time by the specified amount of time given
as several 
.I number unit
pairs.  The
.I unit
may begin with
.B sec min hour day week mon 
or
.B year.
Trailing characters are ignored.  The positive or negative floating point
.I number
is truncated if the unit is month or year.
.de mI
.ti -4
\\$1\ \ 
..
.PP
The optional
.I format
specifies how to print out the date and time information.
A percent sign introduces a conversion operator;
the next character specifies the desired conversion.
Other characters are simply printed.
The conversion characters and their meanings are:
.sp
.in +6
.mI s
seconds.
.mI m
minutes.
.mI h
hours.
.mI d
day number within the month (01-31).
.mI D
day number without leading zero.
.mI n
month number (01-12).
.mI N
month name (3 character).
.mI y
year number - 1900.
.mI w
weekday number (1 is Sunday).
.mI W
weekday name (3 character).
.mI Y
day number within the year (1-365).
.mI S
number of seconds since 00:00:00 GMT Jan 1, 1970.
.in -6
.ne 7
.PP
The default format is
.ti +2
.nf
"%h:%m %N %D"
.fi
which is suitable as input to the 
.I at (1)
command.
Note that if the format string has any special characters
(including spaces) then they must be protected by quoting.
.SH EXAMPLE
.nf
at `date+ 2 hours`
echo Time for a break > /dev/ttyme
^D
date+ -1 month "%y.%n"		# Return yy.mm for previous month
.fi
.SH SEE\ ALSO
.I at (1),
.I date (1)
.SH AUTHOR
Daniel LaLiberte, University of Illinois, Urbana-Champaign
.SH BUGS
Dates that don't exist, e.g., Feb 31, can be produced by
adding months or years.  Producing dates before Jan 1, 1970
will give strange results.
