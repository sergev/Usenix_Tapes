*******************************************************************
**                                                               **
**  This distribution implements the algorithm described in      **
**                                                               **
**      K. Walden, "Automatic Generation of Make Dependencies",  **
**      Softw. Practice & Exper., vol. 14, no. 6, June 1984      **
**                                                               **
**  Copyright (c) 1983  Kim Walden                               **
**      ENEA DATA, Sweden and                                    **
**      SYSLAB, Department of Computer Science,                  **
**      University of Stockholm, Sweden.                         **
**                                                               **
**  The software may be used and copied freely,                  **
**      provided that proper credit is given to the originator   **
**      by including this text label in each copy.               **
**                                                               **
*******************************************************************



SOURCES			FUNCTION

Makefile		Make script to build the programs.
makedep.c		Main program for extracting include statements
			and pipe them to makenorm and depend.
makenorm.y		Include statement normalizer.
normscan.l		Scanner for the normalizer.
depend.y		Main dependency generator.
depscan.l		Scanner for the dependency generator.
mpath.c			File name path reduction routine.
error.c			Error handling routine.

man			Manuals subdirectory
test			Subdirectory structure with test files.




The programs should be built invoking the Makefile, and the tool
directory added to the command search path, so the programs can be
found when running the test below.

When make is invoked on the test directory test/proc, the test
example in the above SP & E paper is run, and the output should be
the same as the contents of the file Dep.mk.

Makedep and makenorm extract and normalize include statements that
are directed to the C preprocessor.
These programs must be modified if include statements of other
languages are to be handled, unless the include syntax and semantics
happen to be the same, while depend can be used unchanged.

A general recommendation for Berkeley UNIX users is to get hold of
the augmented version of make available under AT & T System III/V,
which has an include facility.
All generated dependencies can then be put in a separate file,
which is made part of the ordinary make dependency graph.

Porting the augmented make to run under Berkeley UNIX is not very
difficult, and mostly has to do with different formats of archive
files.
