.TH NUMS 1 "HP Experimental"
.ad b
.SH NAME
nums \- print a list of numbers
.SH SYNOPSIS
.B nums
[
.B \-lr
] [
.BI \-s \0size
] [
.BI \-w \0width
]
.I value
[
.I value2
]
.SH DESCRIPTION
This command prints to standard output all integer values from 1 to
.IR value ,
or if you give two numbers, from
.I value
to
.IR value2 ,
one number per output line.
If
.I value
alone is less than 1, or
.I value2
is less than
.IR value ,
it steps backwards rather than forwards.
.PP
This command may be useful with "for" loops in shell scripts
(see example below)
or for generating column headers or row numbers
before adding text in an editor.
.PP
Options are:
.TP
.B \-l
Print all output numbers on a single line,
i.e. follow each except the last with a blank instead of a newline.
.TP
.B \-r
Print the numbers in random order.
A random number generator is seeded to the time plus
process number plus real userid plus real groupid.
Then successive random values are used to index into an array with one
entry for each output value.
When the index is of a value already printed,
the program searches backward (with wrap-around)
for the previous not-yet-printed number,
so it terminates in a predictable time.
.TP
.BI \-s \0size
Set the step size (increment) to a non-zero integer (default = 1).
Starting with the first value,
the program steps either forwards or backwards by the given
.IR size ,
as appropriate, until it passes the second value.
The sign of
.I size
is irrelevant;
the direction is determined by the given value(s).
.TP
.BI \-w \0width
Right-justify output numbers in fields of at least the given width (columns)
by padding with leading blanks as necessary.
If
.I width
is negative, numbers are left-justified.
.PP
Separate options from
.I value
with "\fB--\fR" if 
.I value
is negative.
.SH EXAMPLES
.TP
num 5
Print five lines containing the numbers 1, 2, 3, 4, and 5.
.TP
num \-l \-w4 \-\- -1 3
Print the numbers -1, 0, 1, 2, and 3 on a single line,
each in a field four columns wide (plus leading blank separators), e.g.:
.nf
.RS

\0\0-1 \0\0\00 \0\0\01 \0\0\02 \0\0\03
.RE
.fi
.TP
num \-rs10 42
Print the numbers 1, 11, 21, 31, and 41 in random order.
.PP
.nf

for n in `num 20 5`
do
    whatever
done
.PD 0
.IP ""
Do "whatever" 16 times, with "n" set to 20, 19, ..., 5.
.PD
.SH SEE ALSO
xargs(1), time(2), getpid(2), getuid(2), getgid(2), drand48(3c)
.SH DIAGNOSTICS
Prints a message to standard error and exits non-zero if
invoked wrong or it can't calloc() needed memory for the
.B \-r
option.
.SH LIMITATIONS
It doesn't understand real numbers.
.PP
If the number of numbers printed is not an integer divisor of the range of
the random number generator,
the output is not "precisely" random.
