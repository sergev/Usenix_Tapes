.\"	@(#)printf.1	8-Jan-1987
.\"
.TH PRINTF 1 "8-Jan-1987"
.AT 3
.SH NAME
printf \- formatted print at shell command level
.SH SYNOPSIS
.B "printf <format-string>"
[
.B arg1
] [
.B arg2
] ...
.SH DESCRIPTION
.I Printf
duplicates \- as far as possible \- the standard C library routine of the
same name, at the shell command level. It is similar to
.I echo,
except that it formats its arguments according to conversion specifications
given in the
.B format-string,
before writing them to the standard output.
For a thorough explanation of format specifications, see the manual entry
for the printf subroutine.
.PP
For the sake of perversity,
.I printf
implements one format conversion
.B not
supported by the standard printf subroutine: the %r conversion, which prints
integers as Roman numerals.
.PP
As a convenience, within the
.I format-string
and any string or character arguments,
.I printf
converts "backslash notation" \- as defined in the ANSII draft C
standard \- into the appropriate control characters.
.SH EXAMPLES
.nf
.na
.sp 2
% printf 'Today is %s the %d of %s.\\n' Monday 1 April
Today is Monday the 1 of April.
.sp 3
% printf 'Interesting Numbers\\n\\n\\tPie: %*.*f\\n\\tFoo: %g\\n' \\
	6 4 3.1415927 42
Interesting Numbers

	Pie: 3.1416
	Foo: 42
.sp 3
% printf '%s %d, %r\\n' July 4 1776
July 4, MCCCCCCCLXXVI
.sp 2
.fi
.ad
.SH AUTHOR
Fred Blonder <fred@Mimsy.umd.edu>
.SH "SEE ALSO"
echo(1), printf(3)

