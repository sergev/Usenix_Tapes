		SPS  -  Show Process Status
		===========================

SPS is a intended to be used as a replacement for the standard ps(1)
program. Its advantages over ps(1) are that it shows more useful
information and that it is faster.

SPS is currently implemented for 4.1 and 4.2bsd Unix on Vaxen and for
Sun's 4.2bsd/Release 2. (I also have a somewhat older implementation
for V7 on a PDP-11 as well as Unisoft Version 1.3 on a MC68000 if you
are interested).

SPS displays wait channels symbolically, rather than as hexadecimal
addresses. If you wish to teach sps about a new sort of device, you
must add an entry in the symbol table (globals2.c) as well as
increasing the size of that table (NWAITSTATE in sps.h).

SPS sorts processes before listing them. The order reflects the
relationship of the processes. A child process is listed underneath its
corresponding parent and is indented to depict the exact relationship.
SPS also indicates setuid processes.

SPS displays such values as the resident and virtual sizes of system
processes.  It accepts a whole range of options to control the output.
By default, SPS lists information about one's own processes. Other
options instruct it to be verbose (the "v" option), to list all the
command arguments of a process (the "w" option) or to list the
environment strings of that process (the "e" option). Similarly, there
are options to control which processes are to be displayed. The "a"
option tells it to describe all processes and the "b" option tells it
to describe "busy" processes, which is useful if you wish to find out
what is loading your system. There are also options to select the
output according to user, controlling tty or process number.

SPS keeps its information in an information file. By default, this is
/etc/spsinfo. This means that it can avoid having to do an expensive
nlist() operation each time it is run. It must be reinitialised (with
the "i" option) if new users are added to /etc/passwd or if a new
version of /vmunix is installed.

To compile SPS, unbundle the four shell archive files.  Check that the
define statements in sps.h are large enough for your system (You may
need to alter MAXTTYS).  Then compile it using the appropriate
Makefile. Initialise it by typing "sps i" (ignore any error messages at
this stage) and then test it out by typing "sps va". That should make
SPS list verbose information about every process currently active. If
that works, use the appropriate Makefile to install it.

Send all bug reports, fixes, comments and suggestions to Robert Ward at -

******************************************************************************
    Robert Ward,
    Hasler AG, Murtenstrasse 137a, CH-3008 Bern, Switzerland

Tel.:	    (031) - 65 23 19
Uucp:	    ... {seismo,decvax,ukc, ... }!mcvax!cernvax!hslrswi!robert
Bitnet:	    hslrswi!robert@cernvax.bitnet
Arpa:	    hslrswi!robert%cernvax.bitnet@WISCVM.ARPA
Edunet:	    hslrswi!robert%cernvax.bitnet@UCBJADE.Berkeley.EDU
******************************************************************************
