#!/bin/sh

FILES='
	remote/README
	remote/*.[ch]
	remote/doc
	remote/make.*
	remote/shells
	remote/usr.*'

set -x
cd ..
shar $FILES
mv shar.? remote

#
# put in the count
#
COUNT=`ls remote/shar.? | grep -c .`
cnt=1
while [ $cnt -le $COUNT ]
do

ed remote/shar.$cnt << EOF
1a
#
# RFS, a kernel-resident remote file system.  Shar $cnt of $COUNT
#
.
w
q
EOF
	cnt=`expr $cnt + 1`
done

#
# add in the intro
#
ed remote/shar.1 << \EOF
1i
These seven shar files contain the software and documentatino for
installation, maintenance and adjustment of RFS, a public domain,
kernel-resident distributed file system, written at Tektronix Computer
Research Laboratories* by me for partial fulfillment of the master's
degree program at the University of Denver.  It was designed to provide
complete transparency with respect to file access and protections for
all programs whether they use local or remote files and directories.
It has been installed on VAX BSD 4.2 and 4.3 UNIX, Pyramid 4.2/5.0
UNIX, version 2.5, and on a Tektronix internal proprietary workstation,
called Magnolia.  The instructions are designed in a way that keeps all
changes separate from your standard sources, in hope that it will
encourage sites to try the installation.

			Todd Brunhoff
			toddb%crl@tektronix.csnet
			decvax!tektronix!crl!toddb

* RFS should not be confused with another completely different (but
  excellent) implementation from Tektronix available on the 6000 series
  workstation, called DFS, and done by a separate product group.  The
  work on RFS was designed and written strictly by the author of this
  paper at about the same time as DFS, and draws none of its
  implementation details from DFS.  RFS is public domain, while DFS is
  proprietary.

.
w
q
EOF
