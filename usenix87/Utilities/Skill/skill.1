.TH SKILL 8 "March 10, 1986" "" "Local UNIX Programmer's Manual"
.UC 4
.SH NAME
skill \- send signal to specified processes
.SH SYNOPSIS
.B skill
[\-signal] [\-i] [\-v] [\-w] {tty user command pid}
.br
.B skill
\-l
.SH DESCRIPTION
.I Skill
sends the 
.I terminate
signal to a set of processes.
If a signal name (or number) preceded by a `\-' is given,
that signal will be substituted for terminate.  Other
options accepted by this command are as follows:
.IP \-l
Display a list of available signals (and exit).
.IP \-i
In interactive mode, the user is prompted with each
process that is a candidate for the signal.  Responding `y'
will send the signal to the process.  Also, a ^D at this
prompt causes
.I skill
to exit immediately.
.IP \-v
In verbose mode, the id of each process successfully sent
the signal is displayed.
.IP \-w
Display warning messages for unreachable processes.
.PP
.I Skill
differs from
.I kill(1)
by allowing processes to be specified using any combination of
ttys, account names, and commands (as well as process id's).
Only processes that match something in
each category will be sent the signal.  An empty category
guarantees a match.  For example, `skill -HUP vi tty00' will
send the
.I hangup
signal to all
.I vi
processes associated with
.I tty00.
Likewise, `skill 1234 ps' will send the
.I terminate
signal to the process whose id number is
.I 1234
provided it is running a
.I ps.
.PP
Command line arguments are order independent.
Since
.I skill
categorizes its arguments, there is always the chance that it
will do so incorrectly (e.g. a system command is also a users'
account name).  It tries to match an argument with a
.I tty,
an
.I account name,
and a
.I process id,
before classifying it as a
.I command.
To override this, an argument can be
.B forced
to a particular type by preceding it with "-c" (command), "-u"
(user), "-t" (tty), or "-p" (process id).
.PP
Process id's are not known beforehand, so
.I skill
must search kernel memory and the swap device for the required
information.  When a process fitting each category is
discovered, it is immediately sent the signal (unless running in
interactive mode).  Processes must belong to the current user
unless he is the super-user.
.I Skill
will not send a signal to itself, but anything else is fair game.
.PP
Exit status is normally 0; if the user makes a mistake, the
status is 1.  If a system error occurs, exit status is 2.
.SH "FILES"
/vmunix	system namelist
.br
/dev/kmem	kernel memory
.br
/dev/drum	swap device
.br
/dev		searched to find swap device and tty names
.SH "SEE ALSO"
ps(1), kill(2), sigvec(2)
.SH "AUTHOR"
Jeff Forys
