This is the tape testing program from the Concourse Computer Center at the
Massachussetts Institute of Technology.  I believe it was originated by
Mark Plotnick, but most of the CCC crowd has had a hand in doing things to
it since then.

Arguments to it are:
	-v	Verbose, tells what's going on (quite chatty)
	-n	Nice, renices itself and does a lot of sleep(2)ing.  This
		flag may be repeated for increased effect.
	-r	Set the record size of testing.
	-o	Set the initial offset from beginning of tape (which is
		achieved by doing a write that large).
	-f	Change the default drive from /dev/rmt0.

tptest writes a pattern out to the tape in uniform blocks until an error
occurs (which is assumed to be End of Tape).  It then rewinds and tries to
verify the pattern.  Then, a second pass writes a short block at the beginning
of the tape and then writes the pattern to end of tape; this verifies (or
tries to verify) that the tape in the inter-record-gaps of the first pass
is OK.

When it is all done, if the tape was OK, it gets a sequence number from
/usr/lib/tapeseq and tells it to you (so you can uniquely label tapes).  We
generally ignored this after the first few dozen, but it seemed a keen idea
at first.

This program ran under V7 and 2.8BSD, on our IBM 729 tape drive (7 track,
200/556/800 bpi, well over a half-ton weight!) and on a slightly more modern
TU-10.  The tapeopen() routine assumes that if it can't open the tape drive,
it must be rewinding.  Those with different drivers may need to change that.

		John Woods,
		ihnp4!mit-eddie!jfw, decvax!frog!john
