Conflict in state 124 between rule 49 and token ASSIGN resolved as reduce.
Conflict in state 124 between rule 49 and token '=' resolved as reduce.
Conflict in state 124 between rule 49 and token '?' resolved as reduce.
Conflict in state 124 between rule 49 and token OROR resolved as reduce.
Conflict in state 124 between rule 49 and token ANDAND resolved as reduce.
Conflict in state 124 between rule 49 and token '|' resolved as reduce.
Conflict in state 124 between rule 49 and token '^' resolved as reduce.
Conflict in state 124 between rule 49 and token '&' resolved as reduce.
Conflict in state 124 between rule 49 and token EQCOMPARE resolved as reduce.
Conflict in state 124 between rule 49 and token ARITHCOMPARE resolved as reduce.
Conflict in state 124 between rule 49 and token LSHIFT resolved as reduce.
Conflict in state 124 between rule 49 and token RSHIFT resolved as reduce.
Conflict in state 124 between rule 49 and token '+' resolved as reduce.
Conflict in state 124 between rule 49 and token '-' resolved as reduce.
Conflict in state 124 between rule 49 and token '*' resolved as reduce.
Conflict in state 124 between rule 49 and token '/' resolved as reduce.
Conflict in state 124 between rule 49 and token '%' resolved as reduce.
Conflict in state 126 between rule 51 and token ASSIGN resolved as reduce.
Conflict in state 126 between rule 51 and token '=' resolved as reduce.
Conflict in state 126 between rule 51 and token '?' resolved as reduce.
Conflict in state 126 between rule 51 and token OROR resolved as reduce.
Conflict in state 126 between rule 51 and token ANDAND resolved as reduce.
Conflict in state 126 between rule 51 and token '|' resolved as reduce.
Conflict in state 126 between rule 51 and token '^' resolved as reduce.
Conflict in state 126 between rule 51 and token '&' resolved as reduce.
Conflict in state 126 between rule 51 and token EQCOMPARE resolved as reduce.
Conflict in state 126 between rule 51 and token ARITHCOMPARE resolved as reduce.
Conflict in state 126 between rule 51 and token LSHIFT resolved as reduce.
Conflict in state 126 between rule 51 and token RSHIFT resolved as reduce.
Conflict in state 126 between rule 51 and token '+' resolved as reduce.
Conflict in state 126 between rule 51 and token '-' resolved as reduce.
Conflict in state 126 between rule 51 and token '*' resolved as reduce.
Conflict in state 126 between rule 51 and token '/' resolved as reduce.
Conflict in state 126 between rule 51 and token '%' resolved as reduce.
Conflict in state 127 between rule 45 and token ASSIGN resolved as reduce.
Conflict in state 127 between rule 45 and token '=' resolved as reduce.
Conflict in state 127 between rule 45 and token '?' resolved as reduce.
Conflict in state 127 between rule 45 and token OROR resolved as reduce.
Conflict in state 127 between rule 45 and token ANDAND resolved as reduce.
Conflict in state 127 between rule 45 and token '|' resolved as reduce.
Conflict in state 127 between rule 45 and token '^' resolved as reduce.
Conflict in state 127 between rule 45 and token '&' resolved as reduce.
Conflict in state 127 between rule 45 and token EQCOMPARE resolved as reduce.
Conflict in state 127 between rule 45 and token ARITHCOMPARE resolved as reduce.
Conflict in state 127 between rule 45 and token LSHIFT resolved as reduce.
Conflict in state 127 between rule 45 and token RSHIFT resolved as reduce.
Conflict in state 127 between rule 45 and token '+' resolved as reduce.
Conflict in state 127 between rule 45 and token '-' resolved as reduce.
Conflict in state 127 between rule 45 and token '*' resolved as reduce.
Conflict in state 127 between rule 45 and token '/' resolved as reduce.
Conflict in state 127 between rule 45 and token '%' resolved as reduce.
Conflict in state 132 between rule 46 and token ASSIGN resolved as reduce.
Conflict in state 132 between rule 46 and token '=' resolved as reduce.
Conflict in state 132 between rule 46 and token '?' resolved as reduce.
Conflict in state 132 between rule 46 and token OROR resolved as reduce.
Conflict in state 132 between rule 46 and token ANDAND resolved as reduce.
Conflict in state 132 between rule 46 and token '|' resolved as reduce.
Conflict in state 132 between rule 46 and token '^' resolved as reduce.
Conflict in state 132 between rule 46 and token '&' resolved as reduce.
Conflict in state 132 between rule 46 and token EQCOMPARE resolved as reduce.
Conflict in state 132 between rule 46 and token ARITHCOMPARE resolved as reduce.
Conflict in state 132 between rule 46 and token LSHIFT resolved as reduce.
Conflict in state 132 between rule 46 and token RSHIFT resolved as reduce.
Conflict in state 132 between rule 46 and token '+' resolved as reduce.
Conflict in state 132 between rule 46 and token '-' resolved as reduce.
Conflict in state 132 between rule 46 and token '*' resolved as reduce.
Conflict in state 132 between rule 46 and token '/' resolved as reduce.
Conflict in state 132 between rule 46 and token '%' resolved as reduce.
Conflict in state 216 between rule 69 and token ASSIGN resolved as shift.
Conflict in state 216 between rule 69 and token '=' resolved as shift.
Conflict in state 216 between rule 69 and token '?' resolved as shift.
Conflict in state 216 between rule 69 and token OROR resolved as shift.
Conflict in state 216 between rule 69 and token ANDAND resolved as shift.
Conflict in state 216 between rule 69 and token '|' resolved as shift.
Conflict in state 216 between rule 69 and token '^' resolved as shift.
Conflict in state 216 between rule 69 and token '&' resolved as shift.
Conflict in state 216 between rule 69 and token EQCOMPARE resolved as shift.
Conflict in state 216 between rule 69 and token ARITHCOMPARE resolved as shift.
Conflict in state 216 between rule 69 and token LSHIFT resolved as shift.
Conflict in state 216 between rule 69 and token RSHIFT resolved as shift.
Conflict in state 216 between rule 69 and token '+' resolved as shift.
Conflict in state 216 between rule 69 and token '-' resolved as shift.
Conflict in state 216 between rule 69 and token '*' resolved as shift.
Conflict in state 216 between rule 69 and token '/' resolved as shift.
Conflict in state 216 between rule 69 and token '%' resolved as shift.
Conflict in state 217 between rule 68 and token ASSIGN resolved as shift.
Conflict in state 217 between rule 68 and token '=' resolved as shift.
Conflict in state 217 between rule 68 and token '?' resolved as shift.
Conflict in state 217 between rule 68 and token OROR resolved as shift.
Conflict in state 217 between rule 68 and token ANDAND resolved as shift.
Conflict in state 217 between rule 68 and token '|' resolved as shift.
Conflict in state 217 between rule 68 and token '^' resolved as shift.
Conflict in state 217 between rule 68 and token '&' resolved as shift.
Conflict in state 217 between rule 68 and token EQCOMPARE resolved as shift.
Conflict in state 217 between rule 68 and token ARITHCOMPARE resolved as shift.
Conflict in state 217 between rule 68 and token LSHIFT resolved as shift.
Conflict in state 217 between rule 68 and token RSHIFT resolved as shift.
Conflict in state 217 between rule 68 and token '+' resolved as shift.
Conflict in state 217 between rule 68 and token '-' resolved as shift.
Conflict in state 217 between rule 68 and token '*' resolved as shift.
Conflict in state 217 between rule 68 and token '/' resolved as shift.
Conflict in state 217 between rule 68 and token '%' resolved as shift.
Conflict in state 220 between rule 66 and token ASSIGN resolved as reduce.
Conflict in state 220 between rule 66 and token '=' resolved as reduce.
Conflict in state 220 between rule 66 and token '?' resolved as reduce.
Conflict in state 220 between rule 66 and token OROR resolved as reduce.
Conflict in state 220 between rule 66 and token ANDAND resolved as shift.
Conflict in state 220 between rule 66 and token '|' resolved as shift.
Conflict in state 220 between rule 66 and token '^' resolved as shift.
Conflict in state 220 between rule 66 and token '&' resolved as shift.
Conflict in state 220 between rule 66 and token EQCOMPARE resolved as shift.
Conflict in state 220 between rule 66 and token ARITHCOMPARE resolved as shift.
Conflict in state 220 between rule 66 and token LSHIFT resolved as shift.
Conflict in state 220 between rule 66 and token RSHIFT resolved as shift.
Conflict in state 220 between rule 66 and token '+' resolved as shift.
Conflict in state 220 between rule 66 and token '-' resolved as shift.
Conflict in state 220 between rule 66 and token '*' resolved as shift.
Conflict in state 220 between rule 66 and token '/' resolved as shift.
Conflict in state 220 between rule 66 and token '%' resolved as shift.
Conflict in state 221 between rule 65 and token ASSIGN resolved as reduce.
Conflict in state 221 between rule 65 and token '=' resolved as reduce.
Conflict in state 221 between rule 65 and token '?' resolved as reduce.
Conflict in state 221 between rule 65 and token OROR resolved as reduce.
Conflict in state 221 between rule 65 and token ANDAND resolved as reduce.
Conflict in state 221 between rule 65 and token '|' resolved as shift.
Conflict in state 221 between rule 65 and token '^' resolved as shift.
Conflict in state 221 between rule 65 and token '&' resolved as shift.
Conflict in state 221 between rule 65 and token EQCOMPARE resolved as shift.
Conflict in state 221 between rule 65 and token ARITHCOMPARE resolved as shift.
Conflict in state 221 between rule 65 and token LSHIFT resolved as shift.
Conflict in state 221 between rule 65 and token RSHIFT resolved as shift.
Conflict in state 221 between rule 65 and token '+' resolved as shift.
Conflict in state 221 between rule 65 and token '-' resolved as shift.
Conflict in state 221 between rule 65 and token '*' resolved as shift.
Conflict in state 221 between rule 65 and token '/' resolved as shift.
Conflict in state 221 between rule 65 and token '%' resolved as shift.
Conflict in state 222 between rule 63 and token ASSIGN resolved as reduce.
Conflict in state 222 between rule 63 and token '=' resolved as reduce.
Conflict in state 222 between rule 63 and token '?' resolved as reduce.
Conflict in state 222 between rule 63 and token OROR resolved as reduce.
Conflict in state 222 between rule 63 and token ANDAND resolved as reduce.
Conflict in state 222 between rule 63 and token '|' resolved as reduce.
Conflict in state 222 between rule 63 and token '^' resolved as shift.
Conflict in state 222 between rule 63 and token '&' resolved as shift.
Conflict in state 222 between rule 63 and token EQCOMPARE resolved as shift.
Conflict in state 222 between rule 63 and token ARITHCOMPARE resolved as shift.
Conflict in state 222 between rule 63 and token LSHIFT resolved as shift.
Conflict in state 222 between rule 63 and token RSHIFT resolved as shift.
Conflict in state 222 between rule 63 and token '+' resolved as shift.
Conflict in state 222 between rule 63 and token '-' resolved as shift.
Conflict in state 222 between rule 63 and token '*' resolved as shift.
Conflict in state 222 between rule 63 and token '/' resolved as shift.
Conflict in state 222 between rule 63 and token '%' resolved as shift.
Conflict in state 223 between rule 64 and token ASSIGN resolved as reduce.
Conflict in state 223 between rule 64 and token '=' resolved as reduce.
Conflict in state 223 between rule 64 and token '?' resolved as reduce.
Conflict in state 223 between rule 64 and token OROR resolved as reduce.
Conflict in state 223 between rule 64 and token ANDAND resolved as reduce.
Conflict in state 223 between rule 64 and token '|' resolved as reduce.
Conflict in state 223 between rule 64 and token '^' resolved as reduce.
Conflict in state 223 between rule 64 and token '&' resolved as shift.
Conflict in state 223 between rule 64 and token EQCOMPARE resolved as shift.
Conflict in state 223 between rule 64 and token ARITHCOMPARE resolved as shift.
Conflict in state 223 between rule 64 and token LSHIFT resolved as shift.
Conflict in state 223 between rule 64 and token RSHIFT resolved as shift.
Conflict in state 223 between rule 64 and token '+' resolved as shift.
Conflict in state 223 between rule 64 and token '-' resolved as shift.
Conflict in state 223 between rule 64 and token '*' resolved as shift.
Conflict in state 223 between rule 64 and token '/' resolved as shift.
Conflict in state 223 between rule 64 and token '%' resolved as shift.
Conflict in state 224 between rule 62 and token ASSIGN resolved as reduce.
Conflict in state 224 between rule 62 and token '=' resolved as reduce.
Conflict in state 224 between rule 62 and token '?' resolved as reduce.
Conflict in state 224 between rule 62 and token OROR resolved as reduce.
Conflict in state 224 between rule 62 and token ANDAND resolved as reduce.
Conflict in state 224 between rule 62 and token '|' resolved as reduce.
Conflict in state 224 between rule 62 and token '^' resolved as reduce.
Conflict in state 224 between rule 62 and token '&' resolved as reduce.
Conflict in state 224 between rule 62 and token EQCOMPARE resolved as shift.
Conflict in state 224 between rule 62 and token ARITHCOMPARE resolved as shift.
Conflict in state 224 between rule 62 and token LSHIFT resolved as shift.
Conflict in state 224 between rule 62 and token RSHIFT resolved as shift.
Conflict in state 224 between rule 62 and token '+' resolved as shift.
Conflict in state 224 between rule 62 and token '-' resolved as shift.
Conflict in state 224 between rule 62 and token '*' resolved as shift.
Conflict in state 224 between rule 62 and token '/' resolved as shift.
Conflict in state 224 between rule 62 and token '%' resolved as shift.
Conflict in state 225 between rule 61 and token ASSIGN resolved as reduce.
Conflict in state 225 between rule 61 and token '=' resolved as reduce.
Conflict in state 225 between rule 61 and token '?' resolved as reduce.
Conflict in state 225 between rule 61 and token OROR resolved as reduce.
Conflict in state 225 between rule 61 and token ANDAND resolved as reduce.
Conflict in state 225 between rule 61 and token '|' resolved as reduce.
Conflict in state 225 between rule 61 and token '^' resolved as reduce.
Conflict in state 225 between rule 61 and token '&' resolved as reduce.
Conflict in state 225 between rule 61 and token EQCOMPARE resolved as reduce.
Conflict in state 225 between rule 61 and token ARITHCOMPARE resolved as shift.
Conflict in state 225 between rule 61 and token LSHIFT resolved as shift.
Conflict in state 225 between rule 61 and token RSHIFT resolved as shift.
Conflict in state 225 between rule 61 and token '+' resolved as shift.
Conflict in state 225 between rule 61 and token '-' resolved as shift.
Conflict in state 225 between rule 61 and token '*' resolved as shift.
Conflict in state 225 between rule 61 and token '/' resolved as shift.
Conflict in state 225 between rule 61 and token '%' resolved as shift.
Conflict in state 226 between rule 60 and token ASSIGN resolved as reduce.
Conflict in state 226 between rule 60 and token '=' resolved as reduce.
Conflict in state 226 between rule 60 and token '?' resolved as reduce.
Conflict in state 226 between rule 60 and token OROR resolved as reduce.
Conflict in state 226 between rule 60 and token ANDAND resolved as reduce.
Conflict in state 226 between rule 60 and token '|' resolved as reduce.
Conflict in state 226 between rule 60 and token '^' resolved as reduce.
Conflict in state 226 between rule 60 and token '&' resolved as reduce.
Conflict in state 226 between rule 60 and token EQCOMPARE resolved as reduce.
Conflict in state 226 between rule 60 and token ARITHCOMPARE resolved as reduce.
Conflict in state 226 between rule 60 and token LSHIFT resolved as shift.
Conflict in state 226 between rule 60 and token RSHIFT resolved as shift.
Conflict in state 226 between rule 60 and token '+' resolved as shift.
Conflict in state 226 between rule 60 and token '-' resolved as shift.
Conflict in state 226 between rule 60 and token '*' resolved as shift.
Conflict in state 226 between rule 60 and token '/' resolved as shift.
Conflict in state 226 between rule 60 and token '%' resolved as shift.
Conflict in state 227 between rule 58 and token ASSIGN resolved as reduce.
Conflict in state 227 between rule 58 and token '=' resolved as reduce.
Conflict in state 227 between rule 58 and token '?' resolved as reduce.
Conflict in state 227 between rule 58 and token OROR resolved as reduce.
Conflict in state 227 between rule 58 and token ANDAND resolved as reduce.
Conflict in state 227 between rule 58 and token '|' resolved as reduce.
Conflict in state 227 between rule 58 and token '^' resolved as reduce.
Conflict in state 227 between rule 58 and token '&' resolved as reduce.
Conflict in state 227 between rule 58 and token EQCOMPARE resolved as reduce.
Conflict in state 227 between rule 58 and token ARITHCOMPARE resolved as reduce.
Conflict in state 227 between rule 58 and token LSHIFT resolved as reduce.
Conflict in state 227 between rule 58 and token RSHIFT resolved as reduce.
Conflict in state 227 between rule 58 and token '+' resolved as shift.
Conflict in state 227 between rule 58 and token '-' resolved as shift.
Conflict in state 227 between rule 58 and token '*' resolved as shift.
Conflict in state 227 between rule 58 and token '/' resolved as shift.
Conflict in state 227 between rule 58 and token '%' resolved as shift.
Conflict in state 228 between rule 59 and token ASSIGN resolved as reduce.
Conflict in state 228 between rule 59 and token '=' resolved as reduce.
Conflict in state 228 between rule 59 and token '?' resolved as reduce.
Conflict in state 228 between rule 59 and token OROR resolved as reduce.
Conflict in state 228 between rule 59 and token ANDAND resolved as reduce.
Conflict in state 228 between rule 59 and token '|' resolved as reduce.
Conflict in state 228 between rule 59 and token '^' resolved as reduce.
Conflict in state 228 between rule 59 and token '&' resolved as reduce.
Conflict in state 228 between rule 59 and token EQCOMPARE resolved as reduce.
Conflict in state 228 between rule 59 and token ARITHCOMPARE resolved as reduce.
Conflict in state 228 between rule 59 and token LSHIFT resolved as reduce.
Conflict in state 228 between rule 59 and token RSHIFT resolved as reduce.
Conflict in state 228 between rule 59 and token '+' resolved as shift.
Conflict in state 228 between rule 59 and token '-' resolved as shift.
Conflict in state 228 between rule 59 and token '*' resolved as shift.
Conflict in state 228 between rule 59 and token '/' resolved as shift.
Conflict in state 228 between rule 59 and token '%' resolved as shift.
Conflict in state 229 between rule 53 and token ASSIGN resolved as reduce.
Conflict in state 229 between rule 53 and token '=' resolved as reduce.
Conflict in state 229 between rule 53 and token '?' resolved as reduce.
Conflict in state 229 between rule 53 and token OROR resolved as reduce.
Conflict in state 229 between rule 53 and token ANDAND resolved as reduce.
Conflict in state 229 between rule 53 and token '|' resolved as reduce.
Conflict in state 229 between rule 53 and token '^' resolved as reduce.
Conflict in state 229 between rule 53 and token '&' resolved as reduce.
Conflict in state 229 between rule 53 and token EQCOMPARE resolved as reduce.
Conflict in state 229 between rule 53 and token ARITHCOMPARE resolved as reduce.
Conflict in state 229 between rule 53 and token LSHIFT resolved as reduce.
Conflict in state 229 between rule 53 and token RSHIFT resolved as reduce.
Conflict in state 229 between rule 53 and token '+' resolved as reduce.
Conflict in state 229 between rule 53 and token '-' resolved as reduce.
Conflict in state 229 between rule 53 and token '*' resolved as shift.
Conflict in state 229 between rule 53 and token '/' resolved as shift.
Conflict in state 229 between rule 53 and token '%' resolved as shift.
Conflict in state 230 between rule 54 and token ASSIGN resolved as reduce.
Conflict in state 230 between rule 54 and token '=' resolved as reduce.
Conflict in state 230 between rule 54 and token '?' resolved as reduce.
Conflict in state 230 between rule 54 and token OROR resolved as reduce.
Conflict in state 230 between rule 54 and token ANDAND resolved as reduce.
Conflict in state 230 between rule 54 and token '|' resolved as reduce.
Conflict in state 230 between rule 54 and token '^' resolved as reduce.
Conflict in state 230 between rule 54 and token '&' resolved as reduce.
Conflict in state 230 between rule 54 and token EQCOMPARE resolved as reduce.
Conflict in state 230 between rule 54 and token ARITHCOMPARE resolved as reduce.
Conflict in state 230 between rule 54 and token LSHIFT resolved as reduce.
Conflict in state 230 between rule 54 and token RSHIFT resolved as reduce.
Conflict in state 230 between rule 54 and token '+' resolved as reduce.
Conflict in state 230 between rule 54 and token '-' resolved as reduce.
Conflict in state 230 between rule 54 and token '*' resolved as shift.
Conflict in state 230 between rule 54 and token '/' resolved as shift.
Conflict in state 230 between rule 54 and token '%' resolved as shift.
Conflict in state 231 between rule 55 and token ASSIGN resolved as reduce.
Conflict in state 231 between rule 55 and token '=' resolved as reduce.
Conflict in state 231 between rule 55 and token '?' resolved as reduce.
Conflict in state 231 between rule 55 and token OROR resolved as reduce.
Conflict in state 231 between rule 55 and token ANDAND resolved as reduce.
Conflict in state 231 between rule 55 and token '|' resolved as reduce.
Conflict in state 231 between rule 55 and token '^' resolved as reduce.
Conflict in state 231 between rule 55 and token '&' resolved as reduce.
Conflict in state 231 between rule 55 and token EQCOMPARE resolved as reduce.
Conflict in state 231 between rule 55 and token ARITHCOMPARE resolved as reduce.
Conflict in state 231 between rule 55 and token LSHIFT resolved as reduce.
Conflict in state 231 between rule 55 and token RSHIFT resolved as reduce.
Conflict in state 231 between rule 55 and token '+' resolved as reduce.
Conflict in state 231 between rule 55 and token '-' resolved as reduce.
Conflict in state 231 between rule 55 and token '*' resolved as reduce.
Conflict in state 231 between rule 55 and token '/' resolved as reduce.
Conflict in state 231 between rule 55 and token '%' resolved as reduce.
Conflict in state 232 between rule 56 and token ASSIGN resolved as reduce.
Conflict in state 232 between rule 56 and token '=' resolved as reduce.
Conflict in state 232 between rule 56 and token '?' resolved as reduce.
Conflict in state 232 between rule 56 and token OROR resolved as reduce.
Conflict in state 232 between rule 56 and token ANDAND resolved as reduce.
Conflict in state 232 between rule 56 and token '|' resolved as reduce.
Conflict in state 232 between rule 56 and token '^' resolved as reduce.
Conflict in state 232 between rule 56 and token '&' resolved as reduce.
Conflict in state 232 between rule 56 and token EQCOMPARE resolved as reduce.
Conflict in state 232 between rule 56 and token ARITHCOMPARE resolved as reduce.
Conflict in state 232 between rule 56 and token LSHIFT resolved as reduce.
Conflict in state 232 between rule 56 and token RSHIFT resolved as reduce.
Conflict in state 232 between rule 56 and token '+' resolved as reduce.
Conflict in state 232 between rule 56 and token '-' resolved as reduce.
Conflict in state 232 between rule 56 and token '*' resolved as reduce.
Conflict in state 232 between rule 56 and token '/' resolved as reduce.
Conflict in state 232 between rule 56 and token '%' resolved as reduce.
Conflict in state 233 between rule 57 and token ASSIGN resolved as reduce.
Conflict in state 233 between rule 57 and token '=' resolved as reduce.
Conflict in state 233 between rule 57 and token '?' resolved as reduce.
Conflict in state 233 between rule 57 and token OROR resolved as reduce.
Conflict in state 233 between rule 57 and token ANDAND resolved as reduce.
Conflict in state 233 between rule 57 and token '|' resolved as reduce.
Conflict in state 233 between rule 57 and token '^' resolved as reduce.
Conflict in state 233 between rule 57 and token '&' resolved as reduce.
Conflict in state 233 between rule 57 and token EQCOMPARE resolved as reduce.
Conflict in state 233 between rule 57 and token ARITHCOMPARE resolved as reduce.
Conflict in state 233 between rule 57 and token LSHIFT resolved as reduce.
Conflict in state 233 between rule 57 and token RSHIFT resolved as reduce.
Conflict in state 233 between rule 57 and token '+' resolved as reduce.
Conflict in state 233 between rule 57 and token '-' resolved as reduce.
Conflict in state 233 between rule 57 and token '*' resolved as reduce.
Conflict in state 233 between rule 57 and token '/' resolved as reduce.
Conflict in state 233 between rule 57 and token '%' resolved as reduce.
Conflict in state 289 between rule 50 and token '&' resolved as reduce.
Conflict in state 289 between rule 50 and token '+' resolved as reduce.
Conflict in state 289 between rule 50 and token '-' resolved as reduce.
Conflict in state 289 between rule 50 and token '*' resolved as reduce.
Conflict in state 290 between rule 52 and token '&' resolved as reduce.
Conflict in state 290 between rule 52 and token '+' resolved as reduce.
Conflict in state 290 between rule 52 and token '-' resolved as reduce.
Conflict in state 290 between rule 52 and token '*' resolved as reduce.
Conflict in state 295 between rule 47 and token ASSIGN resolved as reduce.
Conflict in state 295 between rule 47 and token '=' resolved as reduce.
Conflict in state 295 between rule 47 and token '?' resolved as reduce.
Conflict in state 295 between rule 47 and token OROR resolved as reduce.
Conflict in state 295 between rule 47 and token ANDAND resolved as reduce.
Conflict in state 295 between rule 47 and token '|' resolved as reduce.
Conflict in state 295 between rule 47 and token '^' resolved as reduce.
Conflict in state 295 between rule 47 and token '&' resolved as reduce.
Conflict in state 295 between rule 47 and token EQCOMPARE resolved as reduce.
Conflict in state 295 between rule 47 and token ARITHCOMPARE resolved as reduce.
Conflict in state 295 between rule 47 and token LSHIFT resolved as reduce.
Conflict in state 295 between rule 47 and token RSHIFT resolved as reduce.
Conflict in state 295 between rule 47 and token '+' resolved as reduce.
Conflict in state 295 between rule 47 and token '-' resolved as reduce.
Conflict in state 295 between rule 47 and token '*' resolved as reduce.
Conflict in state 295 between rule 47 and token '/' resolved as reduce.
Conflict in state 295 between rule 47 and token '%' resolved as reduce.
Conflict in state 364 between rule 67 and token ASSIGN resolved as reduce.
Conflict in state 364 between rule 67 and token '=' resolved as reduce.
Conflict in state 364 between rule 67 and token '?' resolved as shift.
Conflict in state 364 between rule 67 and token OROR resolved as shift.
Conflict in state 364 between rule 67 and token ANDAND resolved as shift.
Conflict in state 364 between rule 67 and token '|' resolved as shift.
Conflict in state 364 between rule 67 and token '^' resolved as shift.
Conflict in state 364 between rule 67 and token '&' resolved as shift.
Conflict in state 364 between rule 67 and token EQCOMPARE resolved as shift.
Conflict in state 364 between rule 67 and token ARITHCOMPARE resolved as shift.
Conflict in state 364 between rule 67 and token LSHIFT resolved as shift.
Conflict in state 364 between rule 67 and token RSHIFT resolved as shift.
Conflict in state 364 between rule 67 and token '+' resolved as shift.
Conflict in state 364 between rule 67 and token '-' resolved as shift.
Conflict in state 364 between rule 67 and token '*' resolved as shift.
Conflict in state 364 between rule 67 and token '/' resolved as shift.
Conflict in state 364 between rule 67 and token '%' resolved as shift.
State 41 contains 1 shift/reduce conflict.
State 97 contains 1 shift/reduce conflict.
State 101 contains 1 shift/reduce conflict.
State 117 contains 1 shift/reduce conflict.
State 169 contains 2 shift/reduce conflicts.
State 239 contains 2 shift/reduce conflicts.
State 269 contains 2 shift/reduce conflicts.
State 299 contains 2 shift/reduce conflicts.
State 360 contains 1 shift/reduce conflict.
State 368 contains 2 shift/reduce conflicts.
State 371 contains 2 shift/reduce conflicts.
State 408 contains 2 shift/reduce conflicts.


token types:
 type -1 is $
 type 33 is '!'
 type 37 is '%'
 type 38 is '&'
 type 40 is '('
 type 41 is ')'
 type 42 is '*'
 type 43 is '+'
 type 44 is ','
 type 45 is '-'
 type 46 is '.'
 type 47 is '/'
 type 58 is ':'
 type 59 is ';'
 type 61 is '='
 type 63 is '?'
 type 91 is '['
 type 93 is ']'
 type 94 is '^'
 type 123 is '{'
 type 124 is '|'
 type 125 is '}'
 type 126 is '~'
 type 256 is error
 type 258 is IDENTIFIER
 type 259 is TYPENAME
 type 260 is SCSPEC
 type 261 is TYPESPEC
 type 262 is TYPE_QUAL
 type 263 is CONSTANT
 type 264 is STRING
 type 265 is ELLIPSIS
 type 266 is SIZEOF
 type 267 is ENUM
 type 268 is STRUCT
 type 269 is UNION
 type 270 is IF
 type 271 is ELSE
 type 272 is WHILE
 type 273 is DO
 type 274 is FOR
 type 275 is SWITCH
 type 276 is CASE
 type 277 is DEFAULT
 type 278 is BREAK
 type 279 is CONTINUE
 type 280 is RETURN
 type 281 is GOTO
 type 282 is ASM
 type 283 is TYPEOF
 type 284 is ALIGNOF
 type 285 is ASSIGN
 type 286 is OROR
 type 287 is ANDAND
 type 288 is EQCOMPARE
 type 289 is ARITHCOMPARE
 type 290 is LSHIFT
 type 291 is RSHIFT
 type 292 is UNARY
 type 293 is PLUSPLUS
 type 294 is MINUSMINUS
 type 295 is HYPERUNARY
 type 296 is POINTSAT


state 0

    extdefs	shift  1
    program	shift  479
    @1  	shift  2

    $   	reduce  1  (program)
    $default	reduce  3  (@1)



state 1

    program  ->  extdefs .   (2)
    extdefs  ->  extdefs . @2 extdef   (6)

    @2  	shift  3

    $   	reduce  2  (program)
    $default	reduce  5  (@2)



state 2

    extdefs  ->  @1 . extdef   (4)

    error	shift  4
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    ASM 	shift  12
    TYPEOF	shift  13
    ';' 	shift  14
    extdef	shift  15
    datadef	shift  16
    fndef	shift  17
    setspecs	shift  18
    typed_declspecs	shift  19
    declmods	shift  20
    typespec	shift  21
    structsp	shift  22

    IDENTIFIER	reduce  91  (setspecs)
    '*' 	[reduce  91  (setspecs)]
    '(' 	reduce  91  (setspecs)



state 3

    extdefs  ->  extdefs @2 . extdef   (6)

    error	shift  4
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    ASM 	shift  12
    TYPEOF	shift  13
    ';' 	shift  14
    extdef	shift  23
    datadef	shift  16
    fndef	shift  17
    setspecs	shift  18
    typed_declspecs	shift  19
    declmods	shift  20
    typespec	shift  21
    structsp	shift  22

    IDENTIFIER	reduce  91  (setspecs)
    '*' 	[reduce  91  (setspecs)]
    '(' 	reduce  91  (setspecs)



state 4

    datadef  ->  error . ';'   (15)
    datadef  ->  error . '}'   (16)

    ';' 	shift  24
    '}' 	shift  25



state 5

    typespec  ->  TYPENAME .   (111)

    $default	reduce  111  (typespec)



state 6

    declmods  ->  SCSPEC .   (102)

    $default	reduce  102  (declmods)



state 7

    typespec  ->  TYPESPEC .   (109)

    $default	reduce  109  (typespec)



state 8

    declmods  ->  TYPE_QUAL .   (101)

    $default	reduce  101  (declmods)



state 9

    structsp  ->  ENUM . identifier '{' @14 enumlist maybecomma '}'   (163)
    structsp  ->  ENUM . '{' @15 enumlist maybecomma '}'   (165)
    structsp  ->  ENUM . identifier   (166)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    '{' 	shift  28
    identifier	shift  29



state 10

    structsp  ->  STRUCT . identifier '{' @12 component_decl_list '}'   (155)
    structsp  ->  STRUCT . '{' component_decl_list '}'   (156)
    structsp  ->  STRUCT . identifier   (157)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    '{' 	shift  30
    identifier	shift  31



state 11

    structsp  ->  UNION . identifier '{' @13 component_decl_list '}'   (159)
    structsp  ->  UNION . '{' component_decl_list '}'   (160)
    structsp  ->  UNION . identifier   (161)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    '{' 	shift  32
    identifier	shift  33



state 12

    extdef  ->  ASM . '(' string ')' ';'   (9)

    '(' 	shift  34



state 13

    typespec  ->  TYPEOF . '(' expr ')'   (112)
    typespec  ->  TYPEOF . '(' typename ')'   (113)

    '(' 	shift  35



state 14

    datadef  ->  ';' .   (17)

    $default	reduce  17  (datadef)



state 15

    extdefs  ->  @1 extdef .   (4)

    $default	reduce  4  (extdefs)



state 16

    extdef  ->  datadef .   (8)

    $default	reduce  8  (extdef)



state 17

    extdef  ->  fndef .   (7)

    $default	reduce  7  (extdef)



state 18

    datadef  ->  setspecs . notype_initdecls ';'   (10)
    fndef  ->  setspecs . notype_declarator @7 xdecls @8 compstmt   (28)
    fndef  ->  setspecs . notype_declarator error   (29)

    IDENTIFIER	shift  36
    '*' 	shift  37
    '(' 	shift  38
    notype_initdecls	shift  39
    notype_initdcl	shift  40
    notype_declarator	shift  41



state 19

    datadef  ->  typed_declspecs . setspecs initdecls ';'   (12)
    datadef  ->  typed_declspecs . ';'   (14)
    fndef  ->  typed_declspecs . setspecs declarator @3 xdecls @4 compstmt   (20)
    fndef  ->  typed_declspecs . setspecs declarator error   (21)

    ';' 	shift  42
    setspecs	shift  43

    $default	reduce  91  (setspecs)



state 20

    datadef  ->  declmods . setspecs notype_initdecls ';'   (11)
    datadef  ->  declmods . ';'   (13)
    fndef  ->  declmods . setspecs notype_declarator @5 xdecls @6 compstmt   (24)
    fndef  ->  declmods . setspecs notype_declarator error   (25)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (97)
    declmods  ->  declmods . TYPE_QUAL   (103)
    declmods  ->  declmods . SCSPEC   (104)

    TYPENAME	shift  5
    SCSPEC	shift  44
    TYPESPEC	shift  7
    TYPE_QUAL	shift  45
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ';' 	shift  46
    setspecs	shift  47
    typespec	shift  48
    structsp	shift  22

    $default	reduce  91  (setspecs)



state 21

    typed_declspecs  ->  typespec . reserved_declspecs   (96)

    reserved_declspecs	shift  49

    $default	reduce  98  (reserved_declspecs)



state 22

    typespec  ->  structsp .   (110)

    $default	reduce  110  (typespec)



state 23

    extdefs  ->  extdefs @2 extdef .   (6)

    $default	reduce  6  (extdefs)



state 24

    datadef  ->  error ';' .   (15)

    $default	reduce  15  (datadef)



state 25

    datadef  ->  error '}' .   (16)

    $default	reduce  16  (datadef)



state 26

    identifier  ->  IDENTIFIER .   (30)

    $default	reduce  30  (identifier)



state 27

    identifier  ->  TYPENAME .   (31)

    $default	reduce  31  (identifier)



state 28

    structsp  ->  ENUM '{' . @15 enumlist maybecomma '}'   (165)

    @15 	shift  50

    $default	reduce  164  (@15)



state 29

    structsp  ->  ENUM identifier . '{' @14 enumlist maybecomma '}'   (163)
    structsp  ->  ENUM identifier .   (166)

    '{' 	shift  51

    $default	reduce  166  (structsp)



state 30

    structsp  ->  STRUCT '{' . component_decl_list '}'   (156)

    component_decl_list	shift  52

    $default	reduce  169  (component_decl_list)



state 31

    structsp  ->  STRUCT identifier . '{' @12 component_decl_list '}'   (155)
    structsp  ->  STRUCT identifier .   (157)

    '{' 	shift  53

    $default	reduce  157  (structsp)



state 32

    structsp  ->  UNION '{' . component_decl_list '}'   (160)

    component_decl_list	shift  54

    $default	reduce  169  (component_decl_list)



state 33

    structsp  ->  UNION identifier . '{' @13 component_decl_list '}'   (159)
    structsp  ->  UNION identifier .   (161)

    '{' 	shift  55

    $default	reduce  161  (structsp)



state 34

    extdef  ->  ASM '(' . string ')' ';'   (9)

    STRING	shift  56
    string	shift  57



state 35

    typespec  ->  TYPEOF '(' . expr ')'   (112)
    typespec  ->  TYPEOF '(' . typename ')'   (113)

    IDENTIFIER	shift  58
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  73
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    typed_typespecs	shift  78
    typespec	shift  79
    structsp	shift  22
    typename	shift  80
    nonempty_type_quals	shift  81



state 36

    notype_declarator  ->  IDENTIFIER .   (153)

    $default	reduce  153  (notype_declarator)



state 37

    notype_declarator  ->  '*' . type_quals notype_declarator   (150)

    type_quals	shift  82

    $default	reduce  191  (type_quals)



state 38

    notype_declarator  ->  '(' . notype_declarator ')'   (149)

    IDENTIFIER	shift  36
    '*' 	shift  37
    '(' 	shift  38
    notype_declarator	shift  83



state 39

    datadef  ->  setspecs notype_initdecls . ';'   (10)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (120)

    ';' 	shift  84
    ',' 	shift  85



state 40

    notype_initdecls  ->  notype_initdcl .   (119)

    $default	reduce  119  (notype_initdecls)



state 41

    fndef  ->  setspecs notype_declarator . @7 xdecls @8 compstmt   (28)
    fndef  ->  setspecs notype_declarator . error   (29)
    notype_initdcl  ->  notype_declarator . maybeasm '=' @11 init   (127)
    notype_initdcl  ->  notype_declarator . maybeasm   (128)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)

    error	shift  86
    ASM 	shift  87
    '(' 	shift  88
    '[' 	shift  89
    @7  	shift  90
    maybeasm	shift  91

    error	[reduce  26  (@7)]
    TYPENAME	reduce  26  (@7)
    SCSPEC	reduce  26  (@7)
    TYPESPEC	reduce  26  (@7)
    TYPE_QUAL	reduce  26  (@7)
    ENUM	reduce  26  (@7)
    STRUCT	reduce  26  (@7)
    UNION	reduce  26  (@7)
    TYPEOF	reduce  26  (@7)
    '=' 	reduce  121  (maybeasm)
    ';' 	reduce  121  (maybeasm)
    ',' 	reduce  121  (maybeasm)
    '{' 	reduce  26  (@7)



state 42

    datadef  ->  typed_declspecs ';' .   (14)

    $default	reduce  14  (datadef)



state 43

    datadef  ->  typed_declspecs setspecs . initdecls ';'   (12)
    fndef  ->  typed_declspecs setspecs . declarator @3 xdecls @4 compstmt   (20)
    fndef  ->  typed_declspecs setspecs . declarator error   (21)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    '*' 	shift  93
    '(' 	shift  94
    initdecls	shift  95
    initdcl	shift  96
    declarator	shift  97
    after_type_declarator	shift  98
    notype_declarator	shift  99



state 44

    declmods  ->  declmods SCSPEC .   (104)

    $default	reduce  104  (declmods)



state 45

    declmods  ->  declmods TYPE_QUAL .   (103)

    $default	reduce  103  (declmods)



state 46

    datadef  ->  declmods ';' .   (13)

    $default	reduce  13  (datadef)



state 47

    datadef  ->  declmods setspecs . notype_initdecls ';'   (11)
    fndef  ->  declmods setspecs . notype_declarator @5 xdecls @6 compstmt   (24)
    fndef  ->  declmods setspecs . notype_declarator error   (25)

    IDENTIFIER	shift  36
    '*' 	shift  37
    '(' 	shift  38
    notype_initdecls	shift  100
    notype_initdcl	shift  40
    notype_declarator	shift  101



state 48

    typed_declspecs  ->  declmods typespec . reserved_declspecs   (97)

    reserved_declspecs	shift  102

    $default	reduce  98  (reserved_declspecs)



state 49

    typed_declspecs  ->  typespec reserved_declspecs .   (96)
    reserved_declspecs  ->  reserved_declspecs . typespecqual_reserved   (99)
    reserved_declspecs  ->  reserved_declspecs . SCSPEC   (100)

    SCSPEC	shift  103
    TYPESPEC	shift  104
    TYPE_QUAL	shift  105
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  106
    structsp	shift  107

    $default	reduce  96  (typed_declspecs)



state 50

    structsp  ->  ENUM '{' @15 . enumlist maybecomma '}'   (165)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    identifier	shift  108
    enumlist	shift  109
    enumerator	shift  110



state 51

    structsp  ->  ENUM identifier '{' . @14 enumlist maybecomma '}'   (163)

    @14 	shift  111

    $default	reduce  162  (@14)



state 52

    structsp  ->  STRUCT '{' component_decl_list . '}'   (156)
    component_decl_list  ->  component_decl_list . component_decl ';'   (170)
    component_decl_list  ->  component_decl_list . ';'   (171)

    error	shift  112
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ';' 	shift  113
    '}' 	shift  114
    typed_typespecs	shift  115
    typespec	shift  79
    structsp	shift  22
    component_decl	shift  116
    nonempty_type_quals	shift  117



state 53

    structsp  ->  STRUCT identifier '{' . @12 component_decl_list '}'   (155)

    @12 	shift  118

    $default	reduce  154  (@12)



state 54

    structsp  ->  UNION '{' component_decl_list . '}'   (160)
    component_decl_list  ->  component_decl_list . component_decl ';'   (170)
    component_decl_list  ->  component_decl_list . ';'   (171)

    error	shift  112
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ';' 	shift  113
    '}' 	shift  119
    typed_typespecs	shift  115
    typespec	shift  79
    structsp	shift  22
    component_decl	shift  116
    nonempty_type_quals	shift  117



state 55

    structsp  ->  UNION identifier '{' . @13 component_decl_list '}'   (159)

    @13 	shift  120

    $default	reduce  158  (@13)



state 56

    string  ->  STRING .   (83)

    $default	reduce  83  (string)



state 57

    extdef  ->  ASM '(' string . ')' ';'   (9)
    string  ->  string . STRING   (84)

    STRING	shift  121
    ')' 	shift  122



state 58

    primary  ->  IDENTIFIER .   (70)

    $default	reduce  70  (primary)



state 59

    nonempty_type_quals  ->  TYPE_QUAL .   (189)

    $default	reduce  189  (nonempty_type_quals)



state 60

    primary  ->  CONSTANT .   (71)

    $default	reduce  71  (primary)



state 61

    expr_no_commas  ->  SIZEOF . expr_no_commas   (49)
    expr_no_commas  ->  SIZEOF . '(' typename ')'   (50)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  123
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  124
    primary	shift  76
    string	shift  77



state 62

    expr_no_commas  ->  ALIGNOF . expr_no_commas   (51)
    expr_no_commas  ->  ALIGNOF . '(' typename ')'   (52)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  125
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  126
    primary	shift  76
    string	shift  77



state 63

    unop  ->  '&' .   (32)

    $default	reduce  32  (unop)



state 64

    unop  ->  '+' .   (34)

    $default	reduce  34  (unop)



state 65

    unop  ->  '-' .   (33)

    $default	reduce  33  (unop)



state 66

    expr_no_commas  ->  '*' . expr_no_commas   (45)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  127
    primary	shift  76
    string	shift  77



state 67

    unop  ->  PLUSPLUS .   (35)

    $default	reduce  35  (unop)



state 68

    unop  ->  MINUSMINUS .   (36)

    $default	reduce  36  (unop)



state 69

    expr_no_commas  ->  '(' . typename ')' expr_no_commas   (47)
    expr_no_commas  ->  '(' . typename ')' '{' initlist maybecomma '}'   (48)
    primary  ->  '(' . expr ')'   (73)
    primary  ->  '(' . error ')'   (74)
    primary  ->  '(' . @9 compstmt ')'   (76)

    error	shift  128
    IDENTIFIER	shift  58
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  129
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    @9  	shift  130
    string	shift  77
    typed_typespecs	shift  78
    typespec	shift  79
    structsp	shift  22
    typename	shift  131
    nonempty_type_quals	shift  81

    '{' 	[reduce  75  (@9)]



state 70

    unop  ->  '~' .   (37)

    $default	reduce  37  (unop)



state 71

    unop  ->  '!' .   (38)

    $default	reduce  38  (unop)



state 72

    expr_no_commas  ->  unop . expr_no_commas   (46)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  132
    primary	shift  76
    string	shift  77



state 73

    typespec  ->  TYPEOF '(' expr . ')'   (112)

    ')' 	shift  133



state 74

    expr  ->  nonnull_exprlist .   (39)
    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (43)

    ',' 	shift  134

    $default	reduce  39  (expr)



state 75

    nonnull_exprlist  ->  expr_no_commas .   (42)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  42  (nonnull_exprlist)



state 76

    expr_no_commas  ->  primary .   (44)
    primary  ->  primary . '(' exprlist ')'   (77)
    primary  ->  primary . '[' expr ']'   (78)
    primary  ->  primary . '.' identifier   (79)
    primary  ->  primary . POINTSAT identifier   (80)
    primary  ->  primary . PLUSPLUS   (81)
    primary  ->  primary . MINUSMINUS   (82)

    PLUSPLUS	shift  152
    MINUSMINUS	shift  153
    POINTSAT	shift  154
    '.' 	shift  155
    '(' 	shift  156
    '[' 	shift  157

    $default	reduce  44  (expr_no_commas)



state 77

    primary  ->  string .   (72)
    string  ->  string . STRING   (84)

    STRING	shift  121

    $default	reduce  72  (primary)



state 78

    typename  ->  typed_typespecs . absdcl   (185)

    '*' 	shift  158
    '(' 	shift  159
    '[' 	shift  160
    absdcl	shift  161
    absdcl1	shift  162

    $default	reduce  187  (absdcl)



state 79

    typed_typespecs  ->  typespec . reserved_typespecquals   (105)

    reserved_typespecquals	shift  163

    $default	reduce  107  (reserved_typespecquals)



state 80

    typespec  ->  TYPEOF '(' typename . ')'   (113)

    ')' 	shift  164



state 81

    typed_typespecs  ->  nonempty_type_quals . typespec reserved_typespecquals   (106)
    typename  ->  nonempty_type_quals . absdcl   (186)
    nonempty_type_quals  ->  nonempty_type_quals . TYPE_QUAL   (190)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  165
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    '*' 	shift  158
    '(' 	shift  159
    '[' 	shift  160
    typespec	shift  166
    structsp	shift  22
    absdcl	shift  167
    absdcl1	shift  162

    $default	reduce  187  (absdcl)



state 82

    notype_declarator  ->  '*' type_quals . notype_declarator   (150)
    type_quals  ->  type_quals . TYPE_QUAL   (192)

    IDENTIFIER	shift  36
    TYPE_QUAL	shift  168
    '*' 	shift  37
    '(' 	shift  38
    notype_declarator	shift  169



state 83

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  '(' notype_declarator . ')'   (149)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)

    '(' 	shift  88
    ')' 	shift  170
    '[' 	shift  89



state 84

    datadef  ->  setspecs notype_initdecls ';' .   (10)

    $default	reduce  10  (datadef)



state 85

    notype_initdecls  ->  notype_initdecls ',' . initdcl   (120)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    '*' 	shift  93
    '(' 	shift  94
    initdcl	shift  171
    declarator	shift  172
    after_type_declarator	shift  98
    notype_declarator	shift  99



state 86

    fndef  ->  setspecs notype_declarator error .   (29)

    $default	reduce  29  (fndef)



state 87

    maybeasm  ->  ASM . '(' string ')'   (122)

    '(' 	shift  173



state 88

    notype_declarator  ->  notype_declarator '(' . parmlist_or_identifiers   (148)

    parmlist_or_identifiers	shift  174
    @30 	shift  175

    $default	reduce  257  (@30)



state 89

    notype_declarator  ->  notype_declarator '[' . expr ']'   (151)
    notype_declarator  ->  notype_declarator '[' . ']'   (152)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    ']' 	shift  176
    unop	shift  72
    expr	shift  177
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 90

    fndef  ->  setspecs notype_declarator @7 . xdecls @8 compstmt   (28)

    error	shift  178
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    xdecls	shift  179
    decls	shift  180
    decl	shift  181
    typed_declspecs	shift  182
    declmods	shift  183
    typespec	shift  21
    structsp	shift  22
    errstmt	shift  184

    '{' 	reduce  85  (xdecls)



state 91

    notype_initdcl  ->  notype_declarator maybeasm . '=' @11 init   (127)
    notype_initdcl  ->  notype_declarator maybeasm .   (128)

    '=' 	shift  185

    $default	reduce  128  (notype_initdcl)



state 92

    after_type_declarator  ->  TYPENAME .   (142)

    $default	reduce  142  (after_type_declarator)



state 93

    after_type_declarator  ->  '*' . type_quals after_type_declarator   (141)
    notype_declarator  ->  '*' . type_quals notype_declarator   (150)

    type_quals	shift  186

    $default	reduce  191  (type_quals)



state 94

    after_type_declarator  ->  '(' . after_type_declarator ')'   (137)
    notype_declarator  ->  '(' . notype_declarator ')'   (149)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    '*' 	shift  93
    '(' 	shift  94
    after_type_declarator	shift  187
    notype_declarator	shift  83



state 95

    datadef  ->  typed_declspecs setspecs initdecls . ';'   (12)
    initdecls  ->  initdecls . ',' initdcl   (118)

    ';' 	shift  188
    ',' 	shift  189



state 96

    initdecls  ->  initdcl .   (117)

    $default	reduce  117  (initdecls)



state 97

    fndef  ->  typed_declspecs setspecs declarator . @3 xdecls @4 compstmt   (20)
    fndef  ->  typed_declspecs setspecs declarator . error   (21)
    initdcl  ->  declarator . maybeasm '=' @10 init   (124)
    initdcl  ->  declarator . maybeasm   (125)

    error	shift  190
    ASM 	shift  87
    @3  	shift  191
    maybeasm	shift  192

    error	[reduce  18  (@3)]
    TYPENAME	reduce  18  (@3)
    SCSPEC	reduce  18  (@3)
    TYPESPEC	reduce  18  (@3)
    TYPE_QUAL	reduce  18  (@3)
    ENUM	reduce  18  (@3)
    STRUCT	reduce  18  (@3)
    UNION	reduce  18  (@3)
    TYPEOF	reduce  18  (@3)
    '=' 	reduce  121  (maybeasm)
    ';' 	reduce  121  (maybeasm)
    ',' 	reduce  121  (maybeasm)
    '{' 	reduce  18  (@3)



state 98

    declarator  ->  after_type_declarator .   (135)
    after_type_declarator  ->  after_type_declarator . '(' parmlist_or_identifiers   (138)
    after_type_declarator  ->  after_type_declarator . '[' expr ']'   (139)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (140)

    '(' 	shift  193
    '[' 	shift  194

    $default	reduce  135  (declarator)



state 99

    declarator  ->  notype_declarator .   (136)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)

    '(' 	shift  88
    '[' 	shift  89

    $default	reduce  136  (declarator)



state 100

    datadef  ->  declmods setspecs notype_initdecls . ';'   (11)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (120)

    ';' 	shift  195
    ',' 	shift  85



state 101

    fndef  ->  declmods setspecs notype_declarator . @5 xdecls @6 compstmt   (24)
    fndef  ->  declmods setspecs notype_declarator . error   (25)
    notype_initdcl  ->  notype_declarator . maybeasm '=' @11 init   (127)
    notype_initdcl  ->  notype_declarator . maybeasm   (128)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)

    error	shift  196
    ASM 	shift  87
    '(' 	shift  88
    '[' 	shift  89
    @5  	shift  197
    maybeasm	shift  91

    error	[reduce  22  (@5)]
    TYPENAME	reduce  22  (@5)
    SCSPEC	reduce  22  (@5)
    TYPESPEC	reduce  22  (@5)
    TYPE_QUAL	reduce  22  (@5)
    ENUM	reduce  22  (@5)
    STRUCT	reduce  22  (@5)
    UNION	reduce  22  (@5)
    TYPEOF	reduce  22  (@5)
    '=' 	reduce  121  (maybeasm)
    ';' 	reduce  121  (maybeasm)
    ',' 	reduce  121  (maybeasm)
    '{' 	reduce  22  (@5)



state 102

    typed_declspecs  ->  declmods typespec reserved_declspecs .   (97)
    reserved_declspecs  ->  reserved_declspecs . typespecqual_reserved   (99)
    reserved_declspecs  ->  reserved_declspecs . SCSPEC   (100)

    SCSPEC	shift  103
    TYPESPEC	shift  104
    TYPE_QUAL	shift  105
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  106
    structsp	shift  107

    $default	reduce  97  (typed_declspecs)



state 103

    reserved_declspecs  ->  reserved_declspecs SCSPEC .   (100)

    $default	reduce  100  (reserved_declspecs)



state 104

    typespecqual_reserved  ->  TYPESPEC .   (114)

    $default	reduce  114  (typespecqual_reserved)



state 105

    typespecqual_reserved  ->  TYPE_QUAL .   (115)

    $default	reduce  115  (typespecqual_reserved)



state 106

    reserved_declspecs  ->  reserved_declspecs typespecqual_reserved .   (99)

    $default	reduce  99  (reserved_declspecs)



state 107

    typespecqual_reserved  ->  structsp .   (116)

    $default	reduce  116  (typespecqual_reserved)



state 108

    enumerator  ->  identifier .   (183)
    enumerator  ->  identifier . '=' expr_no_commas   (184)

    '=' 	shift  198

    $default	reduce  183  (enumerator)



state 109

    structsp  ->  ENUM '{' @15 enumlist . maybecomma '}'   (165)
    enumlist  ->  enumlist . ',' enumerator   (182)

    ',' 	shift  199
    maybecomma	shift  200

    $default	reduce  167  (maybecomma)



state 110

    enumlist  ->  enumerator .   (181)

    $default	reduce  181  (enumlist)



state 111

    structsp  ->  ENUM identifier '{' @14 . enumlist maybecomma '}'   (163)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    identifier	shift  108
    enumlist	shift  201
    enumerator	shift  110



state 112

    component_decl  ->  error .   (174)

    $default	reduce  174  (component_decl)



state 113

    component_decl_list  ->  component_decl_list ';' .   (171)

    $default	reduce  171  (component_decl_list)



state 114

    structsp  ->  STRUCT '{' component_decl_list '}' .   (156)

    $default	reduce  156  (structsp)



state 115

    component_decl  ->  typed_typespecs . setspecs components   (172)

    setspecs	shift  202

    $default	reduce  91  (setspecs)



state 116

    component_decl_list  ->  component_decl_list component_decl . ';'   (170)

    ';' 	shift  203



state 117

    typed_typespecs  ->  nonempty_type_quals . typespec reserved_typespecquals   (106)
    component_decl  ->  nonempty_type_quals . setspecs components   (173)
    nonempty_type_quals  ->  nonempty_type_quals . TYPE_QUAL   (190)

    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  165
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    setspecs	shift  204
    typespec	shift  166
    structsp	shift  22

    TYPENAME	[reduce  91  (setspecs)]
    $default	reduce  91  (setspecs)



state 118

    structsp  ->  STRUCT identifier '{' @12 . component_decl_list '}'   (155)

    component_decl_list	shift  205

    $default	reduce  169  (component_decl_list)



state 119

    structsp  ->  UNION '{' component_decl_list '}' .   (160)

    $default	reduce  160  (structsp)



state 120

    structsp  ->  UNION identifier '{' @13 . component_decl_list '}'   (159)

    component_decl_list	shift  206

    $default	reduce  169  (component_decl_list)



state 121

    string  ->  string STRING .   (84)

    $default	reduce  84  (string)



state 122

    extdef  ->  ASM '(' string ')' . ';'   (9)

    ';' 	shift  207



state 123

    expr_no_commas  ->  '(' . typename ')' expr_no_commas   (47)
    expr_no_commas  ->  '(' . typename ')' '{' initlist maybecomma '}'   (48)
    expr_no_commas  ->  SIZEOF '(' . typename ')'   (50)
    primary  ->  '(' . expr ')'   (73)
    primary  ->  '(' . error ')'   (74)
    primary  ->  '(' . @9 compstmt ')'   (76)

    error	shift  128
    IDENTIFIER	shift  58
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  129
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    @9  	shift  130
    string	shift  77
    typed_typespecs	shift  78
    typespec	shift  79
    structsp	shift  22
    typename	shift  208
    nonempty_type_quals	shift  81

    '{' 	[reduce  75  (@9)]



state 124

    expr_no_commas  ->  SIZEOF expr_no_commas .   (49)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  49  (expr_no_commas)



state 125

    expr_no_commas  ->  '(' . typename ')' expr_no_commas   (47)
    expr_no_commas  ->  '(' . typename ')' '{' initlist maybecomma '}'   (48)
    expr_no_commas  ->  ALIGNOF '(' . typename ')'   (52)
    primary  ->  '(' . expr ')'   (73)
    primary  ->  '(' . error ')'   (74)
    primary  ->  '(' . @9 compstmt ')'   (76)

    error	shift  128
    IDENTIFIER	shift  58
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  129
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    @9  	shift  130
    string	shift  77
    typed_typespecs	shift  78
    typespec	shift  79
    structsp	shift  22
    typename	shift  209
    nonempty_type_quals	shift  81

    '{' 	[reduce  75  (@9)]



state 126

    expr_no_commas  ->  ALIGNOF expr_no_commas .   (51)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  51  (expr_no_commas)



state 127

    expr_no_commas  ->  '*' expr_no_commas .   (45)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  45  (expr_no_commas)



state 128

    primary  ->  '(' error . ')'   (74)

    ')' 	shift  210



state 129

    primary  ->  '(' expr . ')'   (73)

    ')' 	shift  211



state 130

    primary  ->  '(' @9 . compstmt ')'   (76)

    '{' 	shift  212
    compstmt	shift  213



state 131

    expr_no_commas  ->  '(' typename . ')' expr_no_commas   (47)
    expr_no_commas  ->  '(' typename . ')' '{' initlist maybecomma '}'   (48)

    ')' 	shift  214



state 132

    expr_no_commas  ->  unop expr_no_commas .   (46)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  46  (expr_no_commas)



state 133

    typespec  ->  TYPEOF '(' expr ')' .   (112)

    $default	reduce  112  (typespec)



state 134

    nonnull_exprlist  ->  nonnull_exprlist ',' . expr_no_commas   (43)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  215
    primary	shift  76
    string	shift  77



state 135

    expr_no_commas  ->  expr_no_commas ASSIGN . expr_no_commas   (69)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  216
    primary	shift  76
    string	shift  77



state 136

    expr_no_commas  ->  expr_no_commas '=' . expr_no_commas   (68)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  217
    primary	shift  76
    string	shift  77



state 137

    expr_no_commas  ->  expr_no_commas '?' . xexpr ':' expr_no_commas   (67)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  218
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    xexpr	shift  219

    $default	reduce  249  (xexpr)



state 138

    expr_no_commas  ->  expr_no_commas OROR . expr_no_commas   (66)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  220
    primary	shift  76
    string	shift  77



state 139

    expr_no_commas  ->  expr_no_commas ANDAND . expr_no_commas   (65)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  221
    primary	shift  76
    string	shift  77



state 140

    expr_no_commas  ->  expr_no_commas '|' . expr_no_commas   (63)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  222
    primary	shift  76
    string	shift  77



state 141

    expr_no_commas  ->  expr_no_commas '^' . expr_no_commas   (64)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  223
    primary	shift  76
    string	shift  77



state 142

    expr_no_commas  ->  expr_no_commas '&' . expr_no_commas   (62)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  224
    primary	shift  76
    string	shift  77



state 143

    expr_no_commas  ->  expr_no_commas EQCOMPARE . expr_no_commas   (61)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  225
    primary	shift  76
    string	shift  77



state 144

    expr_no_commas  ->  expr_no_commas ARITHCOMPARE . expr_no_commas   (60)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  226
    primary	shift  76
    string	shift  77



state 145

    expr_no_commas  ->  expr_no_commas LSHIFT . expr_no_commas   (58)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  227
    primary	shift  76
    string	shift  77



state 146

    expr_no_commas  ->  expr_no_commas RSHIFT . expr_no_commas   (59)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  228
    primary	shift  76
    string	shift  77



state 147

    expr_no_commas  ->  expr_no_commas '+' . expr_no_commas   (53)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  229
    primary	shift  76
    string	shift  77



state 148

    expr_no_commas  ->  expr_no_commas '-' . expr_no_commas   (54)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  230
    primary	shift  76
    string	shift  77



state 149

    expr_no_commas  ->  expr_no_commas '*' . expr_no_commas   (55)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  231
    primary	shift  76
    string	shift  77



state 150

    expr_no_commas  ->  expr_no_commas '/' . expr_no_commas   (56)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  232
    primary	shift  76
    string	shift  77



state 151

    expr_no_commas  ->  expr_no_commas '%' . expr_no_commas   (57)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  233
    primary	shift  76
    string	shift  77



state 152

    primary  ->  primary PLUSPLUS .   (81)

    $default	reduce  81  (primary)



state 153

    primary  ->  primary MINUSMINUS .   (82)

    $default	reduce  82  (primary)



state 154

    primary  ->  primary POINTSAT . identifier   (80)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    identifier	shift  234



state 155

    primary  ->  primary '.' . identifier   (79)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    identifier	shift  235



state 156

    primary  ->  primary '(' . exprlist ')'   (77)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    exprlist	shift  236
    nonnull_exprlist	shift  237
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77

    $default	reduce  40  (exprlist)



state 157

    primary  ->  primary '[' . expr ']'   (78)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  238
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 158

    absdcl1  ->  '*' . type_quals absdcl1   (194)
    absdcl1  ->  '*' . type_quals   (195)

    type_quals	shift  239

    $default	reduce  191  (type_quals)



state 159

    absdcl1  ->  '(' . absdcl1 ')'   (193)
    absdcl1  ->  '(' . parmlist   (199)

    '*' 	shift  158
    '(' 	shift  159
    '[' 	shift  160
    absdcl1	shift  240
    parmlist	shift  241
    @29 	shift  242

    $default	reduce  255  (@29)



state 160

    absdcl1  ->  '[' . expr ']'   (200)
    absdcl1  ->  '[' . ']'   (201)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    ']' 	shift  243
    unop	shift  72
    expr	shift  244
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 161

    typename  ->  typed_typespecs absdcl .   (185)

    $default	reduce  185  (typename)



state 162

    absdcl  ->  absdcl1 .   (188)
    absdcl1  ->  absdcl1 . '(' parmlist   (196)
    absdcl1  ->  absdcl1 . '[' expr ']'   (197)
    absdcl1  ->  absdcl1 . '[' ']'   (198)

    '(' 	shift  245
    '[' 	shift  246

    $default	reduce  188  (absdcl)



state 163

    typed_typespecs  ->  typespec reserved_typespecquals .   (105)
    reserved_typespecquals  ->  reserved_typespecquals . typespecqual_reserved   (108)

    TYPESPEC	shift  104
    TYPE_QUAL	shift  105
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  247
    structsp	shift  107

    $default	reduce  105  (typed_typespecs)



state 164

    typespec  ->  TYPEOF '(' typename ')' .   (113)

    $default	reduce  113  (typespec)



state 165

    nonempty_type_quals  ->  nonempty_type_quals TYPE_QUAL .   (190)

    $default	reduce  190  (nonempty_type_quals)



state 166

    typed_typespecs  ->  nonempty_type_quals typespec . reserved_typespecquals   (106)

    reserved_typespecquals	shift  248

    $default	reduce  107  (reserved_typespecquals)



state 167

    typename  ->  nonempty_type_quals absdcl .   (186)

    $default	reduce  186  (typename)



state 168

    type_quals  ->  type_quals TYPE_QUAL .   (192)

    $default	reduce  192  (type_quals)



state 169

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  '*' type_quals notype_declarator .   (150)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)

    '(' 	shift  88
    '[' 	shift  89

    '(' 	[reduce  150  (notype_declarator)]
    '[' 	[reduce  150  (notype_declarator)]
    $default	reduce  150  (notype_declarator)



state 170

    notype_declarator  ->  '(' notype_declarator ')' .   (149)

    $default	reduce  149  (notype_declarator)



state 171

    notype_initdecls  ->  notype_initdecls ',' initdcl .   (120)

    $default	reduce  120  (notype_initdecls)



state 172

    initdcl  ->  declarator . maybeasm '=' @10 init   (124)
    initdcl  ->  declarator . maybeasm   (125)

    ASM 	shift  87
    maybeasm	shift  192

    $default	reduce  121  (maybeasm)



state 173

    maybeasm  ->  ASM '(' . string ')'   (122)

    STRING	shift  56
    string	shift  249



state 174

    notype_declarator  ->  notype_declarator '(' parmlist_or_identifiers .   (148)

    $default	reduce  148  (notype_declarator)



state 175

    parmlist_or_identifiers  ->  @30 . parmlist_or_identifiers_1   (258)

    error	shift  250
    IDENTIFIER	shift  251
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    typed_declspecs	shift  252
    declmods	shift  253
    typespec	shift  21
    structsp	shift  22
    parmlist_or_identifiers_1	shift  254
    parmlist_2	shift  255
    parms	shift  256
    parm	shift  257
    identifiers	shift  258

    ')' 	reduce  264  (parmlist_2)



state 176

    notype_declarator  ->  notype_declarator '[' ']' .   (152)

    $default	reduce  152  (notype_declarator)



state 177

    notype_declarator  ->  notype_declarator '[' expr . ']'   (151)

    ']' 	shift  259



state 178

    errstmt  ->  error . ';'   (207)

    ';' 	shift  260



state 179

    fndef  ->  setspecs notype_declarator @7 xdecls . @8 compstmt   (28)

    @8  	shift  261

    $default	reduce  27  (@8)



state 180

    xdecls  ->  decls .   (86)
    decls  ->  decls . decl   (89)

    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    decl	shift  262
    typed_declspecs	shift  182
    declmods	shift  183
    typespec	shift  21
    structsp	shift  22

    $default	reduce  86  (xdecls)



state 181

    decls  ->  decl .   (87)
    decls  ->  decl . errstmt   (90)

    error	shift  178
    errstmt	shift  263

    IDENTIFIER	reduce  87  (decls)
    TYPENAME	reduce  87  (decls)
    SCSPEC	reduce  87  (decls)
    TYPESPEC	reduce  87  (decls)
    TYPE_QUAL	reduce  87  (decls)
    CONSTANT	reduce  87  (decls)
    STRING	reduce  87  (decls)
    SIZEOF	reduce  87  (decls)
    ENUM	reduce  87  (decls)
    STRUCT	reduce  87  (decls)
    UNION	reduce  87  (decls)
    IF  	reduce  87  (decls)
    WHILE	reduce  87  (decls)
    DO  	reduce  87  (decls)
    FOR 	reduce  87  (decls)
    SWITCH	reduce  87  (decls)
    CASE	reduce  87  (decls)
    DEFAULT	reduce  87  (decls)
    BREAK	reduce  87  (decls)
    CONTINUE	reduce  87  (decls)
    RETURN	reduce  87  (decls)
    GOTO	reduce  87  (decls)
    ASM 	reduce  87  (decls)
    TYPEOF	reduce  87  (decls)
    ALIGNOF	reduce  87  (decls)
    '&' 	reduce  87  (decls)
    '+' 	reduce  87  (decls)
    '-' 	reduce  87  (decls)
    '*' 	reduce  87  (decls)
    PLUSPLUS	reduce  87  (decls)
    MINUSMINUS	reduce  87  (decls)
    '(' 	reduce  87  (decls)
    ';' 	reduce  87  (decls)
    '}' 	reduce  87  (decls)
    '~' 	reduce  87  (decls)
    '!' 	reduce  87  (decls)
    '{' 	reduce  87  (decls)



state 182

    decl  ->  typed_declspecs . setspecs initdecls ';'   (92)
    decl  ->  typed_declspecs . ';'   (94)

    ';' 	shift  264
    setspecs	shift  265

    $default	reduce  91  (setspecs)



state 183

    decl  ->  declmods . setspecs notype_initdecls ';'   (93)
    decl  ->  declmods . ';'   (95)
    typed_declspecs  ->  declmods . typespec reserved_declspecs   (97)
    declmods  ->  declmods . TYPE_QUAL   (103)
    declmods  ->  declmods . SCSPEC   (104)

    TYPENAME	shift  5
    SCSPEC	shift  44
    TYPESPEC	shift  7
    TYPE_QUAL	shift  45
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ';' 	shift  266
    setspecs	shift  267
    typespec	shift  48
    structsp	shift  22

    $default	reduce  91  (setspecs)



state 184

    decls  ->  errstmt .   (88)

    $default	reduce  88  (decls)



state 185

    notype_initdcl  ->  notype_declarator maybeasm '=' . @11 init   (127)

    @11 	shift  268

    $default	reduce  126  (@11)



state 186

    after_type_declarator  ->  '*' type_quals . after_type_declarator   (141)
    notype_declarator  ->  '*' type_quals . notype_declarator   (150)
    type_quals  ->  type_quals . TYPE_QUAL   (192)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    TYPE_QUAL	shift  168
    '*' 	shift  93
    '(' 	shift  94
    after_type_declarator	shift  269
    notype_declarator	shift  169



state 187

    after_type_declarator  ->  '(' after_type_declarator . ')'   (137)
    after_type_declarator  ->  after_type_declarator . '(' parmlist_or_identifiers   (138)
    after_type_declarator  ->  after_type_declarator . '[' expr ']'   (139)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (140)

    '(' 	shift  193
    ')' 	shift  270
    '[' 	shift  194



state 188

    datadef  ->  typed_declspecs setspecs initdecls ';' .   (12)

    $default	reduce  12  (datadef)



state 189

    initdecls  ->  initdecls ',' . initdcl   (118)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    '*' 	shift  93
    '(' 	shift  94
    initdcl	shift  271
    declarator	shift  172
    after_type_declarator	shift  98
    notype_declarator	shift  99



state 190

    fndef  ->  typed_declspecs setspecs declarator error .   (21)

    $default	reduce  21  (fndef)



state 191

    fndef  ->  typed_declspecs setspecs declarator @3 . xdecls @4 compstmt   (20)

    error	shift  178
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    xdecls	shift  272
    decls	shift  180
    decl	shift  181
    typed_declspecs	shift  182
    declmods	shift  183
    typespec	shift  21
    structsp	shift  22
    errstmt	shift  184

    '{' 	reduce  85  (xdecls)



state 192

    initdcl  ->  declarator maybeasm . '=' @10 init   (124)
    initdcl  ->  declarator maybeasm .   (125)

    '=' 	shift  273

    $default	reduce  125  (initdcl)



state 193

    after_type_declarator  ->  after_type_declarator '(' . parmlist_or_identifiers   (138)

    parmlist_or_identifiers	shift  274
    @30 	shift  175

    $default	reduce  257  (@30)



state 194

    after_type_declarator  ->  after_type_declarator '[' . expr ']'   (139)
    after_type_declarator  ->  after_type_declarator '[' . ']'   (140)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    ']' 	shift  275
    unop	shift  72
    expr	shift  276
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 195

    datadef  ->  declmods setspecs notype_initdecls ';' .   (11)

    $default	reduce  11  (datadef)



state 196

    fndef  ->  declmods setspecs notype_declarator error .   (25)

    $default	reduce  25  (fndef)



state 197

    fndef  ->  declmods setspecs notype_declarator @5 . xdecls @6 compstmt   (24)

    error	shift  178
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    xdecls	shift  277
    decls	shift  180
    decl	shift  181
    typed_declspecs	shift  182
    declmods	shift  183
    typespec	shift  21
    structsp	shift  22
    errstmt	shift  184

    '{' 	reduce  85  (xdecls)



state 198

    enumerator  ->  identifier '=' . expr_no_commas   (184)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  278
    primary	shift  76
    string	shift  77



state 199

    maybecomma  ->  ',' .   (168)
    enumlist  ->  enumlist ',' . enumerator   (182)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    identifier	shift  108
    enumerator	shift  279

    $default	reduce  168  (maybecomma)



state 200

    structsp  ->  ENUM '{' @15 enumlist maybecomma . '}'   (165)

    '}' 	shift  280



state 201

    structsp  ->  ENUM identifier '{' @14 enumlist . maybecomma '}'   (163)
    enumlist  ->  enumlist . ',' enumerator   (182)

    ',' 	shift  199
    maybecomma	shift  281

    $default	reduce  167  (maybecomma)



state 202

    component_decl  ->  typed_typespecs setspecs . components   (172)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    ':' 	shift  282
    '*' 	shift  93
    '(' 	shift  94
    declarator	shift  283
    after_type_declarator	shift  98
    notype_declarator	shift  99
    components	shift  284
    component_declarator	shift  285

    $default	reduce  175  (components)



state 203

    component_decl_list  ->  component_decl_list component_decl ';' .   (170)

    $default	reduce  170  (component_decl_list)



state 204

    component_decl  ->  nonempty_type_quals setspecs . components   (173)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    ':' 	shift  282
    '*' 	shift  93
    '(' 	shift  94
    declarator	shift  283
    after_type_declarator	shift  98
    notype_declarator	shift  99
    components	shift  286
    component_declarator	shift  285

    $default	reduce  175  (components)



state 205

    structsp  ->  STRUCT identifier '{' @12 component_decl_list . '}'   (155)
    component_decl_list  ->  component_decl_list . component_decl ';'   (170)
    component_decl_list  ->  component_decl_list . ';'   (171)

    error	shift  112
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ';' 	shift  113
    '}' 	shift  287
    typed_typespecs	shift  115
    typespec	shift  79
    structsp	shift  22
    component_decl	shift  116
    nonempty_type_quals	shift  117



state 206

    structsp  ->  UNION identifier '{' @13 component_decl_list . '}'   (159)
    component_decl_list  ->  component_decl_list . component_decl ';'   (170)
    component_decl_list  ->  component_decl_list . ';'   (171)

    error	shift  112
    TYPENAME	shift  5
    TYPESPEC	shift  7
    TYPE_QUAL	shift  59
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    ';' 	shift  113
    '}' 	shift  288
    typed_typespecs	shift  115
    typespec	shift  79
    structsp	shift  22
    component_decl	shift  116
    nonempty_type_quals	shift  117



state 207

    extdef  ->  ASM '(' string ')' ';' .   (9)

    $default	reduce  9  (extdef)



state 208

    expr_no_commas  ->  '(' typename . ')' expr_no_commas   (47)
    expr_no_commas  ->  '(' typename . ')' '{' initlist maybecomma '}'   (48)
    expr_no_commas  ->  SIZEOF '(' typename . ')'   (50)

    ')' 	shift  289



state 209

    expr_no_commas  ->  '(' typename . ')' expr_no_commas   (47)
    expr_no_commas  ->  '(' typename . ')' '{' initlist maybecomma '}'   (48)
    expr_no_commas  ->  ALIGNOF '(' typename . ')'   (52)

    ')' 	shift  290



state 210

    primary  ->  '(' error ')' .   (74)

    $default	reduce  74  (primary)



state 211

    primary  ->  '(' expr ')' .   (73)

    $default	reduce  73  (primary)



state 212

    compstmt  ->  '{' . '}'   (209)
    compstmt  ->  '{' . pushlevel decls xstmts '}'   (210)
    compstmt  ->  '{' . pushlevel error '}'   (211)
    compstmt  ->  '{' . pushlevel stmts '}'   (212)

    '}' 	shift  291
    pushlevel	shift  292

    $default	reduce  208  (pushlevel)



state 213

    primary  ->  '(' @9 compstmt . ')'   (76)

    ')' 	shift  293



state 214

    expr_no_commas  ->  '(' typename ')' . expr_no_commas   (47)
    expr_no_commas  ->  '(' typename ')' . '{' initlist maybecomma '}'   (48)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  294
    unop	shift  72
    expr_no_commas	shift  295
    primary	shift  76
    string	shift  77



state 215

    nonnull_exprlist  ->  nonnull_exprlist ',' expr_no_commas .   (43)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  43  (nonnull_exprlist)



state 216

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)
    expr_no_commas  ->  expr_no_commas ASSIGN expr_no_commas .   (69)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  69  (expr_no_commas)



state 217

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas '=' expr_no_commas .   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  68  (expr_no_commas)



state 218

    xexpr  ->  expr .   (250)

    $default	reduce  250  (xexpr)



state 219

    expr_no_commas  ->  expr_no_commas '?' xexpr . ':' expr_no_commas   (67)

    ':' 	shift  296



state 220

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas OROR expr_no_commas .   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  66  (expr_no_commas)



state 221

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas ANDAND expr_no_commas .   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  65  (expr_no_commas)



state 222

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas '|' expr_no_commas .   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  63  (expr_no_commas)



state 223

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas '^' expr_no_commas .   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  64  (expr_no_commas)



state 224

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas '&' expr_no_commas .   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  62  (expr_no_commas)



state 225

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas EQCOMPARE expr_no_commas .   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  61  (expr_no_commas)



state 226

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas ARITHCOMPARE expr_no_commas .   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  60  (expr_no_commas)



state 227

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas LSHIFT expr_no_commas .   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  58  (expr_no_commas)



state 228

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas RSHIFT expr_no_commas .   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  59  (expr_no_commas)



state 229

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas '+' expr_no_commas .   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  53  (expr_no_commas)



state 230

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas '-' expr_no_commas .   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  54  (expr_no_commas)



state 231

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas '*' expr_no_commas .   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  55  (expr_no_commas)



state 232

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas '/' expr_no_commas .   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  56  (expr_no_commas)



state 233

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas '%' expr_no_commas .   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  57  (expr_no_commas)



state 234

    primary  ->  primary POINTSAT identifier .   (80)

    $default	reduce  80  (primary)



state 235

    primary  ->  primary '.' identifier .   (79)

    $default	reduce  79  (primary)



state 236

    primary  ->  primary '(' exprlist . ')'   (77)

    ')' 	shift  297



state 237

    exprlist  ->  nonnull_exprlist .   (41)
    nonnull_exprlist  ->  nonnull_exprlist . ',' expr_no_commas   (43)

    ',' 	shift  134

    $default	reduce  41  (exprlist)



state 238

    primary  ->  primary '[' expr . ']'   (78)

    ']' 	shift  298



state 239

    type_quals  ->  type_quals . TYPE_QUAL   (192)
    absdcl1  ->  '*' type_quals . absdcl1   (194)
    absdcl1  ->  '*' type_quals .   (195)

    TYPE_QUAL	shift  168
    '*' 	shift  158
    '(' 	shift  159
    '[' 	shift  160
    absdcl1	shift  299

    '(' 	[reduce  195  (absdcl1)]
    '[' 	[reduce  195  (absdcl1)]
    $default	reduce  195  (absdcl1)



state 240

    absdcl1  ->  '(' absdcl1 . ')'   (193)
    absdcl1  ->  absdcl1 . '(' parmlist   (196)
    absdcl1  ->  absdcl1 . '[' expr ']'   (197)
    absdcl1  ->  absdcl1 . '[' ']'   (198)

    '(' 	shift  245
    ')' 	shift  300
    '[' 	shift  246



state 241

    absdcl1  ->  '(' parmlist .   (199)

    $default	reduce  199  (absdcl1)



state 242

    parmlist  ->  @29 . parmlist_1   (256)

    error	shift  301
    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    typed_declspecs	shift  252
    declmods	shift  253
    typespec	shift  21
    structsp	shift  22
    parmlist_1	shift  302
    parmlist_2	shift  303
    parms	shift  256
    parm	shift  257

    ')' 	reduce  264  (parmlist_2)



state 243

    absdcl1  ->  '[' ']' .   (201)

    $default	reduce  201  (absdcl1)



state 244

    absdcl1  ->  '[' expr . ']'   (200)

    ']' 	shift  304



state 245

    absdcl1  ->  absdcl1 '(' . parmlist   (196)

    parmlist	shift  305
    @29 	shift  242

    $default	reduce  255  (@29)



state 246

    absdcl1  ->  absdcl1 '[' . expr ']'   (197)
    absdcl1  ->  absdcl1 '[' . ']'   (198)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    ']' 	shift  306
    unop	shift  72
    expr	shift  307
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 247

    reserved_typespecquals  ->  reserved_typespecquals typespecqual_reserved .   (108)

    $default	reduce  108  (reserved_typespecquals)



state 248

    typed_typespecs  ->  nonempty_type_quals typespec reserved_typespecquals .   (106)
    reserved_typespecquals  ->  reserved_typespecquals . typespecqual_reserved   (108)

    TYPESPEC	shift  104
    TYPE_QUAL	shift  105
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    typespecqual_reserved	shift  247
    structsp	shift  107

    $default	reduce  106  (typed_typespecs)



state 249

    string  ->  string . STRING   (84)
    maybeasm  ->  ASM '(' string . ')'   (122)

    STRING	shift  121
    ')' 	shift  308



state 250

    parmlist_or_identifiers_1  ->  error . ')'   (261)

    ')' 	shift  309



state 251

    identifiers  ->  IDENTIFIER .   (274)

    $default	reduce  274  (identifiers)



state 252

    parm  ->  typed_declspecs . parm_declarator   (269)
    parm  ->  typed_declspecs . notype_declarator   (270)
    parm  ->  typed_declspecs . absdcl   (271)

    IDENTIFIER	shift  36
    TYPENAME	shift  310
    '*' 	shift  311
    '(' 	shift  312
    '[' 	shift  160
    parm_declarator	shift  313
    notype_declarator	shift  314
    absdcl	shift  315
    absdcl1	shift  162

    $default	reduce  187  (absdcl)



state 253

    typed_declspecs  ->  declmods . typespec reserved_declspecs   (97)
    declmods  ->  declmods . TYPE_QUAL   (103)
    declmods  ->  declmods . SCSPEC   (104)
    parm  ->  declmods . notype_declarator   (272)
    parm  ->  declmods . absdcl   (273)

    IDENTIFIER	shift  36
    TYPENAME	shift  5
    SCSPEC	shift  44
    TYPESPEC	shift  7
    TYPE_QUAL	shift  45
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    '*' 	shift  316
    '(' 	shift  312
    '[' 	shift  160
    typespec	shift  48
    notype_declarator	shift  317
    structsp	shift  22
    absdcl	shift  318
    absdcl1	shift  162

    $default	reduce  187  (absdcl)



state 254

    parmlist_or_identifiers  ->  @30 parmlist_or_identifiers_1 .   (258)

    $default	reduce  258  (parmlist_or_identifiers)



state 255

    parmlist_or_identifiers_1  ->  parmlist_2 . ')'   (259)

    ')' 	shift  319



state 256

    parmlist_2  ->  parms .   (265)
    parmlist_2  ->  parms . ',' ELLIPSIS   (266)
    parms  ->  parms . ',' parm   (268)

    ',' 	shift  320

    $default	reduce  265  (parmlist_2)



state 257

    parms  ->  parm .   (267)

    $default	reduce  267  (parms)



state 258

    parmlist_or_identifiers_1  ->  identifiers . ')'   (260)
    identifiers  ->  identifiers . ',' IDENTIFIER   (275)

    ')' 	shift  321
    ',' 	shift  322



state 259

    notype_declarator  ->  notype_declarator '[' expr ']' .   (151)

    $default	reduce  151  (notype_declarator)



state 260

    errstmt  ->  error ';' .   (207)

    $default	reduce  207  (errstmt)



state 261

    fndef  ->  setspecs notype_declarator @7 xdecls @8 . compstmt   (28)

    '{' 	shift  212
    compstmt	shift  323



state 262

    decls  ->  decls decl .   (89)

    $default	reduce  89  (decls)



state 263

    decls  ->  decl errstmt .   (90)

    $default	reduce  90  (decls)



state 264

    decl  ->  typed_declspecs ';' .   (94)

    $default	reduce  94  (decl)



state 265

    decl  ->  typed_declspecs setspecs . initdecls ';'   (92)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    '*' 	shift  93
    '(' 	shift  94
    initdecls	shift  324
    initdcl	shift  96
    declarator	shift  172
    after_type_declarator	shift  98
    notype_declarator	shift  99



state 266

    decl  ->  declmods ';' .   (95)

    $default	reduce  95  (decl)



state 267

    decl  ->  declmods setspecs . notype_initdecls ';'   (93)

    IDENTIFIER	shift  36
    '*' 	shift  37
    '(' 	shift  38
    notype_initdecls	shift  325
    notype_initdcl	shift  40
    notype_declarator	shift  326



state 268

    notype_initdcl  ->  notype_declarator maybeasm '=' @11 . init   (127)

    error	shift  327
    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  328
    unop	shift  72
    expr_no_commas	shift  329
    primary	shift  76
    string	shift  77
    init	shift  330



state 269

    after_type_declarator  ->  after_type_declarator . '(' parmlist_or_identifiers   (138)
    after_type_declarator  ->  after_type_declarator . '[' expr ']'   (139)
    after_type_declarator  ->  after_type_declarator . '[' ']'   (140)
    after_type_declarator  ->  '*' type_quals after_type_declarator .   (141)

    '(' 	shift  193
    '[' 	shift  194

    '(' 	[reduce  141  (after_type_declarator)]
    '[' 	[reduce  141  (after_type_declarator)]
    $default	reduce  141  (after_type_declarator)



state 270

    after_type_declarator  ->  '(' after_type_declarator ')' .   (137)

    $default	reduce  137  (after_type_declarator)



state 271

    initdecls  ->  initdecls ',' initdcl .   (118)

    $default	reduce  118  (initdecls)



state 272

    fndef  ->  typed_declspecs setspecs declarator @3 xdecls . @4 compstmt   (20)

    @4  	shift  331

    $default	reduce  19  (@4)



state 273

    initdcl  ->  declarator maybeasm '=' . @10 init   (124)

    @10 	shift  332

    $default	reduce  123  (@10)



state 274

    after_type_declarator  ->  after_type_declarator '(' parmlist_or_identifiers .   (138)

    $default	reduce  138  (after_type_declarator)



state 275

    after_type_declarator  ->  after_type_declarator '[' ']' .   (140)

    $default	reduce  140  (after_type_declarator)



state 276

    after_type_declarator  ->  after_type_declarator '[' expr . ']'   (139)

    ']' 	shift  333



state 277

    fndef  ->  declmods setspecs notype_declarator @5 xdecls . @6 compstmt   (24)

    @6  	shift  334

    $default	reduce  23  (@6)



state 278

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)
    enumerator  ->  identifier '=' expr_no_commas .   (184)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  184  (enumerator)



state 279

    enumlist  ->  enumlist ',' enumerator .   (182)

    $default	reduce  182  (enumlist)



state 280

    structsp  ->  ENUM '{' @15 enumlist maybecomma '}' .   (165)

    $default	reduce  165  (structsp)



state 281

    structsp  ->  ENUM identifier '{' @14 enumlist maybecomma . '}'   (163)

    '}' 	shift  335



state 282

    component_declarator  ->  ':' . expr_no_commas   (180)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  336
    primary	shift  76
    string	shift  77



state 283

    component_declarator  ->  declarator .   (178)
    component_declarator  ->  declarator . ':' expr_no_commas   (179)

    ':' 	shift  337

    $default	reduce  178  (component_declarator)



state 284

    component_decl  ->  typed_typespecs setspecs components .   (172)
    components  ->  components . ',' component_declarator   (177)

    ',' 	shift  338

    $default	reduce  172  (component_decl)



state 285

    components  ->  component_declarator .   (176)

    $default	reduce  176  (components)



state 286

    component_decl  ->  nonempty_type_quals setspecs components .   (173)
    components  ->  components . ',' component_declarator   (177)

    ',' 	shift  338

    $default	reduce  173  (component_decl)



state 287

    structsp  ->  STRUCT identifier '{' @12 component_decl_list '}' .   (155)

    $default	reduce  155  (structsp)



state 288

    structsp  ->  UNION identifier '{' @13 component_decl_list '}' .   (159)

    $default	reduce  159  (structsp)



state 289

    expr_no_commas  ->  '(' typename ')' . expr_no_commas   (47)
    expr_no_commas  ->  '(' typename ')' . '{' initlist maybecomma '}'   (48)
    expr_no_commas  ->  SIZEOF '(' typename ')' .   (50)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  294
    unop	shift  72
    expr_no_commas	shift  295
    primary	shift  76
    string	shift  77

    $default	reduce  50  (expr_no_commas)



state 290

    expr_no_commas  ->  '(' typename ')' . expr_no_commas   (47)
    expr_no_commas  ->  '(' typename ')' . '{' initlist maybecomma '}'   (48)
    expr_no_commas  ->  ALIGNOF '(' typename ')' .   (52)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  294
    unop	shift  72
    expr_no_commas	shift  295
    primary	shift  76
    string	shift  77

    $default	reduce  52  (expr_no_commas)



state 291

    compstmt  ->  '{' '}' .   (209)

    $default	reduce  209  (compstmt)



state 292

    compstmt  ->  '{' pushlevel . decls xstmts '}'   (210)
    compstmt  ->  '{' pushlevel . error '}'   (211)
    compstmt  ->  '{' pushlevel . stmts '}'   (212)

    error	shift  339
    IDENTIFIER	shift  340
    TYPENAME	shift  341
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    TYPEOF	shift  13
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    decls	shift  357
    decl	shift  181
    typed_declspecs	shift  182
    declmods	shift  183
    typespec	shift  21
    structsp	shift  22
    stmts	shift  358
    errstmt	shift  184
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  361



state 293

    primary  ->  '(' @9 compstmt ')' .   (76)

    $default	reduce  76  (primary)



state 294

    expr_no_commas  ->  '(' typename ')' '{' . initlist maybecomma '}'   (48)

    error	shift  327
    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  328
    unop	shift  72
    expr_no_commas	shift  329
    primary	shift  76
    string	shift  77
    init	shift  362
    initlist	shift  363



state 295

    expr_no_commas  ->  '(' typename ')' expr_no_commas .   (47)
    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)


    $default	reduce  47  (expr_no_commas)



state 296

    expr_no_commas  ->  expr_no_commas '?' xexpr ':' . expr_no_commas   (67)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  364
    primary	shift  76
    string	shift  77



state 297

    primary  ->  primary '(' exprlist ')' .   (77)

    $default	reduce  77  (primary)



state 298

    primary  ->  primary '[' expr ']' .   (78)

    $default	reduce  78  (primary)



state 299

    absdcl1  ->  '*' type_quals absdcl1 .   (194)
    absdcl1  ->  absdcl1 . '(' parmlist   (196)
    absdcl1  ->  absdcl1 . '[' expr ']'   (197)
    absdcl1  ->  absdcl1 . '[' ']'   (198)

    '(' 	shift  245
    '[' 	shift  246

    '(' 	[reduce  194  (absdcl1)]
    '[' 	[reduce  194  (absdcl1)]
    $default	reduce  194  (absdcl1)



state 300

    absdcl1  ->  '(' absdcl1 ')' .   (193)

    $default	reduce  193  (absdcl1)



state 301

    parmlist_1  ->  error . ')'   (263)

    ')' 	shift  365



state 302

    parmlist  ->  @29 parmlist_1 .   (256)

    $default	reduce  256  (parmlist)



state 303

    parmlist_1  ->  parmlist_2 . ')'   (262)

    ')' 	shift  366



state 304

    absdcl1  ->  '[' expr ']' .   (200)

    $default	reduce  200  (absdcl1)



state 305

    absdcl1  ->  absdcl1 '(' parmlist .   (196)

    $default	reduce  196  (absdcl1)



state 306

    absdcl1  ->  absdcl1 '[' ']' .   (198)

    $default	reduce  198  (absdcl1)



state 307

    absdcl1  ->  absdcl1 '[' expr . ']'   (197)

    ']' 	shift  367



state 308

    maybeasm  ->  ASM '(' string ')' .   (122)

    $default	reduce  122  (maybeasm)



state 309

    parmlist_or_identifiers_1  ->  error ')' .   (261)

    $default	reduce  261  (parmlist_or_identifiers_1)



state 310

    parm_declarator  ->  TYPENAME .   (147)

    $default	reduce  147  (parm_declarator)



state 311

    parm_declarator  ->  '*' . type_quals parm_declarator   (146)
    notype_declarator  ->  '*' . type_quals notype_declarator   (150)
    absdcl1  ->  '*' . type_quals absdcl1   (194)
    absdcl1  ->  '*' . type_quals   (195)

    type_quals	shift  368

    $default	reduce  191  (type_quals)



state 312

    notype_declarator  ->  '(' . notype_declarator ')'   (149)
    absdcl1  ->  '(' . absdcl1 ')'   (193)
    absdcl1  ->  '(' . parmlist   (199)

    IDENTIFIER	shift  36
    '*' 	shift  316
    '(' 	shift  312
    '[' 	shift  160
    notype_declarator	shift  83
    absdcl1	shift  240
    parmlist	shift  241
    @29 	shift  242

    $default	reduce  255  (@29)



state 313

    parm_declarator  ->  parm_declarator . '(' parmlist_or_identifiers   (143)
    parm_declarator  ->  parm_declarator . '[' expr ']'   (144)
    parm_declarator  ->  parm_declarator . '[' ']'   (145)
    parm  ->  typed_declspecs parm_declarator .   (269)

    '(' 	shift  369
    '[' 	shift  370

    $default	reduce  269  (parm)



state 314

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)
    parm  ->  typed_declspecs notype_declarator .   (270)

    '(' 	shift  88
    '[' 	shift  89

    $default	reduce  270  (parm)



state 315

    parm  ->  typed_declspecs absdcl .   (271)

    $default	reduce  271  (parm)



state 316

    notype_declarator  ->  '*' . type_quals notype_declarator   (150)
    absdcl1  ->  '*' . type_quals absdcl1   (194)
    absdcl1  ->  '*' . type_quals   (195)

    type_quals	shift  371

    $default	reduce  191  (type_quals)



state 317

    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)
    parm  ->  declmods notype_declarator .   (272)

    '(' 	shift  88
    '[' 	shift  89

    $default	reduce  272  (parm)



state 318

    parm  ->  declmods absdcl .   (273)

    $default	reduce  273  (parm)



state 319

    parmlist_or_identifiers_1  ->  parmlist_2 ')' .   (259)

    $default	reduce  259  (parmlist_or_identifiers_1)



state 320

    parmlist_2  ->  parms ',' . ELLIPSIS   (266)
    parms  ->  parms ',' . parm   (268)

    TYPENAME	shift  5
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    ELLIPSIS	shift  372
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    TYPEOF	shift  13
    typed_declspecs	shift  252
    declmods	shift  253
    typespec	shift  21
    structsp	shift  22
    parm	shift  373



state 321

    parmlist_or_identifiers_1  ->  identifiers ')' .   (260)

    $default	reduce  260  (parmlist_or_identifiers_1)



state 322

    identifiers  ->  identifiers ',' . IDENTIFIER   (275)

    IDENTIFIER	shift  374



state 323

    fndef  ->  setspecs notype_declarator @7 xdecls @8 compstmt .   (28)

    $default	reduce  28  (fndef)



state 324

    decl  ->  typed_declspecs setspecs initdecls . ';'   (92)
    initdecls  ->  initdecls . ',' initdcl   (118)

    ';' 	shift  375
    ',' 	shift  189



state 325

    decl  ->  declmods setspecs notype_initdecls . ';'   (93)
    notype_initdecls  ->  notype_initdecls . ',' initdcl   (120)

    ';' 	shift  376
    ',' 	shift  85



state 326

    notype_initdcl  ->  notype_declarator . maybeasm '=' @11 init   (127)
    notype_initdcl  ->  notype_declarator . maybeasm   (128)
    notype_declarator  ->  notype_declarator . '(' parmlist_or_identifiers   (148)
    notype_declarator  ->  notype_declarator . '[' expr ']'   (151)
    notype_declarator  ->  notype_declarator . '[' ']'   (152)

    ASM 	shift  87
    '(' 	shift  88
    '[' 	shift  89
    maybeasm	shift  91

    $default	reduce  121  (maybeasm)



state 327

    init  ->  error .   (132)

    $default	reduce  132  (init)



state 328

    init  ->  '{' . initlist '}'   (130)
    init  ->  '{' . initlist ',' '}'   (131)

    error	shift  327
    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  328
    unop	shift  72
    expr_no_commas	shift  329
    primary	shift  76
    string	shift  77
    init	shift  362
    initlist	shift  377



state 329

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)
    init  ->  expr_no_commas .   (129)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  129  (init)



state 330

    notype_initdcl  ->  notype_declarator maybeasm '=' @11 init .   (127)

    $default	reduce  127  (notype_initdcl)



state 331

    fndef  ->  typed_declspecs setspecs declarator @3 xdecls @4 . compstmt   (20)

    '{' 	shift  212
    compstmt	shift  378



state 332

    initdcl  ->  declarator maybeasm '=' @10 . init   (124)

    error	shift  327
    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  328
    unop	shift  72
    expr_no_commas	shift  329
    primary	shift  76
    string	shift  77
    init	shift  379



state 333

    after_type_declarator  ->  after_type_declarator '[' expr ']' .   (139)

    $default	reduce  139  (after_type_declarator)



state 334

    fndef  ->  declmods setspecs notype_declarator @5 xdecls @6 . compstmt   (24)

    '{' 	shift  212
    compstmt	shift  380



state 335

    structsp  ->  ENUM identifier '{' @14 enumlist maybecomma '}' .   (163)

    $default	reduce  163  (structsp)



state 336

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)
    component_declarator  ->  ':' expr_no_commas .   (180)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  180  (component_declarator)



state 337

    component_declarator  ->  declarator ':' . expr_no_commas   (179)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr_no_commas	shift  381
    primary	shift  76
    string	shift  77



state 338

    components  ->  components ',' . component_declarator   (177)

    IDENTIFIER	shift  36
    TYPENAME	shift  92
    ':' 	shift  282
    '*' 	shift  93
    '(' 	shift  94
    declarator	shift  283
    after_type_declarator	shift  98
    notype_declarator	shift  99
    component_declarator	shift  382



state 339

    errstmt  ->  error . ';'   (207)
    compstmt  ->  '{' pushlevel error . '}'   (211)

    ';' 	shift  260
    '}' 	shift  383



state 340

    identifier  ->  IDENTIFIER .   (30)
    primary  ->  IDENTIFIER .   (70)

    ':' 	reduce  30  (identifier)
    $default	reduce  70  (primary)



state 341

    identifier  ->  TYPENAME .   (31)
    typespec  ->  TYPENAME .   (111)

    ':' 	reduce  31  (identifier)
    $default	reduce  111  (typespec)



state 342

    simple_if  ->  IF . '(' expr ')' @16 stmt   (214)

    '(' 	shift  384



state 343

    stmt  ->  WHILE . @18 '(' expr ')' @19 stmt   (222)

    @18 	shift  385

    $default	reduce  220  (@18)



state 344

    stmt  ->  DO . @20 stmt WHILE @21 '(' expr ')' ';'   (225)

    @20 	shift  386

    $default	reduce  223  (@20)



state 345

    stmt  ->  FOR . '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 stmt   (229)

    '(' 	shift  387



state 346

    stmt  ->  SWITCH . '(' expr ')' @25 stmt   (231)

    '(' 	shift  388



state 347

    stmt  ->  CASE . expr ':' @26 stmt   (233)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  389
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 348

    stmt  ->  DEFAULT . ':' @27 stmt   (235)

    ':' 	shift  390



state 349

    stmt  ->  BREAK . ';'   (236)

    ';' 	shift  391



state 350

    stmt  ->  CONTINUE . ';'   (237)

    ';' 	shift  392



state 351

    stmt  ->  RETURN . ';'   (238)
    stmt  ->  RETURN . expr ';'   (239)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  393
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  394
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 352

    stmt  ->  GOTO . identifier ';'   (243)

    IDENTIFIER	shift  26
    TYPENAME	shift  27
    identifier	shift  395



state 353

    stmt  ->  ASM . maybe_type_qual '(' string ')' ';'   (240)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ')' ';'   (241)
    stmt  ->  ASM . maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' ';'   (242)

    TYPE_QUAL	shift  396
    maybe_type_qual	shift  397

    $default	reduce  247  (maybe_type_qual)



state 354

    stmt  ->  ';' .   (246)

    $default	reduce  246  (stmt)



state 355

    stmt  ->  identifier . ':' @28 stmt   (245)

    ':' 	shift  398



state 356

    stmt  ->  expr . ';'   (216)

    ';' 	shift  399



state 357

    decls  ->  decls . decl   (89)
    compstmt  ->  '{' pushlevel decls . xstmts '}'   (210)

    IDENTIFIER	shift  340
    TYPENAME	shift  341
    SCSPEC	shift  6
    TYPESPEC	shift  7
    TYPE_QUAL	shift  8
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ENUM	shift  9
    STRUCT	shift  10
    UNION	shift  11
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    TYPEOF	shift  13
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    decl	shift  262
    typed_declspecs	shift  182
    declmods	shift  183
    typespec	shift  21
    structsp	shift  22
    stmts	shift  400
    xstmts	shift  401
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  361

    $default	reduce  205  (xstmts)



state 358

    stmts  ->  stmts . stmt   (203)
    stmts  ->  stmts . errstmt   (204)
    compstmt  ->  '{' pushlevel stmts . '}'   (212)

    error	shift  178
    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '}' 	shift  402
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    errstmt	shift  403
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  404



state 359

    stmt  ->  compstmt .   (215)

    $default	reduce  215  (stmt)



state 360

    stmt  ->  simple_if . ELSE @17 stmt   (218)
    stmt  ->  simple_if .   (219)

    ELSE	shift  405

    ELSE	[reduce  219  (stmt)]
    $default	reduce  219  (stmt)



state 361

    stmts  ->  stmt .   (202)

    $default	reduce  202  (stmts)



state 362

    initlist  ->  init .   (133)

    $default	reduce  133  (initlist)



state 363

    expr_no_commas  ->  '(' typename ')' '{' initlist . maybecomma '}'   (48)
    initlist  ->  initlist . ',' init   (134)

    ',' 	shift  406
    maybecomma	shift  407

    $default	reduce  167  (maybecomma)



state 364

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas '?' xexpr ':' expr_no_commas .   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)

    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  67  (expr_no_commas)



state 365

    parmlist_1  ->  error ')' .   (263)

    $default	reduce  263  (parmlist_1)



state 366

    parmlist_1  ->  parmlist_2 ')' .   (262)

    $default	reduce  262  (parmlist_1)



state 367

    absdcl1  ->  absdcl1 '[' expr ']' .   (197)

    $default	reduce  197  (absdcl1)



state 368

    parm_declarator  ->  '*' type_quals . parm_declarator   (146)
    notype_declarator  ->  '*' type_quals . notype_declarator   (150)
    type_quals  ->  type_quals . TYPE_QUAL   (192)
    absdcl1  ->  '*' type_quals . absdcl1   (194)
    absdcl1  ->  '*' type_quals .   (195)

    IDENTIFIER	shift  36
    TYPENAME	shift  310
    TYPE_QUAL	shift  168
    '*' 	shift  311
    '(' 	shift  312
    '[' 	shift  160
    parm_declarator	shift  408
    notype_declarator	shift  169
    absdcl1	shift  299

    '(' 	[reduce  195  (absdcl1)]
    '[' 	[reduce  195  (absdcl1)]
    $default	reduce  195  (absdcl1)



state 369

    parm_declarator  ->  parm_declarator '(' . parmlist_or_identifiers   (143)

    parmlist_or_identifiers	shift  409
    @30 	shift  175

    $default	reduce  257  (@30)



state 370

    parm_declarator  ->  parm_declarator '[' . expr ']'   (144)
    parm_declarator  ->  parm_declarator '[' . ']'   (145)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    ']' 	shift  410
    unop	shift  72
    expr	shift  411
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 371

    notype_declarator  ->  '*' type_quals . notype_declarator   (150)
    type_quals  ->  type_quals . TYPE_QUAL   (192)
    absdcl1  ->  '*' type_quals . absdcl1   (194)
    absdcl1  ->  '*' type_quals .   (195)

    IDENTIFIER	shift  36
    TYPE_QUAL	shift  168
    '*' 	shift  316
    '(' 	shift  312
    '[' 	shift  160
    notype_declarator	shift  169
    absdcl1	shift  299

    '(' 	[reduce  195  (absdcl1)]
    '[' 	[reduce  195  (absdcl1)]
    $default	reduce  195  (absdcl1)



state 372

    parmlist_2  ->  parms ',' ELLIPSIS .   (266)

    $default	reduce  266  (parmlist_2)



state 373

    parms  ->  parms ',' parm .   (268)

    $default	reduce  268  (parms)



state 374

    identifiers  ->  identifiers ',' IDENTIFIER .   (275)

    $default	reduce  275  (identifiers)



state 375

    decl  ->  typed_declspecs setspecs initdecls ';' .   (92)

    $default	reduce  92  (decl)



state 376

    decl  ->  declmods setspecs notype_initdecls ';' .   (93)

    $default	reduce  93  (decl)



state 377

    init  ->  '{' initlist . '}'   (130)
    init  ->  '{' initlist . ',' '}'   (131)
    initlist  ->  initlist . ',' init   (134)

    '}' 	shift  412
    ',' 	shift  413



state 378

    fndef  ->  typed_declspecs setspecs declarator @3 xdecls @4 compstmt .   (20)

    $default	reduce  20  (fndef)



state 379

    initdcl  ->  declarator maybeasm '=' @10 init .   (124)

    $default	reduce  124  (initdcl)



state 380

    fndef  ->  declmods setspecs notype_declarator @5 xdecls @6 compstmt .   (24)

    $default	reduce  24  (fndef)



state 381

    expr_no_commas  ->  expr_no_commas . '+' expr_no_commas   (53)
    expr_no_commas  ->  expr_no_commas . '-' expr_no_commas   (54)
    expr_no_commas  ->  expr_no_commas . '*' expr_no_commas   (55)
    expr_no_commas  ->  expr_no_commas . '/' expr_no_commas   (56)
    expr_no_commas  ->  expr_no_commas . '%' expr_no_commas   (57)
    expr_no_commas  ->  expr_no_commas . LSHIFT expr_no_commas   (58)
    expr_no_commas  ->  expr_no_commas . RSHIFT expr_no_commas   (59)
    expr_no_commas  ->  expr_no_commas . ARITHCOMPARE expr_no_commas   (60)
    expr_no_commas  ->  expr_no_commas . EQCOMPARE expr_no_commas   (61)
    expr_no_commas  ->  expr_no_commas . '&' expr_no_commas   (62)
    expr_no_commas  ->  expr_no_commas . '|' expr_no_commas   (63)
    expr_no_commas  ->  expr_no_commas . '^' expr_no_commas   (64)
    expr_no_commas  ->  expr_no_commas . ANDAND expr_no_commas   (65)
    expr_no_commas  ->  expr_no_commas . OROR expr_no_commas   (66)
    expr_no_commas  ->  expr_no_commas . '?' xexpr ':' expr_no_commas   (67)
    expr_no_commas  ->  expr_no_commas . '=' expr_no_commas   (68)
    expr_no_commas  ->  expr_no_commas . ASSIGN expr_no_commas   (69)
    component_declarator  ->  declarator ':' expr_no_commas .   (179)

    ASSIGN	shift  135
    '=' 	shift  136
    '?' 	shift  137
    OROR	shift  138
    ANDAND	shift  139
    '|' 	shift  140
    '^' 	shift  141
    '&' 	shift  142
    EQCOMPARE	shift  143
    ARITHCOMPARE	shift  144
    LSHIFT	shift  145
    RSHIFT	shift  146
    '+' 	shift  147
    '-' 	shift  148
    '*' 	shift  149
    '/' 	shift  150
    '%' 	shift  151

    $default	reduce  179  (component_declarator)



state 382

    components  ->  components ',' component_declarator .   (177)

    $default	reduce  177  (components)



state 383

    compstmt  ->  '{' pushlevel error '}' .   (211)

    $default	reduce  211  (compstmt)



state 384

    simple_if  ->  IF '(' . expr ')' @16 stmt   (214)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  414
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 385

    stmt  ->  WHILE @18 . '(' expr ')' @19 stmt   (222)

    '(' 	shift  415



state 386

    stmt  ->  DO @20 . stmt WHILE @21 '(' expr ')' ';'   (225)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  416



state 387

    stmt  ->  FOR '(' . xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 stmt   (229)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  218
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    xexpr	shift  417

    $default	reduce  249  (xexpr)



state 388

    stmt  ->  SWITCH '(' . expr ')' @25 stmt   (231)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  418
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 389

    stmt  ->  CASE expr . ':' @26 stmt   (233)

    ':' 	shift  419



state 390

    stmt  ->  DEFAULT ':' . @27 stmt   (235)

    @27 	shift  420

    $default	reduce  234  (@27)



state 391

    stmt  ->  BREAK ';' .   (236)

    $default	reduce  236  (stmt)



state 392

    stmt  ->  CONTINUE ';' .   (237)

    $default	reduce  237  (stmt)



state 393

    stmt  ->  RETURN ';' .   (238)

    $default	reduce  238  (stmt)



state 394

    stmt  ->  RETURN expr . ';'   (239)

    ';' 	shift  421



state 395

    stmt  ->  GOTO identifier . ';'   (243)

    ';' 	shift  422



state 396

    maybe_type_qual  ->  TYPE_QUAL .   (248)

    $default	reduce  248  (maybe_type_qual)



state 397

    stmt  ->  ASM maybe_type_qual . '(' string ')' ';'   (240)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ')' ';'   (241)
    stmt  ->  ASM maybe_type_qual . '(' string ':' asm_operands ':' asm_operands ')' ';'   (242)

    '(' 	shift  423



state 398

    stmt  ->  identifier ':' . @28 stmt   (245)

    @28 	shift  424

    $default	reduce  244  (@28)



state 399

    stmt  ->  expr ';' .   (216)

    $default	reduce  216  (stmt)



state 400

    stmts  ->  stmts . stmt   (203)
    stmts  ->  stmts . errstmt   (204)
    xstmts  ->  stmts .   (206)

    error	shift  178
    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    errstmt	shift  403
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  404

    '}' 	[reduce  206  (xstmts)]



state 401

    compstmt  ->  '{' pushlevel decls xstmts . '}'   (210)

    '}' 	shift  425



state 402

    compstmt  ->  '{' pushlevel stmts '}' .   (212)

    $default	reduce  212  (compstmt)



state 403

    stmts  ->  stmts errstmt .   (204)

    $default	reduce  204  (stmts)



state 404

    stmts  ->  stmts stmt .   (203)

    $default	reduce  203  (stmts)



state 405

    stmt  ->  simple_if ELSE . @17 stmt   (218)

    @17 	shift  426

    $default	reduce  217  (@17)



state 406

    initlist  ->  initlist ',' . init   (134)
    maybecomma  ->  ',' .   (168)

    error	shift  327
    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  328
    unop	shift  72
    expr_no_commas	shift  329
    primary	shift  76
    string	shift  77
    init	shift  427

    '}' 	reduce  168  (maybecomma)



state 407

    expr_no_commas  ->  '(' typename ')' '{' initlist maybecomma . '}'   (48)

    '}' 	shift  428



state 408

    parm_declarator  ->  parm_declarator . '(' parmlist_or_identifiers   (143)
    parm_declarator  ->  parm_declarator . '[' expr ']'   (144)
    parm_declarator  ->  parm_declarator . '[' ']'   (145)
    parm_declarator  ->  '*' type_quals parm_declarator .   (146)

    '(' 	shift  369
    '[' 	shift  370

    '(' 	[reduce  146  (parm_declarator)]
    '[' 	[reduce  146  (parm_declarator)]
    $default	reduce  146  (parm_declarator)



state 409

    parm_declarator  ->  parm_declarator '(' parmlist_or_identifiers .   (143)

    $default	reduce  143  (parm_declarator)



state 410

    parm_declarator  ->  parm_declarator '[' ']' .   (145)

    $default	reduce  145  (parm_declarator)



state 411

    parm_declarator  ->  parm_declarator '[' expr . ']'   (144)

    ']' 	shift  429



state 412

    init  ->  '{' initlist '}' .   (130)

    $default	reduce  130  (init)



state 413

    init  ->  '{' initlist ',' . '}'   (131)
    initlist  ->  initlist ',' . init   (134)

    error	shift  327
    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '}' 	shift  430
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  328
    unop	shift  72
    expr_no_commas	shift  329
    primary	shift  76
    string	shift  77
    init	shift  427



state 414

    simple_if  ->  IF '(' expr . ')' @16 stmt   (214)

    ')' 	shift  431



state 415

    stmt  ->  WHILE @18 '(' . expr ')' @19 stmt   (222)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  432
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 416

    stmt  ->  DO @20 stmt . WHILE @21 '(' expr ')' ';'   (225)

    WHILE	shift  433



state 417

    stmt  ->  FOR '(' xexpr . ';' @22 xexpr ';' @23 xexpr ')' @24 stmt   (229)

    ';' 	shift  434



state 418

    stmt  ->  SWITCH '(' expr . ')' @25 stmt   (231)

    ')' 	shift  435



state 419

    stmt  ->  CASE expr ':' . @26 stmt   (233)

    @26 	shift  436

    $default	reduce  232  (@26)



state 420

    stmt  ->  DEFAULT ':' @27 . stmt   (235)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  437



state 421

    stmt  ->  RETURN expr ';' .   (239)

    $default	reduce  239  (stmt)



state 422

    stmt  ->  GOTO identifier ';' .   (243)

    $default	reduce  243  (stmt)



state 423

    stmt  ->  ASM maybe_type_qual '(' . string ')' ';'   (240)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ')' ';'   (241)
    stmt  ->  ASM maybe_type_qual '(' . string ':' asm_operands ':' asm_operands ')' ';'   (242)

    STRING	shift  56
    string	shift  438



state 424

    stmt  ->  identifier ':' @28 . stmt   (245)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  439



state 425

    compstmt  ->  '{' pushlevel decls xstmts '}' .   (210)

    $default	reduce  210  (compstmt)



state 426

    stmt  ->  simple_if ELSE @17 . stmt   (218)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  440



state 427

    initlist  ->  initlist ',' init .   (134)

    $default	reduce  134  (initlist)



state 428

    expr_no_commas  ->  '(' typename ')' '{' initlist maybecomma '}' .   (48)

    $default	reduce  48  (expr_no_commas)



state 429

    parm_declarator  ->  parm_declarator '[' expr ']' .   (144)

    $default	reduce  144  (parm_declarator)



state 430

    init  ->  '{' initlist ',' '}' .   (131)

    $default	reduce  131  (init)



state 431

    simple_if  ->  IF '(' expr ')' . @16 stmt   (214)

    @16 	shift  441

    $default	reduce  213  (@16)



state 432

    stmt  ->  WHILE @18 '(' expr . ')' @19 stmt   (222)

    ')' 	shift  442



state 433

    stmt  ->  DO @20 stmt WHILE . @21 '(' expr ')' ';'   (225)

    @21 	shift  443

    $default	reduce  224  (@21)



state 434

    stmt  ->  FOR '(' xexpr ';' . @22 xexpr ';' @23 xexpr ')' @24 stmt   (229)

    @22 	shift  444

    $default	reduce  226  (@22)



state 435

    stmt  ->  SWITCH '(' expr ')' . @25 stmt   (231)

    @25 	shift  445

    $default	reduce  230  (@25)



state 436

    stmt  ->  CASE expr ':' @26 . stmt   (233)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  446



state 437

    stmt  ->  DEFAULT ':' @27 stmt .   (235)

    $default	reduce  235  (stmt)



state 438

    string  ->  string . STRING   (84)
    stmt  ->  ASM maybe_type_qual '(' string . ')' ';'   (240)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ')' ';'   (241)
    stmt  ->  ASM maybe_type_qual '(' string . ':' asm_operands ':' asm_operands ')' ';'   (242)

    STRING	shift  121
    ':' 	shift  447
    ')' 	shift  448



state 439

    stmt  ->  identifier ':' @28 stmt .   (245)

    $default	reduce  245  (stmt)



state 440

    stmt  ->  simple_if ELSE @17 stmt .   (218)

    $default	reduce  218  (stmt)



state 441

    simple_if  ->  IF '(' expr ')' @16 . stmt   (214)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  449



state 442

    stmt  ->  WHILE @18 '(' expr ')' . @19 stmt   (222)

    @19 	shift  450

    $default	reduce  221  (@19)



state 443

    stmt  ->  DO @20 stmt WHILE @21 . '(' expr ')' ';'   (225)

    '(' 	shift  451



state 444

    stmt  ->  FOR '(' xexpr ';' @22 . xexpr ';' @23 xexpr ')' @24 stmt   (229)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  218
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    xexpr	shift  452

    $default	reduce  249  (xexpr)



state 445

    stmt  ->  SWITCH '(' expr ')' @25 . stmt   (231)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  453



state 446

    stmt  ->  CASE expr ':' @26 stmt .   (233)

    $default	reduce  233  (stmt)



state 447

    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ')' ';'   (241)
    stmt  ->  ASM maybe_type_qual '(' string ':' . asm_operands ':' asm_operands ')' ';'   (242)

    STRING	shift  454
    asm_operands	shift  455
    asm_operand	shift  456

    $default	reduce  253  (asm_operand)



state 448

    stmt  ->  ASM maybe_type_qual '(' string ')' . ';'   (240)

    ';' 	shift  457



state 449

    simple_if  ->  IF '(' expr ')' @16 stmt .   (214)

    $default	reduce  214  (simple_if)



state 450

    stmt  ->  WHILE @18 '(' expr ')' @19 . stmt   (222)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  458



state 451

    stmt  ->  DO @20 stmt WHILE @21 '(' . expr ')' ';'   (225)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  459
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 452

    stmt  ->  FOR '(' xexpr ';' @22 xexpr . ';' @23 xexpr ')' @24 stmt   (229)

    ';' 	shift  460



state 453

    stmt  ->  SWITCH '(' expr ')' @25 stmt .   (231)

    $default	reduce  231  (stmt)



state 454

    asm_operand  ->  STRING . '(' expr ')'   (254)

    '(' 	shift  461



state 455

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ')' ';'   (241)
    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands . ':' asm_operands ')' ';'   (242)
    asm_operands  ->  asm_operands . ',' asm_operand   (252)

    ':' 	shift  462
    ')' 	shift  463
    ',' 	shift  464



state 456

    asm_operands  ->  asm_operand .   (251)

    $default	reduce  251  (asm_operands)



state 457

    stmt  ->  ASM maybe_type_qual '(' string ')' ';' .   (240)

    $default	reduce  240  (stmt)



state 458

    stmt  ->  WHILE @18 '(' expr ')' @19 stmt .   (222)

    $default	reduce  222  (stmt)



state 459

    stmt  ->  DO @20 stmt WHILE @21 '(' expr . ')' ';'   (225)

    ')' 	shift  465



state 460

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' . @23 xexpr ')' @24 stmt   (229)

    @23 	shift  466

    $default	reduce  227  (@23)



state 461

    asm_operand  ->  STRING '(' . expr ')'   (254)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  467
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77



state 462

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' . asm_operands ')' ';'   (242)

    STRING	shift  454
    asm_operands	shift  468
    asm_operand	shift  456

    $default	reduce  253  (asm_operand)



state 463

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ')' . ';'   (241)

    ';' 	shift  469



state 464

    asm_operands  ->  asm_operands ',' . asm_operand   (252)

    STRING	shift  454
    asm_operand	shift  470

    $default	reduce  253  (asm_operand)



state 465

    stmt  ->  DO @20 stmt WHILE @21 '(' expr ')' . ';'   (225)

    ';' 	shift  471



state 466

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 . xexpr ')' @24 stmt   (229)

    IDENTIFIER	shift  58
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    '~' 	shift  70
    '!' 	shift  71
    unop	shift  72
    expr	shift  218
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    xexpr	shift  472

    $default	reduce  249  (xexpr)



state 467

    asm_operand  ->  STRING '(' expr . ')'   (254)

    ')' 	shift  473



state 468

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands . ')' ';'   (242)
    asm_operands  ->  asm_operands . ',' asm_operand   (252)

    ')' 	shift  474
    ',' 	shift  464



state 469

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ')' ';' .   (241)

    $default	reduce  241  (stmt)



state 470

    asm_operands  ->  asm_operands ',' asm_operand .   (252)

    $default	reduce  252  (asm_operands)



state 471

    stmt  ->  DO @20 stmt WHILE @21 '(' expr ')' ';' .   (225)

    $default	reduce  225  (stmt)



state 472

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr . ')' @24 stmt   (229)

    ')' 	shift  475



state 473

    asm_operand  ->  STRING '(' expr ')' .   (254)

    $default	reduce  254  (asm_operand)



state 474

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' . ';'   (242)

    ';' 	shift  476



state 475

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' . @24 stmt   (229)

    @24 	shift  477

    $default	reduce  228  (@24)



state 476

    stmt  ->  ASM maybe_type_qual '(' string ':' asm_operands ':' asm_operands ')' ';' .   (242)

    $default	reduce  242  (stmt)



state 477

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 . stmt   (229)

    IDENTIFIER	shift  340
    TYPENAME	shift  27
    CONSTANT	shift  60
    STRING	shift  56
    SIZEOF	shift  61
    IF  	shift  342
    WHILE	shift  343
    DO  	shift  344
    FOR 	shift  345
    SWITCH	shift  346
    CASE	shift  347
    DEFAULT	shift  348
    BREAK	shift  349
    CONTINUE	shift  350
    RETURN	shift  351
    GOTO	shift  352
    ASM 	shift  353
    ALIGNOF	shift  62
    '&' 	shift  63
    '+' 	shift  64
    '-' 	shift  65
    '*' 	shift  66
    PLUSPLUS	shift  67
    MINUSMINUS	shift  68
    '(' 	shift  69
    ';' 	shift  354
    '~' 	shift  70
    '!' 	shift  71
    '{' 	shift  212
    identifier	shift  355
    unop	shift  72
    expr	shift  356
    nonnull_exprlist	shift  74
    expr_no_commas	shift  75
    primary	shift  76
    string	shift  77
    compstmt	shift  359
    simple_if	shift  360
    stmt	shift  478



state 478

    stmt  ->  FOR '(' xexpr ';' @22 xexpr ';' @23 xexpr ')' @24 stmt .   (229)

    $default	reduce  229  (stmt)



state 479

    $   	shift  480



state 480

    $   	shift  481



state 481

    NO ACTIONS
