.TH BOX 3I "15 June 1987" "InterViews" "InterViews Reference Manual"
.SH NAME
Box, HBox, VBox \- group interactors into a box
.SH SYNOPSIS
.B #include <InterViews/box.h>
.SH DESCRIPTION
A box is a scene of interactors that are positioned side-by-side
in the available space.
Interactors are placed left-to-right in a horizontal box, and
top-to-bottom in a vertical box.
.PP
A box will try to stretch or shrink the interactors inside it to fit
the available space.
The natural size of a box is the sum of its elements
along the major axis, and the maximum along its minor axis.
A box's stretchability (shrinkability) is the sum of its elements
along its major axis and the minimum of its elements along its minor axis.
.SH PUBLIC OPERATIONS
.TP
.B "HBox(...)"
.ns
.TP
.B "VBox(...)"
Create a new box.
Zero to four interactors may be passed as arguments;
the interactors are inserted into the box.
.TP
.B "void Delete()"
When a box is deleted, all the interactors inside it are destroyed.
.TP
.B "void HBox::Align(HBoxAlignment)"
.ns
.TP
.B "void VBox::Align(VBoxAlignment)"
Set the alignment mode for the box.
The default alignment for an hbox is \fIBottomEdges\fP;
other choices are \fITopEdges\fP and \fIVertCenters\fP.
The default alignment for a vbox is \fILeftEdges\fP;
other choices are \fIRightEdges\fP and \fIHorizCenters\fP.
.TP
.B "void Insert(Interactor*)"
.ns
.TP
.B "void Change(Interactor*)"
.ns
.TP
.B "void Remove(Interactor*)"
Insert puts an interactor into a box.
Change notifies the box that the interactor's shape has changed
(which might change the box's shape).
Remove takes an interactor out of a box.
.SH SEE ALSO
Glue(3I), Interactor(2I), Scene(2I), Shape(2I)
