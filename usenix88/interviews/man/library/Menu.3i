.TH MENU 3I "15 June 1987" "InterViews" "InterViews Reference Manual"
.SH NAME
Menu, HMenu, VMenu, MenuItem, TextItem \- menu and item interactors
.SH SYNOPSIS
.B #include <InterViews/menu.h>
.SH DESCRIPTION
A menu is an interactor that displays a list of items and selects
an item based on the position of the pointing device.
Items in a menu are arranged vertically in a box.
.B HMenu
is a subclass whose items are arranged horizontally.
.PP
Each item in a menu is also an interactor.
.B MenuItem
is a class of interactors that highlight themselves when the pointing device
enters their canvas, and unhighlights themselves
when the pointing device leaves their canvas.
.B TextItem
is a subclass of
.B MenuItem
that displays a string of characters.
Normally, a subclass of
.B MenuItem
or
.B TextItem
is defined to store context-specific information.
.SH PUBLIC OPERATIONS
.TP
.B "Menu(Sensor*, Painter*)"
.ns
.TP
.B "HMenu(Sensor*, Painter*)"
Create a new menu.
The sensor defines what events the menu will be interested in;
use \fInil\fP to use the default menu sensor.
The painter foreground color defines the color of the menu borders.
.TP
.B "Insert(Interactor*)"
.ns
.TP
.B "Change(Interactor*)"
.ns
.TP
.B "Remove(Interactor*)"
Insert adds a new item to the menu.
Change notifies the menu that an item's shape has changed.
Remove eliminates an item from the menu.
.TP
.B "void Compose()"
After all the items in a menu have been inserted,
Compose builds the box representation of the menu.
.TP
.B "void Popup(Event&, Interactor*&)"
Insert the menu into the root scene centered around the coordinates
associated with the event and
read events until a button is released.
When the target of an event is a menu item, it is marked
as the selected item and passed the event.
Events for other interactors are ignored.
The menu is removed from the root scene when the button is released.
The interactor argument to Popup is set
to the selected menu item or nil if none.
.TP
.B "void Handle(Event&)"
.ns
.TP
.B "void GetSelection(Interactor*&)"
The Handle operation reads events
until a button is released, passing the events
to the appropriate menu items.
GetSelection returns the item that was selected during the most recent
call to Handle.
.TP
.B "MenuItem(Painter*)"
Create a new item with the given painter for \fIoutput\fP.
.TP
.B "TextItem(Painter*, const char*)"
Create a text item with the given painter and string.
The string will be centered in the canvas.
.SH SEE ALSO
Interactor(2I), Painter(2I), Sensor(2I)
