.TH SCROLLER 3I "15 June 1987" "InterViews" "InterViews Reference Manual"
.SH NAME
Scroller, HScroller, VScroller \- scrolling an interactor
.SH SYNOPSIS
.B #include <InterViews/scroller.h>
.SH DESCRIPTION
A scroller is an interactor that manipulates
the perspective of another interactor.
It contains a bar whose position and size reflect
the current origin and size in the interactor's perspective.
.B VScroller
is a class for defining vertical scrollers,
.B HScroller
for horizontal scrollers.
.SH PUBLIC OPERATIONS
.TP
.B "HScroller(Interactor*, int size, Sensor*, Painter*)"
.ns
.TP
.B "VScroller(Interactor*, int size, Sensor*, Painter*)"
Create a scroller of a given size (height for a horizontal scroller,
width for a vertical scroller).
If the size is 0, a reasonable default size is used.
The sensor defines what input events the scroller will be interested in.
If \fInil\fP, then the scroller will create a sensor interested in
on/off events and button events.
The painter will be used to draw the scroller.
.TP
.B "void Handle(Event&)"
The left button shifts the perspective's current origin down,
the right button shifts the origin up, the middle button rubberbands
the scroll bar until the button is released and
then moves the origin to reflect the relative
position of the bar in the scroller.
The scroller calls Adjust on the interactor to update the perspective.
The left and right buttons shift a smaller amount if the shift key
is down.
.TP
.B "void Update()"
Redisplay the scroller to reflect a change
in the interactor's perspective.
.SH SEE ALSO
Interactor(2I), Painter(2I), Perspective(2I), Sensor(2I)
