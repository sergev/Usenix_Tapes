
A low-level base-class implements expandable vectors of generic pointers.

CAVEAT. Lvalues returned by operator[] are volatile, so don't store them 
between accesses to the vector.


  DON'T DO THIS:

	flex_vector fv;
	void * volatile = &fv[0];
	fv[99] = something;
	*volatile = something_else; /* no-no */

  DO THIS INSTEAD:

	flex_vector fv;
	fv[99] = something;
	fv[0] = something_else;

The variable "lub" is intended to be the least-upper-bound of all accesses
to the array, so you typically should only read it, not set it.  

Example use:


	flex_vector vect;  /* assert: lub == 0 */

	/* extend vector at the end */
	while(!done) vect[vect.lub] = get_arg();

	/* terminate it with a null */
	vect[vect.lub] = (char*)0;
