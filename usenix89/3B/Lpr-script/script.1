
#
#The premise this works under is very close to the workings of a uucp
#based script.  3bnet isn't very smart but it will let you send a
#non-prived command to another node on the 3bnetwork.  Using this as a
#background I was able to make it print remotely.
#
#It is essentially a three step process.
#    -> transfer the file(s) to be printed
#    -> issue the local print command on the remote system
#    -> flush the remains.
#
#The following script assumes several points:
#    -> there exists a spooling directory called /usr/spool/rje which
#    has 777 permissions.  Normally nothing is there long enough to
#    get munged by randoms.
#    -> what ever printer driver you use works.  There is a possible
#    race condition under SVR2 if you have two logical descriptions
#    for the same physical device.  This has burned me a couple of
#    times. ( The systems I did this for are PC servers and as such 
#    require a totally raw printer for PC use and a post processed
#    printer for UNIX use)
#    -> the printer is installed as 
#        lpadmin -premote -v/dev/console -i/usr/spool/lp/model/remote
#    -> the permissions files for 3bnet are set so you can have boot
#    root and lp execute remote jobs.
#
#For sake of sanity I have expunged the headers from the script
#itself.  Here headers are generated as part of an external shell
#script and passwd as part of the first file to be printed.  I'll
#leave burster pages up to you.  
#
#The remote machine in this script is named medusa. It is a 3b2/400
#running SVR2.0.4. Its normal load is 15 PC-Interface jobs and one or
#two interactive users.  Printouts normally take less than a minute 
#if the printer is free.  The longest job I have personally printed using
#this is a 66K text file ( /etc/termcap) and a 250K binary ( a lotus
#graph.)
#

