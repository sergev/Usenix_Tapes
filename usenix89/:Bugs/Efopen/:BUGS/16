Relay-Version: version B 2.10.3 4.3bsd-beta 6/6/85; site plus5.UUCP
Posting-Version: version B 2.10.3 4.3bsd-beta 6/6/85; site l5.uucp
Path: plus5!wuphys!wucs!busch!we53!mgnetp!ihnp4!qantel!ptsfa!l5!gnu
From: gnu@l5.uucp (John Gilmore)
Newsgroups: net.lang.c,net.sources.bugs
Subject: Making voids work portably (was re: efopen.c)
Message-ID: <202@l5.uucp>
Date: 21 Oct 85 08:14:31 GMT
Date-Received: 3 Nov 85 16:03:41 GMT
References: <1741@watdcsu.UUCP> <2109@brl-tgr.ARPA> <796@rlgvax.UUCP> <493@ttrdc.UUCP>
Organization: Nebula Consultants, San Francisco
Lines: 10
Summary: Write the code portably, add -Dvoid=int on broken systems
Xref: plus5 net.lang.c:4874 net.sources.bugs:554

In article <493@ttrdc.UUCP>, levy@ttrdc.UUCP (Daniel R. Levy) writes:
> (void)whatever is not supported at all under VAX/VMS C.  It will barf
> severely on (originally) Unix C programs which have been heavily larded with
> (void)'s for the sake of lint.  Not the entire C world is Unix.

Void is well defined and pretty easily portable, though it's true that
many compilers don't fully implement it.  If you write the code
with void, it can be trivially made to work on systems without broken voids
by adding COPTS='-Dvoid=int' to the Makefile -- without source changes.
*That*'s portability...
