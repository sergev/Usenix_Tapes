Relay-Version: version B 2.10.3 4.3bsd-beta 6/6/85; site plus5.UUCP
Posting-Version: version B 2.10.1 6/24/83; site ttrdc.UUCP
Path: plus5!wuphys!wucs!busch!we53!mgnetp!ltuxa!ttrdc!levy
From: levy@ttrdc.UUCP (Daniel R. Levy)
Newsgroups: net.sources.bugs
Subject: Re: Making voids work portably (was re: efopen.c)
Message-ID: <523@ttrdc.UUCP>
Date: 25 Oct 85 17:37:27 GMT
Date-Received: 25 Oct 85 21:47:40 GMT
References: <2316@brl-tgr.ARPA>
Organization: AT&T, Computer Systems Division, Skokie, IL
Lines: 39

In article <2316@brl-tgr.ARPA>, $VK0%CLVM.BITNET@WISCVM.ARPA (Valdis Kletnieks) writes:
>>In article <493@ttrdc.UUCP>, levy@ttrdc.UUCP (Daniel R. Levy) writes:
>>> (void)whatever is not supported at all under VAX/VMS C.  It will barf
>>> severely on (originally) Unix C programs which have been heavily larded with
>>> (void)'s for the sake of lint.  Not the entire C world is Unix.
>
>>Void is well defined and pretty easily portable, though it's true that
>>many compilers don't fully implement it.  If you write the code
>>with void, it can be trivially made to work on systems without broken voids
>>by adding COPTS='-Dvoid=int' to the Makefile -- without source changes.
>>*That*'s portability...
>
>Well, Daniel Levy SAID that he was running it under VAX/VMS C.  This (at
>least as far as I can see) sort of implies that he is running VAX/VMS.
>The problem with adding COPTS='-Dvoid=int' to the Makefile is that "make"
>is NOT a VAX/VMS command.  If we are going to talk about portability, let's
>at least make sure that we have portable utilities as well.  Adding to a
>control file for a non-existent utility will NOT make it all better, no matter
>what the Unixoid life forms out there are trying to convince us...
>
>                      Valdis Kletnieks

Thanks, but I do owe the net a correction on one point.  As someone else point-
ed out, there are 2 versions of VAX/VMS C.  Version 1.0 (which I have) does
not support void, 'tis true.  Someone said there is a Version 2.? which does
support void (I haven't seen it so don't take this as gospel).  If it does,
hurray.  (We got the C compiler from DEC only a couple of months ago, and
were not aware of the existence of a second version.)  De-"void"-ing programs
under this compiler involves editing them (at the least putting in #defines at
the top of each module file)--there is no way I know of passing a define on
the command line, even with the jillion parameters and qualifiers that DEC
gives you for CC, so I couldn't even put that define in a command file.
-- 
 -------------------------------    Disclaimer:  The views contained herein are
|       dan levy | yvel nad      |  my own and are not at all those of my em-
|         an engihacker @        |  ployer or the administrator of any computer
| at&t computer systems division |  upon which I may hack.
|        skokie, illinois        |
 --------------------------------   Path: ..!ihnp4!ttrdc!levy
