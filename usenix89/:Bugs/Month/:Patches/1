Path: plus5!wucs1!mcdchg!clyde!rutgers!husc6!yale!cmcl2!seismo!rochester!pt.cs.cmu.edu!cadre!pitt!gecrd1!unioncs!albany!rpics3b!rpics!itsgw!rpiacm!demon
From: demon@rpiacm.UUCP
Newsgroups: net.sources
Subject: "month" source bug fixes
Keywords: "month" source, bug fixes, Month Visual Calendar, Marc Ries, time management
Message-ID: <245@rpiacm.UUCP>
Date: 21 Mar 87 20:24:53 GMT
Distribution: usa
Organization: RPI-ACM Student Access Unix. Troy, NY
Lines: 115



     I have been trying to get in touch with Marc Ries for a few months now.
Unfortunately I haven't been having much luck.  I think these might be of 
interest to the net also, so I am posting this.  Marc Ries, if you are out
there, please send me a message so I can compare the paths and see why my
mailer has been failing.


Marc,                                                   12/86
     About a month ago I started work on writing a schedule planner in C.
By pure luck I was using a different system than I now regularly use.
While reading some old USEnet messages, I happened on a net.sources copy
of the 10/86 version of 'month'.  Unfortunately I had to leave for vacation
the same day.  About 4 days ago I returned and ported it over to the system
I now use(an AT&T 3b2 running System V).  During the port I noticed that you
were looking for a "cure" for the -B option.  After a few hours of hair-
pulling and muttered curses(that's some piece of code!) I came up with the
enclosed "cure."   I have also included a small mod to 'psched.c' that
reminds the user that s/he should be at an event if s/he is signed on 
during the event.



Real: Michael D. Beyer              "Never underestimate a devious being."
Truly: The Demon                    ..!seismo!rpics!rpiacm!demon
prefered: rpiacm!demon@csv.rpi.edu  Bitnet: userE2VH@RPITSMTS.BITNET
ARPA: userE2VH%itsmts@csv.rpi.edu


     The diffs for month.c:

# Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here
12,13c12,20
<  *   BUGS: The ('-B' option) does not acknowedge events programmed 
<  *         on a repeating ('monthly', etc.) basis.
---
>  * RRC003: The '-B' option does now acknowedges events programmed 
>  *         on a repeating ('monthly', etc.) basis correctly.  Addition
>  *         of the declaration of 'month', 'year', and the 'start_day ='
>  *         line corrected this.  Michael ("The Demon") Beyer 1/87
>  * RRC004: The daemon now reminds you if you are currently on during an
>  *         event as well as just warning of upcoming events.  This was
>  *         done by adding 'remaining' which holds the duration of the
>  *         event in minutes.  This is checked versus 'diff' to see if
>  *         this wake-up of the daemon is during an event. M.D.B. 1/87
30a38
> extern short month, year;       /* RRC003 */
122a131
>                                start_day=get_start_day(month,year); /* RRC003 */
140a150
>         short remaining; /* RRC004 */
164a175,176
>     /* RRC004 */         remaining = ((short)60 * ((short)eptr->duration_hours))
>     /* RRC004 */                     + ((short)eptr->duration_minutes);    
170a183,185
>     /* RRC004 */        if ((diff < 0) && ((-diff) <= remaining)) {
>     /* RRC004 */                remind(eptr->event_string,0);
>     /* RRC004 */        }
# Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here

     The diffs for display.c:
 
# Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here Cut-Here
16,30d15
< /*                      Modification History
<  *
<  * RRC005: The a previous author failed to deal with cases where either
<  *         'shour' or 'ehour' was 12-midnight.  This caused midnight to
<  *         1AM to appear as '0:xxAM' instead of '12:xxAM'.  Michael
<  *         ("The Demon") Beyer
<  * RRC006: Any starting time and duration that caused minutes to be greater
<  *         than 59 was not handled properly.  This caused things like 
<  *         events starting on the half hour and lasting for an hour and
<  *         half to be displayed(via '-B' or 'B') as "xx:60".  Simple
<  *         checks added to fix this.  M.D.B. 1/87
<  *
<  */
< 
< 
50,59c35
<   /* RRC006 */ if (eminute >= 60) {
<   /* RRC006 */     eminute = eminute % 60;
<   /* RRC006 */     ehour++;
<   /* RRC006 */ }
<   /* RRC006 */ if (ehour >= 24) {
<   /* RRC006 */     ehour = ehour % 24;
<   /* RRC006 */ }
< 
<   /* RRC005 */ printw("%2d:%02d%2s-%2d:%02d%2s ",
<   /* RRC005 */        (shour <= 12) ? ((shour == 0) ? 12 : shour) : (shour % 12),sminute,
---
>                printw("%2d:%02d%2s-%2d:%02d%2s ",(shour <= 12) ? shour : (shour % 12),sminute,
61c37
<   /* RRC005 */        (ehour <= 12) ? ((ehour == 0) ? 12 : ehour) : (ehour % 12),eminute,
---
>                       (ehour <= 12) ? ehour : (ehour % 12),eminute,
90,97d65
<   
<   /* RRC006 */ if (eminute >= 60) {
<   /* RRC006 */     eminute = eminute % 60;
<   /* RRC006 */     ehour++;
<   /* RRC006 */ }
<   /* RRC006 */ if (ehour >= 24) {
<   /* RRC006 */     ehour = ehour % 24;
<   /* RRC006 */ }
99,100c67
<   /* RRC005 */ printf("%2d:%02d%2s-%2d:%02d%2s ",
<   /* RRC005 */        (shour <= 12) ? ((shour == 0) ? 12 : shour) : (shour % 12),sminute,
---
>                printf("%2d:%02d%2s-%2d:%02d%2s ",(shour <= 12) ? shour : (shour % 12),sminute,
102c69
<   /* RRC005 */        (ehour <= 12) ? ((ehour == 0) ? 12 : ehour) : (ehour % 12),eminute,
---
>                       (ehour <= 12) ? ehour : (ehour % 12),eminute,
