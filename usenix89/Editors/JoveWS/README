		WORDSTAR EMULATION FOR JOVE

A few weeks ago, I posted a request for help in customizing a version
(any version) of emacs for WordStar emulation.  I got a couple of
replies, including one from Clif Sothoron (lll-crg!seismo!BRL.ARPA!cbsoth)
who provided me with a .joverc customization file for jove.
I discovered that some of the key names have changed (I'm running
version 4.5, which is in the contributed software on the 4.3BSD
distribution tape), and made a few other changes and additions
(e.g. reformat paragraph).

I've included both his version and mine; both are uuencoded because
they include binary characters (I'm amazed that Clif's mail arrived here
intact).   As Clif states in his letter, the macro file is in a binary
format that is machine dependent; it has to be generated from within
jove.  I've included my macro file, which contains only one macro (^Y -
delete line); it was generated on a VAX 11/750 running ULTRIX 1.2.
I don't currently use the other bind-key-to-macro definitions.

Creating macros is described in section 15.5 of the jove manual:

	This will be a bit more difficult if you have ^X already
	bound to something unusual (e.g. next-line for WordStar emulation)

	type ^X(	or	ESC X start-remembering
	type the keystokes to be stored in the macro
	type ^X)	or	ESC X stop-remembering
	ESC X name-keyboard-macro somename
	ESC X write-macros-to-file .jovemacros

	In .joverc, put some read-macros-from-file and bind-macro-to-key
	statements.

In order to put ^S and ^Q into .joverc (using vi), I used stty
to temporarily change my start and stop characters.

I haven't tested these customizations very much, so I'm sure there's
plenty of room for improvement.  I would appreciate feedback and fixes;
also, if anyone converts them to other versions of emacs (e.g. GNU,
microemacs, etc.), I am also interested.

	David Brown	 (415) 945-2199
	Varian Instruments 2700 Mitchell Dr.  Walnut Creek, Ca. 94598
	{zehntel,dual,amd,fortune,rtech,lll-crg,ista,ptsfa,csi}!varian!david


CURRENT PROBLEMS AND NOTES:

For some reason, specifying a file name on the command line causes
auto-fill-mode not to be turned on.

I've bound ^U to yank (unkill a line).

^S and ^Q are bound to keys and "allow-^S-and^Q is set, so terminals
that require flow control at high baud rates (e.g. DEC VT100 at 9600 baud)
will have problems.

There seem to be some problems with reverse video on terminals with the
magic cookie problem (attributes require a space), but this is more
likely a problem in jove or a termcap entry rather than a problem with
this customization.  I normally use a TVI955 (with no-space attributes
selected); I noticed a problem when I was demonstrating jove briefly to
something with a TVI925, and haven't investigated further.  The editor
works OK, you just get annoying reverse video on the screen.

Some of the things that are not implemented:
	^Kx, ^Kd - various ways to exit
	^Qz, ^Qw - scroll continuously up and down 
	block commands
	margin and tab setting
	centering
	ruler lines
	some of the search parameters
	Copy, delete, rename, print files (shell-type activities)
	print controls
	dot commands



REPLIES RECEIVED (thanks Clif & Earl!):

Date:     Thu, 11 Sep 86 9:09:34 EDT
From: Clif Sothoron <varian!lll-crg!seismo!BRL.ARPA!cbsoth>

   I rebound the keys for the jove editor to make jove resemble
Wordstar. The macros created for this purpose are in binary form and are
machine dependent.See the jove manaul for writing your own I had to redo
the macros for VAX, Perkin-Elmer and Gould machines(all running UNIX).
The actual jove tailorings file is not machine specific. By the way I am
unable to post to net.emacs. Could you post this?


-------------------------

Date: Wed, 10 Sep 86 08:21:31 PDT
From: varian!pyramid!pyrps5.earls (Earl Stutes)

There are 2 wordstar .ml files in the maclib that is shipped with
Unipress emacs.  I have not tried it, but there is a conversion
package to "fix up" .ml files so they can be used by GNU.  One of
these things ought to work for you.

Micro emacs has  key binding and macro capability, but the language is
not even mocklisp, so the key binding job could be quite extensive. I
like MicroEmacs and use it exclusively on my PC at home. But then again
I am a emacs hacker here at work, so I don't do much in the way of
"funny" ie. non-emacs key binding because most of the key bindings are
close enough to GNU that I just use them that way.  You will notice that
there is an extensive demo of key binding in MicroEmacs 3.7. The author
includes a file that makes it into a menu driven editor.  I could not
get this to load on my PC, because the stack required was too large for
the support package that comes with my compiler.  Maybe it is exactly
what you are looking for, or at least close enough to make the job easy.

