Path: plus5!wucs1!mcdchg!clyde!ima!mirror!rs
From: rs@mirror.TMC.COM (Rich Salz)
Newsgroups: net.sources.games
Subject: Re: C source for CHESS
Summary: Diff's for BSD and 4.2 curses
Message-ID: <3628@mirror.TMC.COM>
Date: 3 May 87 20:42:58 GMT
References: <2320001@hpltca.HP.COM>
Organization: Mirror Systems, Cambridge MA
Lines: 418

[  Does the program really confuse check and checkmate, or am I
   doing something wrong?  Anyhow, here's diffs for BSD and 4.2
   curses (on my Pyramid 90x, anyhow).  --r$  ]

*** chess.c.old	Sun May  3 16:39:05 1987
--- chess.c	Sun May  3 16:29:05 1987
***************
*** 8,13
  #include <stdio.h>
  #include <curses.h>
  
  #define neutral 0
  #define white 1
  #define black 2 

--- 8,16 -----
  #include <stdio.h>
  #include <curses.h>
  
+ #define BSD
+ 
+ #define DEF_TIME 400
  #define neutral 0
  #define white 1
  #define black 2 
***************
*** 106,111
  unsigned short PV,Swag1,Swag2,killr1[30],killr2[30],killr3[30],Qkillr[30];
  unsigned short Ckillr[3],prvar[30];
  
  
  main()
  {

--- 109,119 -----
  unsigned short PV,Swag1,Swag2,killr1[30],killr2[30],killr3[30],Qkillr[30];
  unsigned short Ckillr[3],prvar[30];
  
+ readline(x, y, prompt, p)
+     int x, y;
+     char *prompt, *p;
+ {
+     char *q;
  
      standout();
      mvprintw(y-1,x-1, "%s", prompt);
***************
*** 107,112
  unsigned short Ckillr[3],prvar[30];
  
  
  main()
  {
    initscr();

--- 115,156 -----
  {
      char *q;
  
+     standout();
+     mvprintw(y-1,x-1, "%s", prompt);
+     standend();
+     ClrEoln();
+     getyx(stdscr, y, x);
+     for (q = p; (*p = getchar()) !=EOF; ) {
+ 	switch (*p) {
+ 	    default:
+ 		p++;
+ 		x++;
+ 		break;
+ 	    case 'L' & 037:
+ 		touchwin(stdscr);
+ 		refresh();
+ 		break;
+ 	    case '\n': case '\r':
+ 		move(y, x);
+ 		*p = '\0';
+ 		return;
+ 	    case '\b':
+ 		if (p > q) {
+ 		    p--;
+ 		    x--;
+ 		}
+ 		break;
+ 	    case 'U' & 037: case '\007': case '\033':
+ 		p = q;
+ 		x = 0;
+ 		break;
+ 	}
+ 	move(y, x);
+ 	ClrEoln();
+     }
+     *p = '\0';
+ }
+ 
  main()
  {
    initscr();
***************
*** 268,275
    ok=quit=false;
    while (!(ok || quit))
      {
!       gotoXY(50,21); printw("Your move is? "); ClrEoln();
!       scanw("%s",s);
        player = opponent;
        VerifyMove(s,&ok);
        if (strcmp(s,"prt") == 0)

--- 312,318 -----
    ok=quit=false;
    while (!(ok || quit))
      {
!       readline(50,21,"Your move is? ", s);
        player = opponent;
        VerifyMove(s,&ok);
        if (strcmp(s,"prt") == 0)
***************
*** 281,286
        if (strcmp(s,"set") == 0) SetBoard();
        if (strcmp(s,"go") == 0) ok = true;
        if (strcmp(s,"help") == 0) help();
        if (strcmp(s,"hint") == 0)
          {
            algbrnot(prvar[2]>>8,prvar[2] & 0xFF);

--- 324,334 -----
        if (strcmp(s,"set") == 0) SetBoard();
        if (strcmp(s,"go") == 0) ok = true;
        if (strcmp(s,"help") == 0) help();
+       if (strcmp(s, "redraw") == 0)
+ 	{
+ 	  ClrScreen();
+ 	  PrintBoard(white,0,0,1);
+ 	}
        if (strcmp(s,"hint") == 0)
          {
            algbrnot(prvar[2]>>8,prvar[2] & 0xFF);
***************
*** 306,313
          }
        if (strcmp(s,"save") == 0)
          {
!           gotoXY(50,21); ClrEoln();
!           printw("file name? "); scanw("%s",fname);
            SaveGame(fname);
          }
        if (strcmp(s,"get") == 0)

--- 354,360 -----
          }
        if (strcmp(s,"save") == 0)
          {
! 	  readline(50, 21, "file name?  ", fname);
            SaveGame(fname);
          }
        if (strcmp(s,"get") == 0)
***************
*** 312,319
          }
        if (strcmp(s,"get") == 0)
          {
!           gotoXY(50,21); ClrEoln();
!           printw("file name? "); scanw("%s",fname);
            GetGame(fname);
            InitializeStats();
            PrintBoard(white,0,0,1);

--- 359,365 -----
          }
        if (strcmp(s,"get") == 0)
          {
! 	  readline(50, 21, "file name?  ", fname);
            GetGame(fname);
            InitializeStats();
            PrintBoard(white,0,0,1);
***************
*** 320,327
          }
        if (strcmp(s,"time") == 0)
          {
!           gotoXY(50,21); printw("enter time: "); ClrEoln();
!           scanw("%d",&response_time);
          }
        if (strcmp(s,"undo") == 0 && GameCnt > 0)
          {

--- 366,373 -----
          }
        if (strcmp(s,"time") == 0)
          {
! 	  readline(50, 21, "enter time:  ", fname);
! 	  response_time = atoi(fname);
          }
        if (strcmp(s,"undo") == 0 && GameCnt > 0)
          {
***************
*** 453,458
        while (c != EOF)
          c = fscanf(fd,"%hd%hd%hd%hd",&GameList[++GameCnt],&GameScore[GameCnt],
                     &GamePc[GameCnt],&GameClr[GameCnt]);
      }
    fclose(fd);
  }

--- 499,505 -----
        while (c != EOF)
          c = fscanf(fd,"%hd%hd%hd%hd",&GameList[++GameCnt],&GameScore[GameCnt],
                     &GamePc[GameCnt],&GameClr[GameCnt]);
+       fclose(fd);
      }
  }
  
***************
*** 454,460
          c = fscanf(fd,"%hd%hd%hd%hd",&GameList[++GameCnt],&GameScore[GameCnt],
                     &GamePc[GameCnt],&GameClr[GameCnt]);
      }
-   fclose(fd);
  }
  
  

--- 501,506 -----
                     &GamePc[GameCnt],&GameClr[GameCnt]);
        fclose(fd);
      }
  }
  
  
***************
*** 588,595
    {
      gotoXY(50,2); printw(".    Exit to Main");
      gotoXY(50,3); printw("#    Clear Board");
!     gotoXY(49,5);
!     printw("Enter piece & location: "); ClrEoln(); scanw("%s",s);
      if (s[0] == '#')
        {
          for (loc = 0; loc < 64; loc++)

--- 634,640 -----
    {
      gotoXY(50,2); printw(".    Exit to Main");
      gotoXY(50,3); printw("#    Clear Board");
!     readline(49,5, "Enter piece & location: ", s);
      if (s[0] == '#')
        {
          for (loc = 0; loc < 64; loc++)
***************
*** 623,628
  NewGame()
  {
  short l,r,c;
  
    mate = quit = reverse = bothsides = post = false;
    lpost =  NodeCnt = epsquare = xkillr = 0;

--- 668,674 -----
  NewGame()
  {
  short l,r,c;
+ char buff[20];
  
    mate = quit = reverse = bothsides = post = false;
    lpost =  NodeCnt = epsquare = xkillr = 0;
***************
*** 636,644
          l = 8*r+c; locn[r][c] = l;
          row[l] = r; col[l] = c;
        }
!   ClrScreen(); gotoXY(1,20);
!   printw("enter response time: "); ClrEoln();
!   scanw("%d",&response_time);
    ClrScreen(); PrintBoard(white,0,0,1);
    InitializeStats();
    ElapsedTime(1);

--- 682,690 -----
          l = 8*r+c; locn[r][c] = l;
          row[l] = r; col[l] = c;
        }
!   ClrScreen();
!   readline(1, 20, "enter response time (or RETURN for default): ", buff);
!   response_time = buff[0] ? atoi(buff) : DEF_TIME;
    ClrScreen(); PrintBoard(white,0,0,1);
    InitializeStats();
    ElapsedTime(1);
***************
*** 649,654
  help()
  {
  char c;
  
  ClrScreen();
  printw("\n");

--- 695,701 -----
  help()
  {
  char c;
+ char buff[10];
  
  ClrScreen();
  printw("\n");
***************
*** 663,668
  printw("switch        switch sides with computer\n");
  printw("go            skip your move\n");
  printw("reverse       reverse board display\n");
  printw("both          computer plays both sides\n");
  printw("time          change response time\n");
  printw("post          post best line of play\n");

--- 710,716 -----
  printw("switch        switch sides with computer\n");
  printw("go            skip your move\n");
  printw("reverse       reverse board display\n");
+ printw("redraw        re-paint display\n");
  printw("both          computer plays both sides\n");
  printw("time          change response time\n");
  printw("post          post best line of play\n");
***************
*** 672,679
  printw("get           get game from disk\n");
  printw("quit          exit CHESS\n");
  refresh();
! while ((c=getchar()) != '\n');
! scanw("%c",&c);
  ClrScreen();
  PrintBoard(white,0,0,1);
  }

--- 720,726 -----
  printw("get           get game from disk\n");
  printw("quit          exit CHESS\n");
  refresh();
! readline(10, 24, "Type return:", buff);
  ClrScreen();
  PrintBoard(white,0,0,1);
  }
***************
*** 766,771
  short r,b[64];
  unsigned short m;
    r = c = 0;
    memset(b,0,64*sizeof(short));
    for (i = GameCnt; i > Game50; i--)
      {

--- 813,821 -----
  short r,b[64];
  unsigned short m;
    r = c = 0;
+ #ifdef	BSD
+   bzero((char *)b, sizeof b);
+ #else
    memset(b,0,64*sizeof(short));
  #endif	/* BSD */
    for (i = GameCnt; i > Game50; i--)
***************
*** 767,772
  unsigned short m;
    r = c = 0;
    memset(b,0,64*sizeof(short));
    for (i = GameCnt; i > Game50; i--)
      {
        m = GameList[i]; f = m>>8; t = m & 0xFF;

--- 817,823 -----
    bzero((char *)b, sizeof b);
  #else
    memset(b,0,64*sizeof(short));
+ #endif	/* BSD */
    for (i = GameCnt; i > Game50; i--)
      {
        m = GameList[i]; f = m>>8; t = m & 0xFF;
***************
*** 801,806
  register short m,u,d,j;
  short piece,i,m0,*aloc,*s;
   
    a = (short *)memset(a,0,64*sizeof(short));
    Dstart[pawn] = Dstpwn[side]; Dstop[pawn] = Dstart[pawn] + 1;
    aloc = &PieceList[side][0];

--- 852,860 -----
  register short m,u,d,j;
  short piece,i,m0,*aloc,*s;
   
+ #ifdef	BSD
+   bzero((char *)a, sizeof a);
+ #else
    a = (short *)memset(a,0,64*sizeof(short));
  #endif	/* BSD */
    Dstart[pawn] = Dstpwn[side]; Dstop[pawn] = Dstart[pawn] + 1;
***************
*** 802,807
  short piece,i,m0,*aloc,*s;
   
    a = (short *)memset(a,0,64*sizeof(short));
    Dstart[pawn] = Dstpwn[side]; Dstop[pawn] = Dstart[pawn] + 1;
    aloc = &PieceList[side][0];
    for (i = 0; i <= PieceCnt[side]; i++)

--- 856,862 -----
    bzero((char *)a, sizeof a);
  #else
    a = (short *)memset(a,0,64*sizeof(short));
+ #endif	/* BSD */
    Dstart[pawn] = Dstpwn[side]; Dstop[pawn] = Dstart[pawn] + 1;
    aloc = &PieceList[side][0];
    for (i = 0; i <= PieceCnt[side]; i++)
-- 
--
Rich $alz					"Drug tests p**s me off"
Mirror Systems, Cambridge Massachusetts		rs@mirror.TMC.COM
{cbosgd, cca.cca.com, harvard!wjh12, ihnp4, mit-eddie, seismo}!mirror!rs
