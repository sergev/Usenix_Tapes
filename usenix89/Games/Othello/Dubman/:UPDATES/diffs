*** othello.c	Mon Nov 24 14:12:35 1986
--- othello.new	Mon Nov 24 14:12:24 1986
***************
*** 13,18 ****
--- 13,20 ----
  
  /* Othello - by Jonathan Dubman - Hard Hat Area - work in progress */
  
+ /* converted to for graphics by falk */
+ 
  /* Version 1.0   - 9/29/86  - grabs as many pieces as it can, plays by rules */
  /* Version 1.1   - 10/2/86  - includes log */
  /* Version 1.1.1 - 10/2/86  - includes suggest */
***************
*** 149,154 ****
--- 151,163 ----
  #include <stdio.h>
  #include <strings.h>
  
+ #include "othello.h"
+ 
+ #ifdef COMMENT
+ 
+ 
+ /* all this stuff commented out now that there's an include file */
+ 
  #define VERSION "1.1.8"
  
  /* Define the best strategy for playing the game : an evaluation function */
***************
*** 251,256 ****
--- 260,266 ----
  struct COORDINATES scanboard();
  
  /*  Miscellaneous global varibles */
+ #endif COMMENT
  
  char p[3] = { '-', 'X', 'O' };	/* board pieces: p[0], p[X], p[O] */
  int listcount;			/* most recently allocated list */
***************
*** 263,268 ****
--- 273,281 ----
  int autolook;				/* lookahead for player when computer
  					   takes over player's position */
  
+ 
+ 
+ #ifndef OTHELLOTOOL
  main()
  {
      struct COORDINATES playermove, computermove;
***************
*** 388,394 ****
--- 401,410 ----
  	printf("A tie.\n");
      }
  }
+ #endif
  
+ 
+ 
  /*  LIST HANDLER ROUTINES */
  
***************
*** 547,557 ****
  	}
      }
  
!     for (x = 0; x <= BOARDSIZE+1, x++;) {
  	board->loc[0][x] = BORDER;
  	board->loc[x][0] = BORDER;
! 	board->loc[BOARDSIZE][x] = BORDER;
! 	board->loc[x][BOARDSIZE] = BORDER;
      }
  }
  
--- 563,573 ----
  	}
      }
  
!     for (x = 0; x <= BOARDSIZE+1; x++) {
  	board->loc[0][x] = BORDER;
  	board->loc[x][0] = BORDER;
! 	board->loc[BOARDSIZE+1][x] = BORDER;
! 	board->loc[x][BOARDSIZE+1] = BORDER;
      }
  }
  
***************
*** 1211,1216 ****
--- 1227,1233 ----
  /*  Initialize the game log */
  init_gamelog()
  {
+     turns = 0;
      gamelog[0].X_count = 2;
      gamelog[0].O_count = 2;
  }
