.pl 0
.(b C
.i
The Game of Reversi
.r
.)b
.pp
.i Reversi
is an old english game, recently "invented" in Japan
under the name Othello. It is played on an 8x8 board, with
pieces which are black on one side and white on the other.
Except
for the initial 4 moves, which must all be made in the centre 4
squares, a legal move consists of placing a piece of one's own
colour on the board so as to "sandwich" a row (orthogonal or
diagonal) of pieces of the opposite colour between the piece just
placed and another piece of the same colour.
All pieces so
sandwiched are flipped over to reveal the colour on the other
side.
.pp
The object is to have more pieces than the opponent at the end
of the game (i.e. when the board is full or neither side has a
legal move).
If you have no legal move, you simply miss a turn.
Black moves first.
.pp
To specify a move, type its coordinates in the form
<letter><digit>.
.pp
There are also a number of other commands.
Some of these
cause evaluations to be printed out - in this case a negative
value means white is winning, a positive one means black is winning.
Some commands take an optional integer argument to specify
a depth \- the default is the current depth of search.
.TS
center;
l lw(40).
Commands:
_
? or h	Print help
q	T{
Quit the current game.
T}
p	T{
Print the position.
T}
t	T{
Switch tracing on or off - with tracing on the
program's estimate of the value of the position
is printed each time it moves.
T}
e	T{
Print the static evaluation of the position;
this is a very unsophisticated type of evaluation.
T}
v<n>	T{
Print the dynamic evaluation of the position, using
a search depth of n (the default is the current depth).
This involves the program searching possible lines of
play up to n moves ahead in order to evaluate the
position.
T}
m<n>	T{
Suggest a move; the program uses its own search strategy
with depth n (default the current depth) to find the
move which it would play in its opponent's position.
T}
s<n>	T{
Set the current search depth to n moves.
If n is missing, the current depth is printed.
At present, n may not be greater than 6; it is set initially to 2.
A beginner should set n to 1 at first.
T}
l<n>	T{
Set the current level of aspiration to n; the higher the
value of n, the higher will be the program's standards
for accepting a move as playable.
If n is missing, the current level is printed.
At present, n may not be greater than 6; it is initially 3.
A beginner should play with n set to 1, and an expert should not normally set
n greater than 5 (at level 6, the program not only tries
to win, but tries to win by the greatest possible margin).
T}
r	T{
Switch remarks on or off; with remarks on, the program
will make comments (usually rude) about the state of play.
T}
u	T{
Undo the last move you made \- this is, of course, cheating
unless you genuinely mistyped it!
T}
>	T{
Save the position on a file - you are prompted for the filename.
T}
<	T{
Restore a position from file.
T}
.TE
.pp
All settings (tracing, search depth, level, remarks) are
preserved from one game to the next.
