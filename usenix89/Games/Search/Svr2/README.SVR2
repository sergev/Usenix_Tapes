                          Overview for sys V r2

Search is composed of two parts - the daemon, and the player.

The daemon does most of the work.  He waits in the wings until someone
connects through a message queue.

This "request to play" is generated by the player process "search".
"search" will look after a file /tmp/SEARCH. If it doesn't exist, "search"
will start the deamon "searchd".

Installation instructions:

1.  If search is being installed by a non-superuser you will have to
make a few changes to the procedure below.  You must change the path
names of the game and score file to something appropriate.
See the variables LIBDIR, OWNER, GROUP and ROOT in the Makefile.

2.  Compile all of the modules by running "make search searchd sscore". The
program "searchwho" hasn't been ported (yet ?).

3.  Run "make install" (not tried), which (hopefully)
will create all the score files,
and move everything to its proper location.  The daemon must have
read and write access to the score files.


How Search Works.

The entire i/o of the game is transmitted over messages.
The screen output comes from the daemon, through the messages
to the player, and then to the screen.  The commands come from the
player to the daemon via that same message.

Score is kept by the daemon, and the score file is updated by it
also.  This results in a slight delay when a player exits the
game.

Should the daemon terminate for any reason, it is possible to look
in a file of errors that the daemon keeps.  While many of the entries
in this file will not be errors, it should give some sort of reason
why it died.  This file is (on our system) "/usr/games/lib/search/errlog".

If it at any time becomes necessary to kill the daemon, please do
so with "kill -INT pid" (not verifyed), as this will let the daemon "clean up"
after itself.

Most of the '#' aliens have been removed from the game (to increase
performance), but left most of the shankers '@' in (since they shoot
back).  For those of you that remember the old game, there is no such
thing as a "virgin" in this version, neither does the program keep
track of the "scab" status from game to game.

The score file print routine is unbelieveably primitive (compared with
the original Greg Ordy cranked out).  Scores are kept by the name
of the player - if from a remote machine, that machine's name is also
included.

Dave Pare <ucbvax!sdcsvax!mr-frog> or <ihnp4!sdamos!mr-frog>
April 1984

Amended by
Matt Crawford	<ihnp4!oddjob!matt> or <crawford@anl-mcs.arpa> or
		<matt@uchicago.csnet> or <x1.crawford@uchicago.bitnet>
July/August 1985


Ported to SVR2 by
Lars Pensj|	 {decvax,philabs}!mcvax!enea!chalmers!myab!lars
Oct 1985
