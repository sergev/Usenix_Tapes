***** A Hackers Guide to Tracer *****
tracer consists of a bunch of files containing a program that does 
ray tracing (No shit sherlock).
Thes files are as follows:
tracer.c:	main() sets up the initial rays and stores values
		in a file. booboo prints an error message and quits.
shade.c:	shade() calculates the intensity returned by a ray. It is
	 	recursive, and also makes a call to refract().
refract.c:	The most difficult part of the program. This file contains
		refract(), inside(), refk() and getcapt().
		and these do all the refraction calculations.
find.c:		contains find(),findo() (for when a ray is inside a ball)
		and shadow() and finds() for shadows.
support.c:	supportive subroutines. right now only contains mt_vec
		as all the others were either discarded or converted to 
		macros.
g_bal.c		g_bal() gets the ball data and points bl[] at them.
g_bod.c		g_bod() loads the floor pattern into suzie.

macros.h	contains all the macro definitions. Definitely to be looked at.
rtd.h		header file containing all the structure definitions.
extern.h	keeps track of all global variables used through the program.

bdata.i		sample ball data file.

pat.def  \
susie.pat >-    sample pattern files. (susie is not for the purient).
ship.pat /

