.TH TIMER 3
.SH NAME
timer, time_left, set_tvec, tvec_timeout, tvec_oldest \- functions for precision timers
.SH SYNOPSIS
#include "timer.h"

TIMER timer (sec)
.br
double sec;

double time_left (t)
.br
TIMER t;

set_tvec (tvec, n, sec)
.br
TIMER tvec [];
.br
unsigned n;
.br
double sec;

unsigned tvec_timeout (tvec, n, si)
.br
TIMER tvec [];
.br
unsigned n, si;

unsigned tvec_oldest (tvec, n)
.br
TIMER tvec [];
.br
unsigned n;

.SH DESCRIPTION
Timer returns a TIMER that will timeout after sec seconds.
A negative or non-discrete sec is allowed.
.br
If sec is constant NO_TIME (larger than any practical sec),
the resulting TIMER will not timeout at all.
This can be used to initialize and turn off timers.

Time_left returns the number of seconds left before t has its timeout.
Thus, if t was last set on sec seconds,
then time_left (t) will return with a value
greater than 0 before sec seconds have elapsed,
and less than or equal to 0 afterwards.
For value NO_TIME, see timer.

The functions below deal with multiple timers.

Set_tvec sets the first n timers in TIMER array tvec to timeout after sec
seconds.
For sec is NO_TIME, see timer.

Tvec_timeout does a circular search in tvec from indices si up to n,
and then from 0 up to si, and returns the index of the first TIMER that has
had a timeout.

Tvec_oldest returns the index of the oldest (and among these the first)
of the n timers in tvec.
Note that this TIMER need not have had a timeout yet.
.SH DIAGNOSTICS
Time_left returns constant NO_TIME if t was turned off.
.br
Tvec_timeout returns n if si >= n, or none of the timers in tvec had a timeout.
.br
Tvec_oldest returns n if all timers in tvec were turned off.
.SH BUGS
Accuracy is limited to whatever the granularity of ftime(2) offers
(about 60 Hz).
.br
You must call a function to notice a timeout.
There is no asynchronous (i.e. signaling) mechanism.
.br
The functions don't notice changes in Daylight Saving or time zone.
.SH "SEE ALSO"
time(2).
