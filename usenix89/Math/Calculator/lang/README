
:
: Here's a little scientific calculator that I had been implementing
: It is not as complete as I would like it to be but I do not
: have the time to clean up the display (in scientific notation only), etc.
:
: You can compile either as a desk accessory or as a program.
: Look for the line #define ACCESSORY in the file calculat.c
: If ACCESSORY is defined, you get the accessory version, that has too be
:    linked with    LINK68 [so[calclacc.inp]]
: If ACCESSORY is undefined, you get the program version, that has to be
:    linked with    LINK68 [so[calclink.inp]]
:  -- check the .inp files in order to assure the linker looks at the
:	right place for the libraries.
: Features: after pressing the OFF button, a window appears with the numbers
:     that were on display.  Pressing the closer button then exits the program,
:	whereas pressing the fuller button brings back the calculator. 
:	This is more useful with the desk accessory version.
:	-- the calculator is RPN.
:
: Limitations: 10 level deep stack.
:	       Number is entered in a regular (GEM) editable field,
:			so : you have to press return, or click in that window.
:			If you don't the window gets messed up and the
:			number that was in it is ignored.  Note that
:			you can press <ESC> to clear the field.
:		atan is not in my libf, so I made one.  I don't care about
:			speed, but the accuracy should be good.
:	-- the calculator is RPN.
:
:	Have fun.  Oh yeah, the code is not copyrighted, but I would
:	appreciate if you mentionned my name if you use portions  of it.
:
:
