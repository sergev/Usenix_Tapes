.TH IC 1 motel6
.SH NAME
ic \- interpretive calculator, yet another desk calculator
.SH SYNOPSIS
ic [ file ... ]
.SH DESCRIPTION
\fIIc\fP is an attempt at a more useful calculator than provided by
\fIbc\fP(1).  Instead of using arbitrary precision integers (or fixed
point numbers), \fIic\fP uses simple floating point numbers.
.PP
As a further aid, \fIic\fP has many standard mathematical functions
pre-programmed and, of course, it can be programed by the user as
well.
.PP
The input language more closely resembles C than \fIbc\fP; \fIelse\fP,
\fI&&\fP and \fI||\fP are supported while \fBnewline\fP only terminates
statements at ``reasonable'' times.  \fBNewline\fP terminates either
expressions or single statements typed by the user, inside compound
statements or  function definitions, only a \fB;\fP terminates.
This is designed to be more ``natural'' than \fIbc\fP was when
writing function definitions.
.PP
The syntax for \fIic\fP programs is as follows; name means
a sequence of letters, digits and _ not starting with a digit; E means
expression; S means statement.

.nf
Comments are enclosed in /* and */

Names
	simple variables: name
	array elements: name[E]([E]...)

Other operands
	floating point numbers - can include exponent, need not
		include decimal point nor sign.
	octal numbers - start with a 0, eg 014 is the same as 12.
	hexdecimal numbers - start with "0x", eg 0x1a is the same as 26.

	(E)
	
	name (E)

Operators
	++ --		(prefix and postfix, apply to names)
	- !		(unary minus, logical not and factorial)
	^		(power)
	* / %		(% is modulus)
	+ -
	<= >= < >
	== !=
	|| &&
	?:
	=

Stat
	E;
	{S ... S}
	if (E) S
	if (E) S then S
	while (E) S
	do S while (E);
	for (opt-E;opt-E; opt-E) S
	;
	break;
	continue;
	return E;

Function definitions
	define name (name,...,name)
	{
		auto name, name;
		
		S ... S
	}

Builtin functions
	exp, log, log10, pow, sqrt, fabs, floor, ceil,
	hypot, j0, j1, jn, y0, y1, yn, sin, cos, tan,
	asin, acos, atan, atan2, sinh, cosh, tanh, printf
	
	Note: trig functions take and return arguments in
	degrees - not radians!
	
	Printf accepts a reasonable sub-set of the stdio
	library version:  %d, %e, %c, %g, %f, %s, %o work
	as expected.

	These functions are adapted from the C math library and,
	further questions about algorithm and argument usage
	should be directed to the manual.
	
Other commands:
	quit			exit ic
	read "file"		read commands from a file
	expr1 # expr2		print expr1 in base expr2
	
.fi
All function arguments are passed by value.

For example (taken from the \fIbc\fP manual:

.nf
define exponent(x)
{
	auto	a, b, c, i, s;
	
	a = 1;
	b = 1;
	s = 1;
	for (i = 1;; i++) {
		a = a * x;
		b = b * i;
		c = a/b;
		if (abs(c) < 1e-6 == 0)
			return s;
		s = s + c;
	}
}
.fi
defines a functino to compute an approximate value of the exponential
function and

.nf
	for (i = 1; i < 10; i++)
		printf ("%g\n", exponent (i));
.fi

prints approximate values of the exponential function of the first
ten integers.
.SH BUGS
Ha!
