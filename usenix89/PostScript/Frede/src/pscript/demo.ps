%!
% a demo of lots of nifty things you can do on a LaserWriter
% - Stephen Frede

(demo starting) print flush
/cm { 28.3465 mul } def
/ps { print flush } def

clippath pathbbox pop pop translate 10 10 translate
clippath pathbbox /pgtop exch def /pgright exch def pop pop


% greyscale

/width 1 cm def
/step 0.5 cm def
/greyscale {
	/left exch def
	0 step pgtop
	{
		/val exch def
		val pgtop div setgray
		newpath
		% draw a box
		left val moveto
		width 0 rlineto
		0 step rlineto
		0 width sub 0 rlineto
		closepath
		fill
	} for
	0 setgray
} def

0 greyscale

60 15 { dup mul exch dup mul add 1 exch sub } setscreen
1.5 cm greyscale
100 45 { dup mul exch dup mul add 1 exch sub } setscreen
3 cm greyscale
10 45 { dup mul exch dup mul add 1.0 exch sub } setscreen
4.5 cm greyscale
60 45 { dup mul exch dup mul add 1 exch sub } setscreen


6 cm 0 translate

% available fonts

/x 1 cm def /y pgtop 1 cm sub def
/s { show /y y 20 sub def } def
/m { x y moveto } def
/f { findfont 15 scalefont setfont } def
/fm { f m } def
/Times-Roman fm (Times Roman (R)) s
/Times-Bold fm (Times Bold (B)) s
/Times-Italic fm (Times Italic (I)) s
/Times-BoldItalic fm (Times Bold Italic (BI)) s
/Helvetica fm (Helvetica (H)) s
/Helvetica-Bold fm (Helvetica Bold (HB)) s
/Helvetica-Oblique fm (Helvetica Oblique (HO)) s
/Helvetica-BoldOblique fm (Helvetica Bold Oblique (HX)) s
/Courier fm (Courier (C)) s
/Courier-Bold fm (Courier Bold (CB)) s
/Courier-Oblique fm (Courier Oblique (CO)) s
/Courier-BoldOblique fm (Courier Bold Oblique (CX)) s
/Symbol fm (abcdefg ABCDEFG ) show /Times-Roman f ((S)) s

% sizes

x 10 moveto
/currfont /Helvetica findfont def
/r { /txt exch def currfont exch scalefont setfont txt show } def

3 (A) r
4 (B) r
6 (C) r
8 (D) r
10 (E) r
15 (F) r
20 (G) r
30 (H) r
50 (I) r
70 (J) r

% white on black

20 0 rmoveto
currentpoint pop /x exch def
x 0 moveto
0 80 rlineto x 0 rlineto 0 -80 rlineto closepath fill
/currfont /Times-Bold findfont def
1 setgray
x 10 moveto
70 (K) r
50 (L) r
30 (M) r
20 (N) r
15 (O) r
10 (P) r
8 (Q) r
6 (R) r
4 (S) r
3 (T) r

0 setgray

% shadow

/shadow
{
	/text exch def
	1 -0.1 -0.1
	{
		setgray -0.7 0.7 rmoveto
		currentpoint text show moveto
	} for
	0 setgray
} def

/Times-Roman findfont 30 scalefont setfont
7 cm 26 cm moveto
(Shadow) shadow

gsave
/Times-Italic findfont 30 scalefont setfont
/printzip
{ 0 0 moveto (Zip) show } def
12 cm 26 cm translate
.95 -.05 0 { setgray printzip -1 .5 translate} for
1 setgray printzip
grestore

% outline
8 cm 25 cm moveto

/makeoutlinedict 5 dict def
makeoutlinedict begin
/basefontdict /Times-Roman findfont def
/outfontdict basefontdict maxlength 1 add dict def
basefontdict
{
	exch dup /FID ne
	{ exch outfontdict 3 1 roll put }
	{ pop pop }
	ifelse
} forall
outfontdict /FontName /Times_Out put
outfontdict /PaintType 2 put
outfontdict /StrokeWidth 3 put
/Times_Out outfontdict definefont pop end
/Times_Out findfont 30 scalefont setfont

(Outline) show

% ellipse

/ellipsedict 8 dict def ellipsedict /mtrx matrix put
/ellipse {
	ellipsedict begin
	/yrad exch def /xrad exch def /y exch def /x exch def
	/savematrix mtrx currentmatrix def
	x y translate xrad yrad scale
	newpath 0 0 1 0 360 arc
	savematrix setmatrix
	end
} def

% Star Lines

/Times-BoldItalic findfont 27 scalefont setfont
/rays {
	0 1.5 179
	{ gsave
		rotate 0 0 moveto 108 0 lineto stroke grestore
	} for
} def

gsave
10 cm 15 cm moveto
(StarLines) true charpath clip
newpath 54 -15 translate rays
grestore

% circle laser
/Helvetica-Bold findfont 30 scalefont setfont
/oshow	% stack: (string)
{ true charpath stroke } def
/circleofAdobe
{
	15 15 345
	{
		gsave rotate 0 0 moveto (Adobe) oshow grestore
	} for
} def
gsave
4 cm 10 cm translate
0.5 setlinewidth
circleofAdobe
0 0 moveto (Adobe Systems) true charpath gsave 1 setgray fill grestore stroke
grestore

% star lines
/Times-BoldItalic findfont 2 cm scalefont setfont
/rays
  { 0 1.5 179
    { gsave rotate 0 0 moveto 5 cm 0 lineto stroke grestore } for
} def
gsave
1 cm 3.5 cm translate
.25 setlinewidth
newpath 0 0 moveto (StarLines) true charpath clip
newpath 3.9 cm -0.5 cm translate rays
grestore


% pattern

/bitison
{
	/ybit exch def /xbit exch def
	bstring ybit bwidth mul
	xbit 8 idiv add get
	1 7 xbit 8 mod sub bitshift
	and 0 ne
} def

/setpattern
{
	/freq exch def
	/bwidth exch def
	/bpside exch def
	/bstring exch def
	/onbits 0 def /offbits 0 def
	freq 0 {
		/y exch def /x exch def
		/xindex x 1 add 2 div bpside mul cvi def
		/yindex y 1 add 2 div bpside mul cvi def
		xindex yindex bitison
		{ /onbits onbits 1 add def 1 }
		{ /offbits offbits 1 add def 0 }
		ifelse
		} setscreen
	{} settransfer
	offbits offbits onbits add div setgray
} def

<d1e3c5885c3e1d88> 8 1 300 32 div setpattern

5 cm 15 cm 4 cm 1.5 cm ellipse fill

<3e418080e3140808> 8 1 300 32 div setpattern

12 cm 22 cm moveto 14 cm 1 cm -6 cm rlineto -2 cm 0 rlineto closepath fill

3 { copypage } repeat erasepage

(demo finished) print flush


% ---- %

??
