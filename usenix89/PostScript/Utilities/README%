
README file

This posting contains 5 files.

template.ps -- file of neat little PostScript procedures that handle 
	centering, flush right, and wrapping of text, and some other stuff.
	Comments within say what is really going on.
	
The other four are small PostScript applications wrapped up in shell scripts.
They take zero or more command line arguments, and print some kind of pretty
picture. They currently use lpr as the spooler. If you do not have lpr, then
you should go through and change the variable called "spooler" which is set
near the top of the program.

You should be aware that the shell "wrappings" of these programs are not
robust. Error checking beyond number of parameters is not performed. They
are basically just nice ways of spooling PostScript programs.

If you do not have the Bourne shell, then clip out the shell stuff, and 
reconstruct some real PostScript program.

Note that if a font is not defined on your device, what PostScript does is 
device dependent. On the LaserWriter, it defaults the font to Courier. To
find out which fonts you have, run fontnames first (see below). Also note that
where a string is called for, PostScript strings without the parentheses are
taken. Therefore, you can use all the backslash escapes understood by 
PostScript. All the "Try this:" suggestions below assume you are using a 
LaserWriter Plus. Enter the stuff after the colon on these lines exactly as
shown.

This is what these things do:

fillchar InsideTextFontName InsideText Lines Size ShapeStrFontName ShapeStr
																	GrayLevel
	[Type the above all on one line!] Prints ShapeStr in font given by 
	ShapeStrFontName and size Size as an outline, then fills it
	with gray of level GrayLevel (1 = white, 0 = black), then writes InsideText
	repeatedly in font given by InsideTextFontName within the outline to fill 
	up Lines lines of text. The size that InsideText is printed in is figured
	out in PostScript. If ShapeStr is to long, PostScript might think that the
	path that it defines is too complicated to be a clipping path and it will
	bomb with a limit check error.

	Try this: fillchar ZapfChancery-MediumItalic PostScript 5 600 ZapfDingbats
'\244' 0.85

fontnames
	Prints the name of each font known to PostScript in that font. One font
	name is printed per line.
	
	Try this: fontnames
	
mapfont [font1 [font2]]
	Maps one font to another. Prints octal character code, character in font1,
	and character in font2 for each ASCII code between 0 and 255. If only one
	font is given, the mapping is from Courier to that font, if none are given
	than it is from Courier to Helvetica. 
		
	Try this: mapfont Times-Roman ZapfDingbats
	
scaleshow String Font Size LinesInScale
	Fills a shape given by String in font Font and size Size (that is, 
	the shapes of the characters if they were so pritned) with a grayscale with 	LinesInScale gradations. Light gray is on top, dark gray on the bottom.			PostScript limit check error is possible for large String.
						
	Try this: scaleshow '\360' Symbol 600 7
	
