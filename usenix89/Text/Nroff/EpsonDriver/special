This is a test of the special character set.
.sp
.nf
.ta 2i 4i 6i
ALPHA \(*A	alpha \(*a	BETA \(*B 	beta \(*b
GAMMA \(*G	gamma \(*g	DELTA \(*D 	delta \(*d
EPSILON \(*E 	epsilon \(*e	ZETA \(*Z 	zeta \(*z
ETA \(*Y 	eta \(*y	THETA \(*H 	theta \(*h
IOTA \(*I 	iota \(*i	KAPPA \(*K 	kappa \(*k
LAMBDA \(*L 	lambda \(*l	MU \(*M 	mu \(*m
NU \(*N 	nu \(*n	XI \(*C 	xi \(*c
OMICRON \(*O 	omicron \(*o	PI \(*P 	pi \(*p
RHO \(*R 	rho \(*r	SIGMA \(*S 	sigma \(*s
TAU \(*T 	tau \(*t	UPSILON \(*U 	upsilon \(*u
PHI \(*F 	phi \(*f	CHI \(*X 	chi \(*x
PSI \(*Q 	psi \(*q	OMEGA \(*W 	omega \(*w
1/4  \(14	1/2  \(12	3/4  \(34	degree \(de
dagger \(dg	double dagger \(dd	footmark \(fm	cent sign \(ct
registered \(rg	copyright \(co	math +  \(pl	math -  \(mi
math =  \(eq	math *  \(**	section  \(sc	underrule \(ul
acute accent \(aa	grave accent \(ga	backslash \(sl	square root \(sr
root en extender \(rn	plus minus \(+-	>= \(>=	<= \(<=
identically = \(==	approx. = \(~=	approximates \(ap	not equal \(!=
right arrow \(->	left arrow \(<-	up arrow \(ua	down arrow \(da
multiply \(mu	divide \(di	union \(cu	intersection \(ca
subset of \(sb	superset of \(sp	improper subset \(ib	improper superset \(ip
infinity \(if	partial \(pd	gradient \(gr	not \(no
integral \(is	proportional to \(pt	empty set \(es	member of \(mo
box verticle rule \(br	Bell System Logo \(bs	right hand \(rh	left hand \(lh
or \(or	circle \(ci	left to curly \(lt	left bottom \(lb
right top curly \(rt	right bottom \(rb	left center curly \(lk	right center \(rk
left floor \(lf	right floor \(rf	left ceiling \(lc	right ceiling \(rc
bold verticle \(bv	bullet \(bu	square \(sq
.sp 2
.ft B
Greek Characters
.ft P
\(*a\(*b\(*g\(*d\(*e\(*z\(*y\(*h\(*i\(*k\(*l\(*m\(*n\(*c\(*o\(*p\(*r\(*s\(*t\(*u\(*f\(*x\(*q\(*w
\(*A\(*B\(*G\(*D\(*E\(*Z\(*Y\(*H\(*I\(*K\(*L\(*M\(*N\(*C\(*O\(*P\(*R\(*S\(*T\(*U\(*F\(*X\(*Q\(*W
.sp 2
.in 1i
.ft B
A Big Equation - \fIFrom the EQN User's Guide\fP
.ft R
.sp
.EQ
G(z)~mark =~ e sup { ln ~ G(z) }
~=~ exp left [
sum from k>=1 {S sub k z sup k} over k right ]
~=~ prod from k>=1 e sup { S sub k z sup k /k}
.EN
.sp 2
.EQ
lineup =~ left ( 1 + S sub 1 z +
{ S sub 1 sup 2 z sup 2 } over 2! + "..." right )
left ( 1 + {S sub 2 z sup 2 } over 2
+ { S sub 2 sup 2 z sup 4 } over { 2 sup 2 ~ 2! }
+ "..." right ) "..."
.EN
.sp 
.EQ
lineup =~ sum from m>=0 left {
sum from
pile { k sub 1 ,k sub 2 ",...," k sub m >=0
above
k sub 1 +2k sub 2 ",...," +mk sub m = m }
{S sub 1 sup {k sub 1} } over {1 sup k sub 1 k sub 1 ! } ~
{S sub 2 sup {k sub 2} } over {2 sup k sub 2 k sub 2 ! } ~
"..."
{S sub m sup {k sub m} } over {m sup k sub m k sub m ! } ~
right } z sup m
.EN

