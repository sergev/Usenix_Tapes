
Below is included a nice little feature program, it can be used as an
alternative to su(1) or in conjunction with it.

The advantages of the program compared to the su program is that it
is able to take a command as argument(s) and execute the command with
the permission of the suid-user (default root).

Another advantage is that you the SA, can define certain users to be
able to gain super-user priviledges (temporarily or permanent) by
writing their names in the file "/etc/sus.allow" (make sure only root
has write permission to this file!!!!). The users you define in this
file are able to use the program without having to bother about
passwords.

It really comes handy when you don't want to run a root-shell for a long
time (affraid of making mistakes as rm'ing files you didn't want to) and
don't want to have all the troubles of using standard su and giving
password each and every time. Yes I'm running SYSV, and don't have
access to the nice feature of suspending a process )-; But to give you
some clues to the effectiveness some examples are provided:

	% id
	uid=100(kimcm) gid=1(staff)
	% cat /etc/sus.allow
	kimcm
	% sus vi /etc/passwd	; edit the password file as superuser.
	% sus joe vi ~joe/.login	; edit poor Joe's crashed loginfile
	% sus				; run a root-shell
	% sus joe			; run a shell-suid to joe
	% login joe			; login as a casual user...
	$ sus
	password: <not-superuser password>
	sorry Buster!
	$				; Still joe


Hope you'll find this little utility handy and not to risky to use in
your environment.
Best Regards
					Kim Chr. Madsen
					kimcm@olamb.UUCP


