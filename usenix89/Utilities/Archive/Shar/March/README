
	  Yet another SHAR ?!? Good lord, why in the world would anyone
	create still one more of these? I must confess that of all the
	many variants I have kicking around, there wasn't one that did
	the combination of creeping through directories and packing the
	data into mailable pieces. This SHAR supposedly does that plus
	the usual garbage.
	  Enough justification, here are the command line switches it
	accepts:

	-c		=	Creates code for checking file sizes.
	-f <name>	=	The only required switch, it defines
				the archive root. Archive files will
				be called "<name>.shr1" and so on.
	-i		=	Usually the files to be archived are
				specified in the command line. This
				causes the file names to be taken from
				the standard input.
	-m <number>	=	This redefines the target number of bytes
				per archive. The default is 60000.
	-o		=	Causes code to over writing existing files,
				by default this is not done.
	-p		=	The original permissions are given to the
				un-SHAR-ed files.
	-q		=	The un-SHAR-ing doesn't print out status.

	Oh boy, how about an example?

		shar -f junk *.c

	Will generate archive files like "junk.1", "junk.2" ... where
	each is about 60Kb in size. Or for macho folks:

		ls *.c | shar -f junk -m 1000000 -c -i

	creates "junk.*" files about 1Mb each, with checking and gets its
	file names from a pipe (oooh, aaah).
	  My original version was BSD 4.[23] specific in that it used the
	function "scandir()". Well thanks to the gracious efforts of
	Bob Esposito, a system V version of "scandir()" is now available
	(thunderous applause). The system V folks need only change the
	CFLAGS line to include "-DSYSV" and they too can be SHAR-ing to
	their hearts delight.
	  Bug reports and/or comments can be sent to the creature
	indicated below.

-Rogue Monster                                   (also known as Roger March)
UUCP: {decvax,ucbvax,ihnp4,hplabs}!decwrl!mips!roger
USPS: MIPS Computer Systems, 930 Arques, Sunnyvale, CA 94086, (408) 991-0220
