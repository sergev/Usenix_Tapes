
P='[0-9A-Za-z_-][0-9A-Za-z_-]*'		# pattern for sed script

sed 's/	/ /' $*				| # kill off tabs
awk '					# kill off here document text
  {
    if (hd == 1) {			# here document text
      ss2 = $0				# get test string
      while (substr(ss2,1,1) == " ")
        ss2 = substr(ss2,2)
      if (index(ss2,ss) == 1) {		# end of here text
        hd = 0
        next
      }
    }
    else				# not here document text
      print $0
  }

  /<</ {				# start of here document?
    if (hd == 1)			# no, already in one
      next
    hd = 1				# yes, set up flags
    ss = $0
    ss = substr(ss,index(ss,"<<")+2)
    while (substr(ss,1,1) == " ")
      ss = substr(ss,2)
    fc = substr(ss,1,1)
    if (fc == "'\''") {			# single quotes used
      ss = substr(ss,2)
      ssq = index(ss,"'\''")
      ss = substr(ss,1,ssq-1)
    }
    else if (fc == "\"") {		# double quotes used
      ss = substr(ss,2)
      ssq = index(ss,"\"")
      ss = substr(ss,1,ssq-1)
    }
    else {				# no quotes used
      if (fc == "\\")
        ss = substr(ss,2)
      if ((sse = index(ss," ")) > 1)
        ss = substr(ss,1,sse-1)
    }
  }
'					|
#
# Note that this code is more than a little bit paranoid.  Keep it
# that way...  The code is also rather sprawling, since there seem
# to be about twenty gazillion different versions of shar floating
# about.  Last, if you don't know what it is, don't play with it!!
#
sed '					# kill off shar noise
  /^ *\/bin\/echo [^`;|(>]*$/d
  /^ *\/bin\/echo [^`;|(>]*; \/bin\/ls [^`;|(>]*$/d
  /^ *\/bin\/ls [^`;|(>]*$/d
  /^ *echo [^`;|(>]*$/d
  /^ *echo [^`;|(>]*([^`;|(>]*)'\'' *$/d
  /^ *echo [^`;|(>]*; ls [^`;|(>]*$/d
  /^ *echo [^`;|(>]*`wc [^`;|(>]*` *$/d
  /^ *else *$/d
  /^ *exit *[0-9]* *$/d
  /^ *fi *$/d
  /^ *fi #[^`;|(>]*$/d
  /^ *if \[ [0-9A-Za-z]*\$'$P' = '$P' ]; then *$/d
  /^ *if \[ `wc -c < [^`;|(>]*` != '$P' ]; then *$/d
  /^ *if test -f '\''[^`;|(>]*'\'' *$/d
  /^ *if test '$P' != \$1 *$/d
  /^ *if test '$P' -ne "`wc -c [^`;|(>]*`" *$/d
  /^ *if test '$P' -ne "`wc -c '\''[^`;|(>]*'\''`" *$/d
  /^ *if test '$P' -ne "`wc -c < '\''[^`;|(>]*'\''`" *$/d
  /^ *ls [^`;|(>]*$/d
  /^ *set `sum [^`;|(>]*` *$/d
  /^ *then *$/d
  /^ *wc [^`;|(>]* | sed [^`;|(>]* | diff -b \$'$P' - *$/d
  /^ *'$P'='$P' *$/d
'
exit 0			# sh doesn't like signature text...
