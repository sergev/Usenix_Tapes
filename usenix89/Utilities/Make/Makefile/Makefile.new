
#!/bin/sh
#
MAKEFILE=makefile.new
BINDIR=/usr/jdl/bin
FLAGS="-O -DBSD -DPURDUE"

if [ $# -lt 1 ]
    then
	echo usage: $0 binary ...
	exit 1
    elif [ -f $MAKEFILE ]
	then
	    echo $MAKEFILE exists
	    exit 1
	else
		echo Creating $MAKEFILE for binaries $@
    fi

#
#	Set up the invariant stuff in the makefile header ...
#
echo "##
#	Makefile for $@
#	Generated by $USER	`$BINDIR/jdate`
#
#	This should be renamed Makefile after editing ...
#
HOME	= $HOME
BINDIR	= $HOME/bin
LIBDIR	= $HOME/lib
SRCDIR	= `pwd`
OWNER	= "-o $USER"
CFLAGS	= $FLAGS
PRINTER	= lpr
BINARYS	= $@
HEADERS	= `echo *.h`
SOURCES	= `echo *.c`
OBJECTS = `echo *.c | sed 's/\.c/\.o/g'`" > $MAKEFILE

#
#	Set up templates for each of the binary's object files ...

#
for BINARY
    do
	echo "OBJ_${BINARY}	=	" >> $MAKEFILE
    done

#
#	Set up the "standard" targets
#
echo '
all:	${BINARYS}

print:	Makefile ${HEADERS} ${SOURCES}
	pr -f $? | ${PRINTER}
	touch print

clean:
	rm -f a.out core ERRS ${BINARYS}
	rm -f *.o ,*

depend:	${HEADERS} ${SOURCES}
	cp Makefile Makefile.bak
	sed -n "1,/^# DO NOT DELETE/p" Makefile > Makefile.new
	cc -M ${CFLAGS} ${SOURCES} >> Makefile.new
	mv Makefile.new Makefile

' >> $MAKEFILE

#
#	Set up the installation of binaries ...
#
echo "install:	all" >> $MAKEFILE
for BINARY
    do
echo "	install -s \${OWNER} $BINARY \${BINDIR}/$BINARY" >> $MAKEFILE
    done
echo "" >> $MAKEFILE
	
#
#	Add a template for each of the binaries on the command line
#
for BINARY
    do
	echo "$BINARY:	\${OBJ_${BINARY}}
	cc \${CFLAGS} -o \$@ \${OBJ_${BINARY}}
" >> $MAKEFILE
    done

#
#	Tack on dependency information ...
#
echo "# DO NOT DELETE THIS LINE  --  make depend uses it" >> $MAKEFILE
cc -M $FLAGS *.c >> $MAKEFILE
#
#	Now allow user to fix up the makefile ...
#
echo Done.
# echo Editing new makefile ...
# vi $MAKEFILE
